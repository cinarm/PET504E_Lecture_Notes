%!PS-Adobe-2.0
%%Creator: dvips(k) 5.99 Copyright 2010 Radical Eye Software
%%Title: PET504E_Lecture_Notes.dvi
%%CreationDate: Sat Jan 21 17:07:44 2012
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX12 CMR17 CMR12 CMR9 CMR10 CMR7 CMR6 CMTI9 LINE10
%%+ CMBX9 CMMI10 Times-Roman CMMI9 CMMI7 CMSY10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe PET504E_Lecture_Notes.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2012.01.21:1707
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 327 2010-05-24 15:54:43Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.07, 2009/04/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep div cvi def
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  XA Shift sub YA Shift sub moveto 
  gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
  Symbol show grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  showpoints 
    { ] aload /Points ED } 
    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    0 exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop 0 Lineto
      n { 2 copy moveto pop 0 Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop 0
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    startAngle rotate Symbol show 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} 
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if
    Symbol show 
    grestore
  }
  pathforall 
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
%%%%%%%%%%%%%%%%% tools %%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 350 2010-06-18 05:18:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.02, 2010/06/08
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 130 2009-08-27 08:55:03Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /approxequal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D454ACC5A5FC541F4E5B275B18025B91BA0D16F
F764CAD056716CD1254BFD1872F5ECAEA08B1AF08D7A4B698A50ADF686D79C2B
3B14B7CD39829FAA5F4121FFC28C6B12BF34EEC23185E57E2BEA6B98A34554D9
61922841C81D6A50650E042F5D922FF39226C9BA7A265C2087E25723E22C03C1
527C4CA23F04CF5A38E84583AE37C05355FD29C9B82A24367490FFAA220EDDD1
F335C6F00357AED8DCBF6D42845459982AFF512B6B8C9CC6E6AD4ACCD21D7207
C1E7884A97A13873B23D83AE51A2BA73CE81A45291F684181AB99AB9F7120935
22E1F7C3C5B4F5439A6041E5E1191679913FCC51967BDD0BB5AFBC2A4FE8F4AC
C2969644E4ADBCDD56E3CB994FF8C4F39B6E2F2D0D6B0D7B112257A64E6A2831
44C1709CB94937FAA07822C92E0535C02C95E4DBD0E81C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/UniqueID 5087382 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /mu put
dup 104 /h put
dup 105 /i put
dup 107 /k put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D272B5B1617BAC2B0CB510
5DD5EC6F7ED1226D19189FF547776698FD48B7A6A038131F869A9E24006A4FCB
9FDD5E4A6DA9C531E1F1D1F0131CF8BF06B78BD2C6109E3D5251ACCAA6661142
7E0CF66D8C1998ED3DDDF69890FB2039F35BFBA2D9E6EA42F2E2E88E8C66D0C7
6B2A404F1C72AD3C0A327A90E16092E727CB2BAA0128995EB7C99569C8CD11C3
77C294DC2CDA70D0CB20DC0EA68FFB6BA42D64A1609E07F378A1AE072D1E66EA
6A88B6216A65BB5D731DF9B83A7A1136A9CE874779495E7C1D5CBB3A4F47906A
09156C93994992C526D0C9BD0129976B790F553FB2400B78F2857FDDA9C4AFF2
AF6A3334700FB3733F881FAF164591DCF506611CBDDA1E075026F2E98E581366
76C64A391601CA4FBA8CA906ECD13A23F4B7E7B39B39088D010DA238CCD5FBD1
DE4A90C188432793EEE6100D31754A7E35006BE1525B491190A9349D56CF1571
8CB1A7FADB595012FF87C7C9D63D48DA49C6FF1DA2DB4BE5C17C3390FC33FB05
F07F8B7B0E95733C6AF77AC134FF33E762E1BBC152F2CCFBBE5D9723D91640AC
AED5922B324DC3CAAD20481F05F70C1A22B77445CE9C7EA6F88FC4A0DC6D2AF1
E40701D05D4AA2C0D7AAD78F8DF7DE7E3EE7AE5118BF3DB141DB260C10CA3C82
4C006BDA67C3196C0CD15D709CB82DC7E4D8998EDC570B5DAFE433FDABF5C747
4D68262988C70CE344672168619540FFD568D1BD8060EBE1F681F1B1B141BD17
8A6736CF993F2568E6F45AD737AC8EC58C5FDA655212A44F7A6B7EC6B515B37C
6CE24473650181B331ABAB9221E60D26ACBA5A222C29CC64229A0A9D6ACE6C94
819443BDB38193EBD6BBFB349BED7FB63425A5C7D35076F3511390E7F6A02343
0F6D03BB8059E291E595E7F32343B9511B8B9DD5A09DB1C4EC484F7163BF368B
38D4282CFC8DD900F18580AC868F232A7448A735DDFCC8E11A9F2E8518ACD599
9792A5B7D6E09F55617FF88DB9206FEEB3AD3B118C02884660785209C3EDB002
4AC353DF95385B0042DC790C5DB31F7AF88D759C42A01A94DF877C15E3C2DBA2
AFE607C51C9C78B6D7C98307C8D0CF2FA90DF891831A8ECE515900A15A595960
E6CE81F7B8673EF88A9E54795872986BBD6481D21AFAB2365E5FCFF291ABB70D
3759197B821A9E9F622CDCA7EA518E6BE5439368795F6EEB3734C91560F3E75B
DDB1B5176A618D0C166FE901CCB74A8696C3BB298F40A025D8B22D58563C1249
DC67B5686BCFBDF8F8D5CC79DEC61D5B4746D65720DC09EA9650299547311E5C
1CE2E964DA455B02B7F02CFB63B42BF89D26FC36672B504582FAD5BD96A2C29C
BA1D9084A7FE4850601D9F33B8548ED39921EB7055EABD746E1C05D507EE6B78
3F672ED78CD23AFAB59D1E427D08F88A0824FF54D8A8185C10CB3A76E83A5403
DACB278F973DAF175DA50C948AB02AC52A005F00C14053D6C25CC6DA06F7F932
3E2B049146EBC018BA9EC15D0BEA4D5B2EFEE3DDA7DBD0597632238EFB90617E
7F70852E968BAB91E8A732F0CB88FA55AECCCF881C001B2B07F85748D53B4F40
CECDF5F9140087521019779E24F80F0AA9E74CC1FDDBE926DED2A2806487A27C
94B3232089A154C50688E96A178AD7CD631F7353164037DB482695C2FC96E9F6
3E4FE7AAE06D5D2174F91FF1C8B1271145AA2ECB164DCB0B9B848D0570DCD4F1
9DC4406F6DF1EE2964714F1A9428E494B19C85C83E3065719FC06630ABEA6661
D52115329B0884A9E3681ABEC6467506AFD38466B1734CC84E799AB90AB56AD1
6F34D0683F8DC8D59079873C558FB9AA405F4C36364658D55271E01C2A68D835
7E18488BD211FE3A85EC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/UniqueID 5087384 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82DC8E344A7CF2AC71AEC18
36F139E7A4EB59A67192BCA9ED0EB25DE13032F6FEAFC3B1F4FC81BB0EDC41DF
B9EB92618667C59EA499B788CD26C2137D70F1B0AF793AF5AD0D0941F2E746E3
F5A7F0288BC1EE11E982EAAE763CA422D72FBBC0D754AD58FBF92629DC8866A0
431213513744DB48E52EFC89C83FEB082588E4F30D7DA77BB598E51CAE7E4900
5CD570C914EFBA426BAFF7A56FC775ECF5BE13F2C42E51EF96784E5201C0B64C
074AC229FF3FE387B977DD72936CA0AB0475DA734CB5F2A9E74DAF13B7BD1BF0
40C2F2DDA63E77E7E65E6354C904AF9C39D1317B6E0F189EA7894AC0280EA379
7A7F8F016AD501420579EB7217E53FCD7CE1F38B74783F9925D7542C07A76464
5960D8FF1BEAF863E985B1C16F2BEA846B9DD0CD144029D24E12F421C2A51FBA
4B56D345E05944F16EED9CB128B01DE12B6FC79566D46DAE32FDF01EEA95EEA0
F426417571F53F998699DEA6BF91240DD25809EB974A14557B184D883602DD61

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 6 /Sigma put
dup 30 /phi put
dup 61 /slash put
dup 65 /A put
dup 73 /I put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 104 /h put
dup 107 /k put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A90AFBE22541B28C80755318
BB1862294F1A9E8FC624FF44D2694184CA17E43E2B7752B48A75DCFC69B0F51A
46583CBDDEF0D200200811E18B9A1ECB5C7FBBFC1A88E17F1444AD57F0B3F4AD
E8D0DCEB488DF225D047799EC5765A12BF14D0E86241AB753C32214F6A8B3B92
4B6F0B443F3A3F94CF0C7669ED9E365EDC2D5A99F18C212AB1A2987CA420946A
DDFEE44D42B77B7AB51FCADC6C3B6CD90EACD4E374E88B8B0E3C73A808B4D1BF
60A76C7A1780F130D25C3921E7119A7A7F653546E682A1244FB1BF950B287EEF
7770CE7E2F461EE8C8A29EE92CF3B245EC424F492BF3B715A7B789B78AB7D830
6BA6E9934C391131E2FEF763494FA293057C0F5A9EDE8E27F210ABCECED92235
FEA97B0A4FA9DF780555D974E2567449F5CC910D075BBD757D6C971F5E4DAA8E
9E68A68C31F593CD810369D8A606DECD71B3B204771D3354CE5D6694B96F944F
ACD444408CCA04FB3145C1517A221C78CD9247DCE65D35DE7692550A7ABAFFEA
2415A35413504A3F9F7ABB6C9A1AF64830855A745F1C8FE2B96BB0E47884AEE6
26CA7BC0F078A14E273513C7C88344098C43BEAABCAD05C414C7A6499BA942D6
D15C8C002B0DDDC5DAD969CA17AB0384F37D44F4096D3DD3309D287DA19DCEA2
163D715BEE5EF15040C83E02012E392785EFCF9D448C134D43EB228E7D7DBE5B
4D5E46F966BB84706F4DBD048120E2C1ED8B1BAB196998749932D7CED0DF5B30
B08C7A696E39604DE1FC3270BD69585D752E8E2CBA166EFA32374E5164E8A603
C5D6F99BEEE3A775BA5A0BA01A801B985020D8CBD49488EEE7834A4AED570D2A
4DD4A4C7684EBA8401A5221F31B7825646A37543E7FF9DDAC4B90B119989BB97
A7F471B678A7E427F64489E448B4B0EED4607BB4E0A1A7A2447836AE52B8C9F8
5AC731420632F40E896F8862ED30633A33A88AFF996F2AB63F9EE3A6ED9675E3
02065274CCD20B1E90C33C38849CA23DCFAC6FDDB7C1097F03AE8A132EF5BB9C
0F169D41F900A1ED4CF20363A4F39F706B2EB996B29D784FF46BF59C84B2FB11
C32E10F81F11E371AFF1A1AB1262975F0D604D3552F3CA79FBA3482B3B2100B3
8622C4C3DF1D4762826C310D0321121E27A89A289E4499C8B544BEC5E0C5ED64
AC2A59C587A00331FD62ADFDEA49ADC556F08E4C0E7A974AE7AA64D6DD1550AE
75297E46C9353162EBC128645BDD72B217DA38A788D6E7E031675BF11AD8A9F9
9B459A5FD8AEBFEFF42410C7D5FC37E249A14A709A0E4DEB7F047EF824ACBA40
E0A46A2D0DFF8A8632127C20922DC8D81D0C90D6AE651AA03EF920799F868C72
BD999F4FF1E65A7C89822987C260F06CBD8001636839EE0BFAB7C733E1147650
2F535B2564F43A32092CEC6CBE36851CE257EC89AD60FA21F458F7EBCBE6C005
A2D16FAFB7CB8D712014C2B03F5958D4ECFE11ABB0CDA53E1A8EBB6FC0228C4A
D831CABF62F8E6BE099DE62E6AF258ED42074047F5DC2A1A487EF3C7740D15B7
83E4626AC614E714F51C76AC2FB9F5F6F06952F5D047267CA6B2666CF2F0C53F
3FEC449B969189C54D949063A1405AD6B0F455F4289C0E4514C367A91F0348C9
4DF71A1B7871CC3D38993AB58AA82A7461B15010762506431A0FA2220814E624
24784227ED6954A3F0E5D95E11B17FA3D3DDD9A359A4749276D25B1F67A77461
DBC35BEF401040E307271F51B63A239191BB783A466251BC58D1BC935A080E3C
5F7EE87588B89DAB06B223B66CBCE3640AFED1B7B4707F862883EEB0B7BD4399
F9D5E54B0D0253B6D9723390F000D7EC6A470EAD6CA42C40192634B3607C1BB6
85F05883FDE5804571BB52FDB18425717EEBFC5CFB5B4967CBF55901B69E7947
5EC890E75B2F4A0F00648C6147A07BF75C0B2167F05AA04FCDD464F0B9AE2998
BA480B270926D9EF318EAD2B1BC6E36878B0A4F2E152BC5469CC17BA4A630C38
AA210444C7C695509DC5661F85FD083C82BC1EAC5F87DFFB2B2FED08AA9678EC
23C47E96FAB87808EADA885AF18DA8D434D4D737FA1374B57CB67BAFC586A511
AF54374C155A321256C5BF4908509EA05B33EB780779B8283B499A0E72A8C67E
C09AED23D6320F38862CA1A60AC8415BF76A411320C8A1CC497053DCF793533A
8A9B0375D1E24D56C74B1BEDC7E6CF969F2D9A413BF8276223BB254C9B79248D
10E05760CDF1D39DF1415268F09A39015E400BCCB01A1108799C09E8C1218F61
A364B49D958F6129E86ED435D01539C569AA2FEE6DF906F48D54816B21CE72D6
0CDDA339927804509F43979D74A3BCD88C3A91C05FAFEAE57F96B3697AC02AF3
3FCB94DC7290027BE1865AC4D196ADBD5DA229B6C81D41DF38DBEE0392B65056
F2964279C28FE49C9CBD4F5FA74A7BE19A505F91E64B6FABB9E6DF26865C2DFB
7F28CA3306B4C541A33C870E7A517575816A0F57758F8DB646BA31AAB447E7D3
6884E55A50AB2D045D32B07F31EEA652E0ADD4B6700A28991130F0690766C947
8D15F5B14017002CF0C71A9C5431A98ED4DFB2C0FFFE2E84C7D87B9D0030DF0C
BF6E716C71E61346F4EB8AD92F8C65209EB7FFF538695D18A5A2399A5B3E3936
2BB6E401075D00EA1D6DC6750119D020E1A8E2ABC6A9393E159088BF3AD51521
810EBC4CC769F1654BE34DB7EABC53D23636910070F4FEB916536BB87E7DE46F
72FDE70FB1374D7B37A830195BFC8BFD9359D46E79B464F54BA77B1CEA2158DF
6A899C795942CBA747F3D9D5D661FC77669DE744C61FAF2E159534963827364B
E0DE3CA63FC8364DADAD4B5A858E180BED777D48C638F71BCD0C58AE6C84B53D
07866C0A7BB15D37188C89DB99F694F7AE1AC6F73377D522158E824570ADFCAB
8647B2AEBFDD8C7426205AAF1052FF1CB44ED098B16F60CC1E3C7F04F46F0901
5D310F7FF97C069ED1F310841A85ABE4065107445015F8E206DEFC51D803FCC2
4D385D2D34F3EAEFCBD81D809D963E5786F0DAE3E54E28892C0B8F6A93F0FB40
1D4049967E05693F526BF4C994DCEED6DDC6ECC8A963A049F941451DA80B1738
CBF32C229224D6C8F12D1248DCBEBE1BC26CDB3E75B9619F8DB7783B13789B22
5D9B33550A4CB210A2D637174260A2DF581B58027D8B91FF026655C18AD3F610
A3FEE712FA4FF673C4334E473D5E3DE43FA394284C91937852A5BDD3A3C7C5C5
5AAB5B816E579FB7AFB0B99A2B12EA52E57202800B3AB209DEC781B644BC3658
46E5A30E50B3D3D057DBDF7F07B16880A752FABB1B9E293C2480253C9551A1AF
0054680485AE8F7AFCA5560A28BFE90942B5B0C85B9A7B5305A2B1306B406EB0
0A1A5C5C71AC271F8E5E6A836586E323CCFD5CC3767318C2A09C9BE30D302388
3FF0B652A8F1A8E7AC8C4B72FF73D0853454AFAEC608F0B42556CADB602CB335
32D7F29EB24B34E199A3BE06527A5F3720C4120C0AF024D664B7C87F83506456
E8F8F2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.0: CMBX9 003.002
%%Title: CMBX9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX9 known{/CMBX9 findfont dup/UniqueID known{dup
/UniqueID get 5000767 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX9 def
/FontBBox {-58 -250 1195 750 }readonly def
/UniqueID 5000767 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX9.) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 70 /F put
dup 103 /g put
dup 105 /i put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D4347EE3E5AFBE73BA
31023D79A7299D8F662042A8D8B6A7B4E86F48AE98EF848E83FFDE68E17A0832
A181C126D15EC79861796F03957F5A51462C817DF752097718413D012D19C9D4
423A5EAE1EFD4EA7A9651BAE6E45CC194BDCD03FF43F255E58EB5E50CA26BB98
B8B11E21DBFF2BBB04D039E63C453EEDFCD9378F5E7AAE3A93E8691DED5865B2
B78F540F8AA3224BE372B18904651D057608DE4DD729FAC398A80CB904410451
90D66C44E943517A8F4969673B985D9D244FFC743E0AEE309EFD224F7029D37A
F6EDD96E2F88C9D071FF16EDF055955D31DEF10808B343E948BB4F6393D275D0
44C4DABB75332DD716E8127283E8D70511F8EAF4D1A5F72E2F8503A2F964E5F9
39304CC17ACCF531A8C0B6A9D58DBA6F24A4ECA62EECC939E8111E4BF79BDF77
D656F9998F1EFD2ECE3E61CA526106662273D5AD3E74D08E9D4453569B359C2B
E2455F2136B4DB54ADDC3C0256EB7A11E1615AB9323ECCBB6EB48ACD469A2020
A873E88B28AEAACAA01826C1C18120774FD5324DF9AD36FC256706DB24FEDF34
0FCDF04B12ADB66876EC7AEC183A1EA8BABD38BADDCD0EBDE11A5A1BEADD0F7B
83585C3BA141A8B296872F712EC42C625DBEE9EBD2C414E57CC1378CAEFD00E8
DB4B84F51967F2968329B8503C4B37A56F6136DA89167FE3AAA93257140FE94D
D96C7F85C6F82AE1596511ADFEFDEBC1B41B0395E66D2074B39B5565AD4687FC
89BB4BAFF0F7568D9EAF069CCBA2DFF61C59E2CB2F4274459792C5D097FDE6DE
0E40AAD8DD8F64C28D04EE50AB79EA7D3420CE42D39FA9080E9E046A4F22B5AE
AAA17FE750BFAF7BFF097E4A6E9362412C55E25767C311832C1C0C76005C733F
E046FCFD4CF49C6181C24BD299E90F20A0A0ADC868C11A8AB7F610186D0483A1
B3BC4FAFFFE12FD746777209B4DCEF0E4ED15D90F19BF2FB2B56231FFDE5D40B
146E3FAEDDBAB365D88CED98629B9855AD6E57FB01BB82659BD320D248E5F7D7
B584DD43E1F5DD2C91945DDB772E5A62AEB7080AF36A83D2BA8533E7E6FD287A
924F616F8090E9FFAA607A21F38718D668FBD6BA3434500BD01EDCEC00354F68
E1D0E9A921DACFB83FB61C1A5C27D027CAB348C4B7E2781013B68CC5A2BC8703
2809A49A0C2E9E004D56844EFAB4A8763B103CF7CFF980C9CF7F6BE28814CBDC
348E2486D9379DFFCC0E9329854D518B49B98F582972B0D1D18A3319EC00DDF2
F64C2CD2DCDBA287B279F98D16ABD1D140246E8B66C759571981FE7402F14C94
18394A4C426AEE4B0688D86D08B408763DA3537E5BA0D6A6796C316FDB0193E6
77C6F257BEDDE17F2CA5E661F434964BAC9834BFF36F563637872FCDDE94CF22
F076D1C2DF6357D8A26D305D52C9086CE36F49CD92ADFB4306705A0887407C9D
59B6BFDB82379111C9E33692BA9E2ED9782CE4334C6125933A2F210684642DF5
3B129F955BADA1E86D6B80CE299FA0D1C0AED1AD61686AF1052A188881E2125C
98083BA8255B92B9CA0B48EB57F936790DEFA6E6947C0FF4083FEC296FF3034D
AD657C64F2675EED2B4EED1E88F0B1338762CB4C64C79F111CDE9777A000F65A
F9979943ED7C445815BB59052B91F0FEF7219E3DF27E1D5155B9C42B7BBB06EB
1815997FC3471CF963A15B1C5E4653C84236CC5BF55A31B94E394C635B95D847
69E8134F4FFEAE836CD6AE71F58F48AA2F95BDB1E2CB89DEE590EFF3AB7097DF
AC185303E647628F5D87E0D82E6685DB467A0F8B7D3AB2B7F3F11BCC99BD48A6
FA5D4D75698454CB74451B486CDA6B65547C0CBAA563EC3574364540AE7B11B8
F9E86BFA655CDE88DE2E7D41851FD208649E9C011E04C78ED9209FD56E2447BC
E1AAA0A3D36F6406C60F6B19347CCB7D56A84D961E17E361F92C5542109D9BFC
FEA2FF9775230EABE3333EB25A40E29016E9A8255713AC8336B8F7DEB89FEFEF
4006DAAEA26C6BA1EF494AB99C2BC960D9E07981BABE909B5C121F2CAD48C938
A36129D10D38AE8F5C64879F61138FA9F7479341F5C5DE86376B65A642B9622B
E58DBBFAFE07EEE1D11DE9DC34309572868586CD92D39FADB711883AA85210E5
C82842EF225E55370FE0AC600A170687C60C8091B0625A1C5589186F3C7C1218
B15B5CC3A5CDBA7085338D963D929A18A651EC7CC39B8500899DE9220A1BA363
78698E414607C34E06E29AC5BCBAB98A70DC2BDE0FDDCCE22D4717EDA7D95397
33420EDEC2F1D6E7072FEA85945378A6BE9C7F68DB4FDA6B5BBC0032B3C02519
F4168C804B6A101AA60EF4FC40C2428AFEEF5A80F9B76D561C8A21B3633E13C5
215A14D54B8A1E6143A9CA0B5794D20DF97C35B3C9E9A4673AC2123E7DD8E216
044269B1D6AEEA46757F8D9AC5C8A92BDC1EF22EE0575C80CA7895722CDD2BA6
F9A208E6BEE5319E63B3B3CA197D9739A4498AAAC9C7484D61418ED2BEBF63A7
F5283A075D1DFD4B2702E1551A0D1A90DBBBEFB6A55B5F29C869763A856C4E61
EEB3C8E14E3376B7D01A4E265C6C8056ED23931DCF669A0EC9427F74A147AD8E
82E172FA6C13DB1281651BF3D14163D963EFC7384BFC4B3B9274274DCEF647FD
D6DF0CC146BE8AA660D709526B394CE253369281FDB45AE071319E8FAE4EDF10
2867A431E22779EE40D885E95AFBF62916D9900016805D004C0375D29130CA14
F3E466AF350D1A5D181816EE1C4BC75DC09E4195DADA5AB09CE9EF2C4D5F7CEC
6C16BB6EC791E2870DB46B6B06DF421E7A2781D82A07D92316B553D068A1DF5A
8B19041F96ED637B932DE184F8B856FE1947F5FC8AE505F0E3953B325E0FD6FA
825EAD072AF06E258BD35607A1F082DFBC2BA5251DEDCAF68B4D03086CCF84BC
DF70BB8D2EEEE3E0EAEACC8440AA130273E5C7E78A15EEF66A9A1E0D5E022188
0AFA50FA55C6C461C743E1845FED77378D639839F548D6827CF371AD3DFCE592
B7F6E29FFEB6CB92B33E24E34875A5A92C08806F67E18AEAD86447A977890AE2
30A452F33B609DE5B792D9CABF39A086C0936AECC081CBBC810B3EE1D35F9717
260E76132661E3A8170759084AFAB04A6E773E9714A6D486E0BF46F336A7CDB5
C325E28E747295CB0E8FFB289F4907BAEC213D4D0B495A246A3DC359B995E9C0
C5322D750E13159B7242E4C4DD27932AAA130BC6B0400428B5E6F928CB8F7658
EF02F7522779CDBB67722E09774C419489192FDAD3DF272C95BD9BD64DDF0BDE
999FC72607F52805DCCA5EC17150EEE38B866E3D5199E5A6CC262785EEB11D51
80E79545DA191071487EF70C7FAC0CA345955F797912C1268924DD79D0FCA3BA
460F43E74975C04296E34423BD366A4EF7EE9463ECEF08F7E7BC8BEC570F812B
066383C2EF5375FB1504537D902818D63B30385421FF81AD92A1C153852B1427
A39685A76DD636DC4ADCC53F2A78F795F48EFB23807E5751023FE324CB401281
60F8A8DA779A245DBC26E73B61A1450F25AC276E1B5240578E85E1CDF5A784F7
D4F5BAFA76F70300972E4B130C685189C4010B9035A5CBF0562EB3B387FD89F5
C53A25D3E883B506E0B477389DA5CFA82CB157D8C30F287678B0F9A17F5A8704
ACB5DC57D7CAD21A4EBA49248F277F929D3E49B17463EA5F31A4FC11B0836E34
3A5FDDC6B9A45113590F114B99566D18C21464E7FC1D9AAA9B1133E5E8E2D14B
8E143E1E16595C42376694A83684E3B217A17F158DE89549ECCCB443701B520B
E20B972CA5EC6405C479C5054663D48A22D105AC98AF094340B5964D0C26D9CE
241D2706D3444C1405B2C9F7C912CDFC87EE8FBA01C0020D1AED1A6205A8A45F
8504B42431DB5409BA8AC472F2FCB4CE698F6DA92C4C8BF1293C2C998B771540
3D933EB5E976B7D2252DAE9584E5C6864B29C3048EE159BCB7638CA956E07F81
F76391380AAD2F1DC2DC201BAC657A1BC93F5569A5F612A4EB6B01F136F41B87
E20D4DD6ABD7ACF1275FD80D9BBB87A45572979BDFEF59212F1F6D9423FEC976
1228499D626A328569B4BA2755B1ACD20796398AEEC5F3C61122D52124996535
D0813227F549FCF59C6182D6514A70F9E38565C8C98D5F797318FB531B5DA58E
EC60235B6F1D97CA5D495CF689C3F9B3260998ADA1204AC00135C7C72700DB00
7C06798A46E897875BE619508DFA2201FDCF689E51C3D85342247B059C0DDA14
766A31E3E25E792F090DF3EA0C45C3F64AFB918BDFF92FF0ADA2F71866CA190B
87B2FF90C872284652619F084E2259F044E2980101A62004AE9F4BBF675C5279
BA3437ADDF2D552A033D2301A669EE8BBC840C0028275D077B8E9977D447B396
F1D82608E030FA43511BA01C345078986B8C35B6C6990D018C2DD2CBC7774450
D8482DBB262BB816E6A26A1FEB084FC2027C62D17790C80C65A9183F23BB2458
34FDC5D566C1B667EE801D0521BBA520A15C0C923EDAD84AD6A83DB23806711B
0AC2631C15EB1D33C26F8D65852EC37A3479152557366929A63B753226059870
45CE6403CA23FF95BCFB6F0C8DF8CAFCC0BF27C59414217CC6552F5945D9E6DA
AF83F4AB1917742F7502B069DE44A6ED3BEC966F59A84FAA2F8DE441C11FB122
DEF1768D250C0CA5F2DDE6FC4E24FD3AE4386B91ED2A492A959BF7E4C0AABEAA
5BC2D933147A4A21FC5E5CF3B2AF5C0A768A8B79337FA3934A43E24F9F7DF24D
22C5BFE4DF1FD57289A6E1C9AA48D32D20F613AE94B4308E0D3BE4D1BC95B33E
A9911B82EFF461D295C5462EE2B12A3E40B89E0BC778FB76F8B847B6AA99E061
3444A55D83FF839B926985B0F4E562D726FD99C5DC86DA24BA7AF38B93C90F51
A937E7C35793010F351594465B39BA5276F223DD3CAE1868B969D8EC93AA50C1
4C7E51D0D7F5E9F0EDBE1BE24BA5A977163BEC724D575749C56C4F39BD60F3AC
47B930C9E07A2D59642C9DE85EA6FAD1E7D8817812C049FDAEE148E8AB207B89
B2324191F1A82A7C499E7BF09CF1299F0ECF55EB0A2A32C5BB89411B4AF2A401
074718859CDC27C2FA78BC5269D5A38DBCAE55F6CB669DEED2C36E5B0D590504
B6162391FACA9F20224E6AD24B86CCAC0048EC7A618B3263F82A317B3969F0FA
9D5EA4676B27F371785FFF6599B61A6D32E82DD9D511B04E03F14C95A4CA6CD9
5B59A8A7BFB2AE32E9357C7766528E9F74BB8D0B9317F02EDACE2033B7918D6B
8616F1C1B3E113B0F77B0A1292E41F8353DB55EBD872290491AE1FBE95EC034F
DAC1394928930EE297693598D97EBD0720A0A7B4A5DF4EF4BE0E2E0968E64CB8
167CA1B8C40A779023AB6F74E0F1626D8BFFA96EA09CA88524837B18DA6152A4
3F0DC3C3958EFFF86B07581B416720FADFFC4AD35F1553A18944A6DB8FAB0AE0
A8118C09DC8E905CA32904B44E0541FCC7EE555335E61108D8346B4EF697DE67
7F67E1E4CF0EE2F6D89D10FF2D115C6F8163B8180378018F58C148EAD188E969
C60B83C7B295F30614B93FF925BBB2974B0B9C68C2BBA6E973DBFB5500A574A4
F7348BD31C735A1E57519990582D8F7D97F8B63D9DCD488DC569D5B392FF26FE
F06F9762956D64E9C258EB9B90733BAA8F1912F3B9AE88C6D14DB46B7131BCBB
D47CE60D9C63FE0B9620D03F615EEDAA3C76A7285F9897A0D476F35F5CC158D2
D148CA1E5A96D16253B360F34336D476FABE9A434AAD5FCF65A27F48C5BC3519
DCBC35DC1D324A270996B8DEC6D3833E76A434E05074C7E3FC8E5633D6B25B7D
69D9BF7039DE4E755A7E3BEC8A4E5929A98FE265E742B269666C75644E53E6A4
C5AC907F7DEB319BC88CD1A7F29A0A4D43D471892A674D50C70BB6EFE5740F97
50522F2EF056E208C0134EAF15DC9F85C7C06066782B715A5EBC22AD414A169D
86A2F606150B6F903D3AAAF44E75649DC410C3B8C845909BFC8235E573A2D291
19440D724C960014917EC802414651E298160EA70FD54BE4EAA1A1007ABDA8B6
085A89221C3DD5E9C759C19BAD6EFB91360CFDEE6C4876AC19B4BF67A38BBD5E
0BA20996BEFC1F8C427EBDD666B30DF5A2389F1F3BCA17132FEFFD3231570AD2
61CB33381A0D2E2FDFF470FAC3A60E61E99C76A3F4A6BF32FD4B2B6DB6B27F2A
76A5C35E24E78F7DF28AE1B7D04A71097881CB67E060DE537C1A318B95964FAA
1455264E48DAC7689EF10905E381C569DD65825089EF325595388FA5BA6A1EA2
E2536872DE92D46AF3BB3F1DD920FBAA4481034DF831FD15C01798AB04A73B50
1461BA7298B2EAD460D6E645A9ED41EE0E0282C335AA716D7563AD7CFE2841B7
0C782ED3F6D31871350A12A41AEFE21E9A03DF676671E4C953E51F801CBEE091
BE0B7B413B7EA2479E2529DE9E49C03CBE8159DB1B28D2E290826B6D01B35DDD
083F85E9CAE378C1A3B7065280D9FFEB04A02B76F1F0E547328F005CBD39936A
5063812D1C958FD4EA6BE9FF87E5FAAD483055819D1DC39D31B8417B44F30B50
EC95E26103A0DC2241B56DC62D424438A5FDBA8AD4D9B417F0DC31CD82DD772E
FEA23036A719927A4654876985FF4AC2D28A180969A76F3584D001A2EFAA2BB3
7F0CC228CAD9A485F3FEE3E0F0059D3BD8484FB97593A6EF08F9D352E3860613
2617ED6138ABE551DBC67F0151D0F9CD83A613C245E23FEE6FCC8858592AB43F
8E66FDC5A27F9312091478D102BF867B320431F7A6EA42EA763C51FF7E0E0FED
A6A830AC95600C837033968174A9406D0DFA72FD65ADF153E5CB3420CEC76A3B
43DA6743F24C6CFE0E9A7E78D540385B657CCB379BF5E238A07B836F907017D9
C0CBA503FCF625536E27B77A262A0EA1C3DFAB015EC859FFE5BB26197A05F4F9
87046F3AFD3387CF1B040DA7B7CFB1EE92816C7C172164CBAE3E9204559C2A74
87E4A41AFB16E7789686047067947F41C82A26E3F343E7359804BFB3B7904F4A
12FBB7EA0E8C26801ACE0E9093D7E2C3E288F781E3E6A53B8C121625CEE7354F
B1A059AFE21AB4DD2B43A9DA710F2D811F63DC41699FCC43330DC7AB9CD10F00
C959F73155E9D63EE7B20970C7AB1B9A8A51D0DA0ECDB917291FBD57CFAFD9F0
E1636B9DEC48FA7FE5B225283546B01ACF3036F1B5F399688F1657E41A5F4EEC
2CB1324C136CFE6C6B92958597B952552EB7A8D58BA7773CF685FED451D89392
C290D38D67FA7519ABD024B85D3002D8592C5D30B50726C7BD17577FDBA79E38
3D99B3A08797696E593C0BEDC50706C986E6BD05AEF30108F4BA192E956D2942
72F59E1A025FC31568C2EAA1D5942A479203EC01B37626F1EC334DC3C6527C06
41162B68D66E7923911921E861FECF78F36E4BA60B4FB8554E83AB554054B2C5
8C05D3FBA010846BC5B32E9ED62C6A0E8D92B8F3546CE0406A87634E2D96F5E1
F007DA0161E75DA55FEC10F7564CD7CB9AA0A016438D082D9A9FD107CEFA7B27
BA3C61B3A13D9A30E4BAD25B2FAE3ECE3FEBC9722B448E3AC5DD9FF784718F6D
DF58A8A7DA91086BD86AC776CAF3F4F2DBC2F0AA81600D53D2A0EB178568DD96
1ED459E1CD3D897776901284DE5673813ABA0CA7ED342130B261727DBAE566E5
F57FA86A7B4EE5F48F039FB95D318DC142E26022D7F85B34558E99078C5E6467
FB2ECE5A828776E62ABBE064F9EBB05DFC9EFE42C9877EDD26B9DC61505A237E
75DA13F87F4F422C5E45E5D0CD32F8321ED89F8C6558622D67008615902FE7AE
908D2D4339EF9F7509E5A491A4E8663AFDB454E931C70DC2F2E6DE8E4BE23204
4701CF8C14B23128617137DD98E2016A73BA0EF57125516DCB203D476462BFBA
16499036AB8F81F83AE2F256EB21595E795B727FD7B5FED0B59CCECE8AE0062A
6E77F33EB4896D04E61B913B6C4170D039344525248FE25E46E0DAE91621917D
15D5D17D2262EC7AF31ACAC176D11DEB3601A993B664144288257C95DBB994E1
887E1D875943A84DBBC2498BFF2DB3BB3A4EA8DE8EB3C6469D98A8D4937DF8B2
9488A21763A97B8040F541FF2DF0E7AD1E993050B063E952BF60DB989AF3F538
CF0D5D1234E2DB9A16BFFFE76C57B6AA7F5B3BF9B315C9C46AA3B83C633E455B
01DE02B1C3A9A93CF961399ECE1A897788B2B238D8FD962926EBA06EF157958C
A91F8F3FB7839C178E548EDA39F998CF21A93665B0E5F16B58AA51D3EDD77586
1E0C62F97E4DEE545BBA8EC9EAF7BE5C66E744FD1DB732CC907FFD2AF2CA86D7
D40DC5F967AD819372994ECF0022568949E624D8FEF8ABE80C4EF26DF962068C
634608C81F7512CCFCB00B7BEF6E47ACC97221810301BC677464D4ED323997EC
E071C899F34BB70B950DE9F56651B66C6B2B9012F5C2D8F26A46AF6FE12393A5
893B79B81CF6C76573F24B791EF019EC6CBCEDD772A206D8C387A96DED33E7BB
6A0A540B6A1EAA1FF4EF4E06C30495E58B90C30F58682A2195E6B9CCB9DC9D8B
7A063E4440EC5A6A226DE342274A1B8FCB493654D4BC820521885A76399D2A14
982FE37240736F5C59039B5E0BC295B6A24A4471C7E33616B19609756DBE4BAD
E6114223672A62D0C434C2C3F66D21C15BD168109FF482F74A99BCFEB34FFC98
7BC203277E5EAFCBBC558941F35F0872265E88FFA149168BECA82B36DD4EDD05
0FB5637B3765025958DB6EAB793A401F3A6F6833EE7DB126E8807B2DC72DDB8C
DD444752578F7F996983A6B528A64302E2EBA1DD5C5F8B5E027EECE95118FFC9
A7E54DE7D8A88594B399138FEACA7130B38C1B6DE01DCE21FE680D5ED42A2366
F4420CD91AC6AE0378E85344E7C4AC6B6DB5212D3E96D2F082C70F0373F10E9C
2CD20BA6ADCB24B9D39CE097ECD124E528F3DC66B0DEAFCAABB88A9A513EF313
32AAD2EFF8026668A81D4997FAE8DB8174409911B0832CCA565C5CF953330938
63A833348E1EABF4568F3F6E368784E85C761A8EF07BEDBB80F4750F23254829
B8208D374B3748BE559705B2BB72F5A031A854336C4D45D5C8700939842EF626
FD62B5C0554998C930B2D16102825D04151157FBEEA6BA0E8CC37401005FF5DE
44D4979481C3E6EEBE52B00E8D09C14A58D5D22E275B9E9B7F3A039C2C53B143
00E9AC16F41AD8A89F2355729FEE257C64C6418FE86C76C21D5850B5D8F3DA07
9E4CAFA262907225217550CD78C9F367E9ABE28B69B2D1498E0B38BA38574624
1A812B6772EC7D12C9D3FC3B02ED5AB28F6B923D19A8C8388123AE83CBE5CA29
4D2E593645ABBFCC9EB20E8CE5E97D31BED348B7C54ACAC56D62D50B1E9B011F
C35121A7F8E721457E7F4E91627ABAEFEC51F8594795344F8593002901B90B41
08371E9E6F7EA9986211DE163D62CDABC96E8B80A63FAFB992CB1A6AC49FA583
6E3AD09C548D89A3BFDF75A22B15BEDF669B6DE532613A40D54E53F75EFCBBE6
64B72B84719E3C3F95E1D1EFC6A1F7F684F7389437A7534FBF3AC571C26C01F8
D7B1974A77DFB5F40910DD46A6F7395FDB711FC7D5B861746E5BD2CA8EA62FCF
8D5617C162CFDBBA119BEAD9B6E000C45FBF3C5D7458470E5A3246398A5BFD0A
B34063EA004A86D36155B093098C06FF66CDB27D4E2A46D9FD4C9598C6680ABE
42EC256A70EA4A1D62370F47C7C9FCD34937587AEC6259B629FDBD706D0818EA

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LINE10
%!PS-AdobeFont-1.0: LINE10 003.002
%%Title: LINE10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name LINE10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/LINE10 known{/LINE10 findfont dup/UniqueID known{dup
/UniqueID get 5011940 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LINE10 def
/FontBBox {-150 -150 1020 1020 }readonly def
/UniqueID 5011940 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name LINE10.) readonly def
/FullName (LINE10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /a45 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE366EF37D4823F376DD9F7E4CBB15
DA8E93E91E84D36BA5A5B06F3A46B45692ED11C8FC76C0B0B3157F699878E2ED
D89511CBE105EB42FD76309DA91EEEE85F1AED9920648285111A1690C4AE2638
C0601A7DBC8D2D41CA8C4F9DC7A6AA5C51015D8BA926831892381DCA7E61E230
5BB3BD5632D276B929D97D4836F9703461BED94450CDD2660430A0D13F49EB47
72EB0371E38B92F488FD6E19C944811D4AA52CCC359210320B484568E5060BC5
4D2FDAC73C49BA0168EC70388AF54EB24A30387A41246830C10472DC40AA0BA7
BFD5FA9A7730D9FDB4B639665275683C8E3CD7E719FF53B6DE1F5835C06D1671
1185AE2114E4BF5C0836BBD5391FB7AC5793DB4D3C5535ECB70119CFDF567D0C
A390B1D9A992250D535CE1C36B028E3E9CFEF1DC5E0626C58FB0F25E04DC1FFC
DB6A1C67E40E6435D2994BE814C695B48D64DE30E3F9A38D4547B49FF66829A4
9AA4FB9432DD10B6AFA88BBC184BE95E34A17076782DCDFED010CC19715BA5D4
5D525F33A6065EC6C6811F7D8AC94F27E4E2EBCBBDC3AF1AED1016C343825BA1
1DF58B80CA212DAA2F4EA1889F989C99972A5FA25617CABA3B52190EAA98C27C
15717FD85CDC8CAD43292A21B341CC2A04EF383D978142D16B4A97EBF22ED674
0B45CF5B2C3F151029B75CFB6FD2C53AB88066DD793B85CB7A7A13694C0B865D
BB3315043A4986FB138775B7354F4AB89AFD27D52E0864D384397ECD9A850511
E96A85AAC591975E185230AD05DD19D2C6883B2AEE9107448928AC6959BB66AB
7F8F7C4BE5E6E4F88D3BA98B117C9F0F58BA8D4A7B88413ACF98B0ED4A5FF6C2
5F96EDEC0AC75AAA7C2F27FA3DDDD0B3BA0683D98F99A282C799183C0952DAF5
A900E23342D083E8454E64F9984EB44FE0929E8C1605B8B26C37A219ED8A04A9
D7D6FDF3546CB443BB11B2E4A1015E59E8AEA265CC70DEADB42D8361F4F54979
19ED22A9E83B7C851A296D1B5F44AC57AB4EC29FFF3C75A20CB3C1B57EDFB4B2
1AB1FC26A6D947D45EE8221185749042F2896A43FF932AD70B16BC2AD7982D51
C390D752102D4A6D49F0205253618EAA62D3616BC1FB3B7C5F3EE8F00D3EED1F
A096AED8381876AD3B6904E0AF7AB1D15ADF3AE26C6A34BF3E4ADDCADABDB3B2
555060D5B4A10F822F20E8CE50C5DEC31FD08731E0A3A01969E9FCCC3CB4465A
4F33CDAB8A149EBBC34829EFB4604064EF95D2F53DF55F4214486449908E8B73
8CE4651B7C3F249686F7BAE83136400CA6E84A17899E0AA55B1F5B71661921DB
7950B77C6A504733B6517A1F0D106A7A0C45B57767FAAB9CEDB2B6C25A347E0B
C45C3D3A91B4CAF8D74FB5B06C516A459F1FE6529E759E9078A8104F5019B4A5
A41CA5471376BF87B1D6E39AA6D42E8FE3FCC06D5C221B30E2B9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.0: CMTI9 003.002
%%Title: CMTI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI9 known{/CMTI9 findfont dup/UniqueID known{dup
/UniqueID get 5000827 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI9 def
/FontBBox {-35 -250 1148 750 }readonly def
/UniqueID 5000827 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI9.) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 24 /cedilla put
dup 46 /period put
dup 67 /C put
dup 77 /M put
dup 84 /T put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 110 /n put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C50F9043B95BDF77C
1450E422362CCD41FB4AF30F73B66A85AC8DDEAFA65B4FCF0033D034E111830C
ACB981C2AC41AC32863D02E6D9CA81F8D407DE4AB20B4CB6418B8067D694DA02
6E76FF50A7197281B7E8E700C4A8824220374DE1CA077D50A8B751391E35FAAE
E0AB0604164A16D476EDD5E33B08639DCA14796F27A20EAA52D0BD8B61065AAD
083E4AAF626C2575C56F87AAC636FDC2E5ABF623F2D916D3CF5CE8703D297151
0A664F40B144A2F3900D053B709210AB8678EF35301AEF3696CF17A5B41B588F
539243F32FD78B62A0D80B17F1028CBD7234BA7513A4809B584092B95583CF1B
664929C33846E8F59A43220F79D8BE0DA051D17D09C1E9DBA6C60BCF99BAE773
3E9439791901546793B3CDF014E6AD9AA169483DB87A6CE4104A8B25AC117504
8D6DF6052EF491D510F67D730CA315915E77290A40D3F8EB8F004114BB64C5EE
9F1E18A47A785A04D4EE3FCEA794EB3438CBCAE35242782053277EFD6B67F6AF
97D892DA958EDBFAFDDEBEAC4451EF8E00D6D0E7E60C112F74999096428AFC5F
507D0DEAC778A81F8F47FBB1FD8C22FD22DF2AD0C9BDEFF2633F180E0186A9AB
B0680E661CF083B8DC5635D7DBD69A17E6BF1E86F7C19FF7E48EAE8D35F0B698
F990DC16CAE9D6E9D1C323FDD183096BE0EF3BCE379CE5E5CB0F58E4516C01B1
55004C20A6F2BF430D59368AD4F6D398B9A27B89DBCF70BB8A36AA24496CA621
0D28748646257C95B113209FA00B4525C582A8B223C64B658DA11CA08CB64F12
8BF230A57B4DC2FD0AA8C486D7B151C9713B12ABDF174ABDF52EC8034B0858CC
6D389B503A320AE42AF3BBE33135032FE83E6B7AE0D713BA6A56230A50C22FB8
597A5F21CDF98D70423E8AF8E3CBCE4756DEB5695D3A5E7C47E6EE62F4D06BC6
C9978DEFFF773BA6CB9B92D2B2638FA3A1D92806EAF9A9A9D6DE09D81FBD8622
AA7AE1FE01A1390427D270287D4A436A544D4F568640100F94518C113CCAA34B
28791F62F1C5B6207165A847AE2A9F1E3AF8B96203DDAEC2AF8F3450CA2FFB5D
E55DA538F39D6A5F13963857E2CE6D75E510E8287D4DDFE5FF5CDCC0FF51E346
B8717B28181DC56315751FC861DE7CAFECE8E350CECE6B324879ABC8D8206ED7
51D1D299BACD2F7F6EC2F8D3836EED6CCF09C205A7A76B82FE1AAFE0833C7693
FC7E22D373C10C34BC0B57382312646763F593AA91D90F6CBDB096CAF9F52C12
CB6E75237566C5D528DB58B92D0C7E16D6BB2D097C1FE565A07076209AC4DEE2
BB6147D06D65F403B6919D65D1C3D9D0FFFC0CEA7FE0EE002AA0EFBFC120A724
CCE85B3419C44ED7216E4C714FC85F72CA933D3707D2EDC6AC02335D4770B48E
0B64716C0E1B9DC8A4DA1BCF7B47FE7B37F9630E55E9868AD41AC770C5036E78
4D8B24AF41E90CE8358F97CCC43295371B73EF7E86BD1647EAB2E493EE912F74
EBDBB5CAC34EC1044114FDFEEE2FA8E3574F4D1E3EFB38C3BCDC341A0E53044C
0A19D619CB789E8C10100E413B8057373E6D77709B8019841DF04C8B27700FA8
B21E2955C9ADD9CBCECB52727BFF0E48029D46C695028CB3A7EA779EA69C8763
2BA38F274B4217F4D5C942042ABC9E4C1627D63C0BA9B1E03E9E3C7C8CB2812F
503564C0C02A6F2041D4CD59BFD6E465CD060D655C38FC5499F06E0323A4F359
37061EA5248B3AD809D16446E67B0267A3A929FBEB0A93DFEFEA3E8D5B7C564B
95AA458F532CBA8770DD90AE6D3A0BED3BA140A4AB6261CE41967038861D947F
20BCD353B32618537EACA0F1CA5C2708D67D46B6F9B6D4F12081485AF0699628
05AE00F008AA816DB07710E06AE2DBFA830C34851E5C63A7E9E02404ADF1DCA7
2185507F0CEAF858389E4F8DC3A1283FBEC373FB4A1720BA71F993D432425C2E
D0FB5A6FBC1E1904B959838FCCD085AF1778A5E3EF29166C6660B797C8ADAFF7
1EEDE9BD371E11CEE77D70008706E0BF2B6DA250F9C6A92BF91ADB7D32CA17D9
776CE695179FC5D1686E86E2B4C3E34D2741CDA86C0F343E7CDD52AD3059A8C8
134C7DAE20076E5EE5990CC56EF8AF66131243212C40480BBFDEA97FE0558ED5
7AECD669BA1AD9A50F1C0B21D75AD5A11FF9F577153C12F9789EDDF81FB683B1
F66244F6FB2DC1FF2B3BC8CDC6990E6C4CB835E552E2AC9A7540DDCFAD1F931C
44815C59118C7EB3C4CED4DE0D45C311D69576D5E6DAE9DF8265EC6E566DDBA7
22655E765C074082F346AB496F08F4E598D6D35472629273128157FA8608DD96
0CC4A3B97B430B1DF8EA4851CD54E742AC0170215F86D4612129F2CC3874D047
F485BE77D2FF57B8899E1E667D41E519948F0E60C5247F5483D20CB108BDDDA4
27F15C14A35FDC3CEA924E051D711D8D4EE36E7735E6DB443DBBD000A4CE0635
2727EF9C1AFC95E876A46FE001EFF903D64A2C1F00D734D32FF4A6C8E3956DF5
5E676815AA165DAA9E0AF2D56EFFF32BEC9897F45E40909F2F39BAF85A354420
5E6CBBC6626B98FF1A9BCC1F76D9AB0348C8E7540E42EEF3F3351006CDBFEB01
0FED065EBE147B5E36BB659D6AA429E6BF8121F147554BC0959E6F45C6990AE4
66A74CEBDEDD67A559C3E4937F50D3B51E7DACCA53A2DB98306E7AA86D21977A
A4CB7592590C94C8479530239945471408FA1F774CAD14F58AFFB59D8CE596B0
8DDC2E8CEAC94156D5FC69D70F2F779774503F168C48594C63F3180E8C93F423
7F1F1D44CCC5E5F766D7BECC470F880611C545FB3F4C0E171A30516DBD6477C6
2C478B4E3C2AC2241C68124C4570D476B1A18E7D093C97D16999E06CC1C8C485
15AFA4836718A40733ED145DFA4B80D3FC3AA074665316786E65706DA958BB71
67A4EE35FA629FE738CEC51D4F51431BCF8B14804F2C83453566253847077644
257AFB4D3D13CE77C9CD592F6C913F5AA3064E88779966EDCA52B2D9469FE48A
C8F6E5036AC9B0671508DA664E3F24BCE551D22434DBDF58196254D7D2C7C308
1A6822F2F21BDAE029F7F776C1FA7BA9CD94CA7D919B4E7BCB9B885FD767CD9E
96CC1604B95F0A8715837D7C27BBA08663FBC0DA33C2962577451DB48A4B76F4
8A4B66E7D2A2E465789D1E6B6D5F20413D84A47E5788CFA97BE43ED05FA176B1
F535C65F8FE60C72BE326737154602688AB71A8F12622648031414AB80C46289
1EAE582B933C87122DBDF3E3F1C4F4F5175E88AD0EC90B33CFC13DA07CBE8C49
EB1E86E0DCA68AF0BE3814595A4B2A4113FC8654A032BF00DAE293B4F2CCECC6
C0E804B658720C67DC156B4785D9A15274F2BF38748FAC7936275CDF42915CBD
FB21A739B80CE81B3897539492F113D589DA8A6C7B38621C8354625DC8B40FC0
7CFF21FD2D09E41AC9E99CB18FB9C92BB735C16FDEE7A8BB75A2258E76195AD2
1A88B0D64C130BE88CB2FEE3C723A46516DCE8DC6692EE27C6D8469FF511B7EA
F1B7EBA054708112981C79CFDCDD40BC55A1778FB3FDFC0AAA7EDC425FC2938D
694802705011B724423608C7BC1E803D344C9B5BDE13005D06C3F27DE0371EA4
0F836D5C0D6C0BE2D27700B08ABD09783D329EDD00415387C97C04F89607DCAB
62463E6A37E36C3A1CD92158353D45B443428177D1AE501F1CC0B50C100166B2
98C4824CAD58B3A396D097E2850B39130E743CF3CF59259A174586B9361D8F23
6DFDDAAC5B40CBA0495A3971399A95BAAC66CE5B472669E2C31ED0F2BE60E787
503EB379D332055EBF839B25802E076B1BA8DE3EC59782335AC80D1CB950948A
5EEA00C5F5829EB5293E05B982032207D41DDA035B3CAF26802A61751B17D0E5
170C99F6A0EE0EABB1576814EC3B4317A89C7F11022A0695FA3C2B2B80A2F73F
6A3FBD3A2B8C4820E7705CCEE368CE580434F3EBD2E9DBC162CB482278531546
74355C299E321C47D1C4C6D48C5100A4B8B2A16DD422AC3365B37A79D936FB24
786E9AD00E8E2666438B096BEF243BEC5C1AE35A9612D08CF7776E458265FC58
0D67659A4D5AB175ADB10F662536C8A9447DCF5173E620320A43B2AA5D5B5C34
78265F88656D2125C6E694AE4750193B05ED2A6DB4CD5A81E48B9912E25710DF
C66A0FCB7920479DBBF739D4BC746BB03C2F1FF89288DD807E805957EFB929CB
248F64A431C995F0300C0F836EBE1678C28DEA1F45034A4057520D17A25180A8
693BB0FE3FE6308A332A7E54A674B497471E2D13756CB0B991C4A4F9F4851A9C
49DDFB13416722223559BF7BBE8F1499BC93DC8BAC757E42E25369B182811ABC
FE4F1CBA5E5BC15ACB6344EBC575C2F443A508A46ADDEBF7C34D88702FE46A8E
D96C91AEA3EB989909A2B22E86FA80721E68A1385239B4883DC065A0C08ECCB3
693B0D13CA411A78C13BEE866D8AF8A634B81283B77FF62EEF25C5D48CCB10DB
BFA10E3066C116662395A6AF0B71D23C4047EE0352F4E02CCF28F959FD4394EF
43F0761B73B8D726B69D5111CF94B720D461E0AE42C974F2EDA6F7883BCC35FD
093304225534D8043D934772B0FEEE6427D0481A6CD8BD614669B875E1DCC6E8
EC423D9A0DA290D8571E97CB6CAEF274DF823767AF4E0576588CF2ADC239FDC6
437910EC0C2F01B4DC773E73C7FDE6E37D3E784E0E5B655600FBF3FBCC1FDCB4
CF356017BE2A663DD7983A46482A4C1B42A067381D58AB1B332CAB8E5C83FC78
1F0D9DBACEAAD372991BE3074D9911CBAA95E776008644F203D6B2EEAAFCDC57
C53DE48816934BF9D70F90F4186F6268522D260512492305533C1B0FB23D4726
6ACE20B872517CA01EF5EE275CCDC3BFE45C19FF225550E4E73B15E9BEE3CF21
1594CC1773CDAF0C659F3EDC2EA43C25D00AA68DA8D39DC46A1676099496DFD7
1155BCBC439742A80EC917BDB6E7593639CF1217C0265BA3183209DDDAF50E71
FA061C8978583D93EBD97C70A890230AA7123947B197E9536F0DA91373DECFD9
BD4E1C12B086B12077EBA19BA50B786AAE9244C60020F406AFF705CF029B43E8
D70CDD5DC7A61A75858E03657264392D9CAEA8C515DD98C2CB9E84BDBC6A62D2
36CA59D774BD889D64E6C9A0E043D04744D3D807D3A1B1B25266F0D9953266DC
662424A93FFEF40F47097F48D1904A1CC00030155AA3D9B07D281E055E6D033D
745856D9465D7349797A07396AE9026EE96DB8BAAA081D64EE4D86ADD8C4D1C1
CE8EDA25CF3242047E18E4C9870320052ADF3EA543D32E6EDC93264DCC2E5A1F
458369CC5CD73DDE165D5BF594C81FC992F35DF29A57464A0C6D72D5E7A92535
3CA14943640A67B23935409206FAAA6A11F598BE24373E7BF54A2B3C34551080
1B4DB4E3135AD0B61CB1C12A5154013E11B33393A1C16D74B16BB4D8E7B893FA
E6AA0C843BA5DC50FBE07407D8B16ED2963E36D021EB433609053BD19ACA31AC
53B1360A48F71D972E669D5357C22A33A7211F3380DF41069AFC7ABCB3300D72
FA1E9D6F2291E147988003554D2DCE165B5F316A390500D0273E83453381B13A
95D6E6F3300F36155573B8FB32A1691F6A9AAFC39541BAE0A4153C9F6B181B89
43D246EFEB5A2B5F66FC60A44E2E1A6D972C53B1E930CAA18A5B58820D8D2EF6
C1E798E9B744A31FB980C77D36728AEE6E682EA668F32E0C3EC70BCADC32A8D9
A2597F1A4AB9565FEE420056E8A8B0004C006AD981E94A84CB30ED6FC9642D65
0FADC7C9950BD962E0D86543EED6DE476E29A525183E52A8C97769E2FBC4149C
53A13C54341A9F554F0178211FA1E4731BFB84C11E6B776335F1F42864C70E9F
4C3F71F7DED7FB704A05FAEF7A2186B2C9C2AE9A3BEA55EC7F3334699BCD3D70
A675D3D1EBD9958BFE62267CAC06FA97421994C17D60879D8B847B39D5379B2C
079AD7BDB6FDDC56106127147297932F788184B0BBBEA5657DC92E4D6B097F30
97149A14677113EC8929C69FC93CCE56C068C015F46029110C7DB91DFE31E06C
CBB475E860D068ED6BE3B15B5C6F6F0D1D5FE6E7E4E47392C46FAA9CE932F928
FF628944653962EBFE4EE5AF7522BACB33ED77387B0247C146B81F7A860B84D0
D372252C89556DABA34913010DBA3576A6E13E3A184CD18D53FC758DDA762338
AF195F1F261D5F10AE0E733ECB98BA2F81F7B456A75D862C69D623CBDC50BE99
E3D1ED35ED4AEBD6CE39723F459AD508863C020FEE61980A17D41BBE0A54E120
1EB69BE8C1198663596A3678F11BB8F28D7BF5F713AAF61866B6C172EAD9D25F
02289C719F2C121A09DE6D8E47001FA41002DE821E739567F5D45F5C65D2A0D2
65D011472F8AA705C7BC3E0580BF4E2E007EA98AEAF9AFD2F25FB20B08EE26E2
E8F94A39F6240409F44E85FFAC9A46A2EA23A5A5F8BB0DBE50A7A1A9A6034D32
B777C38B88F25D392E59AFEC304C13CB1407C70B7DEC884B5B7AC97440CC198A
A949ABBCBABD1442C67E1828CE582D77F616A49BA12BD006CD541F707ED05737
FEDED2D912D3C1083AA726C21C396EC6A36EB6B9219F2BE7EF62D09E487B3FD0
9748121C531F7CD54DD98622C4C945E5B04ED2FD66D20873BB42C5391627B074
7DF90B81ECC6AA0743F25247978CC09C28C4F878E29A5070E4023BCE95FE0ACC
CC01D0EE219FA8344E8F6D7D43475678DEC28FCA370A417D2192DD293B13E507
F20AEEC2B825BD73A6678698858CC4B3DFA40DC96536735CFBBC2CEB5CA6A396
C8D387BCB4D6031DD45563921409C33F3BFFE220D7A255AD2B422AC9DDFE7A13
AFFAE4D39E8F285A4877D1FD83FF8BB9BAAD29C4C4DC7CEEB139D4CC253859B7
24221EBA02F074C94543E32176588F50D0ABB9B0AB449E21E01377E96A487B39
E45385A6A12DE9067750598BD5A12DEE276612012DC4226B14B0B289C9C8EB08
49B5FBCA42865EE9ADECA117AF8B2BE60A2F825F51B3FF32DE769AF8A9F0708D
7BA0C614E8B1CAFB429B6407B3BDB582FC49D3794A0BA6932824A1FE44429731
5F1C8D2DEE93EFEE11C29B1C020196EEC515336D8FD1FBD73FA4F2B454066970
1657B1EF286BB2DE8E5ACBBF40C992F9A22255B3D842E68346CF43C568E1DC7E
389CB45E387321424D7950AD8834BA43A128309ACFB55FA8D30C0A4E13A06862
0BA93765AD3744B7F0502EFE5D457D7CA7E988968EF34E2AEF0D1C5C1252BA48
E4AFEBD828CD1DCB34738801458A8E4F9970DFDDF7973961E756ED7DAD161736
0F774F441671DB46F07E28F57A1EC5FAFA529685CC5D419FA0ADDF1030B3F21F
AF395EF405CFC8FDD30B79B80CFC1708602680E9985C38474971F5A24FD0C415
CAF1F98938F27BB1C805F0617DFB86783BE6F3AE6265DE523D2781E94B042D16
36DCBA12FAC0BA0B2CAB48F31FE24BCC5B032D3987DE21BE7E191D578E9E5644
81BC38C95513F04C8F1BB7DD82DA3909DC75CD509C0A5EF8226E0EAC4BAD4D64
FD2D6BD98699B1B147B03FB3235F4F16F367D9EF10EEEF02093C40B9C6905716
E43CBE3B6814EC7DC6358B72A2DBDB3A22F65E1B9CDDD4A639ED9FF36E021E07
F5C45A74E31E755CD1F75CD2432D2E369537D3D738D643624E43CB52A1675A2A
2501397B11A902B26BFA828E9A744AB40CE3C143C758C6969350BA53BB8CDE8C
B21FF1336AAB3DA651DA4E822AC8E7B26B484955D115689E5B47F1FC0A88D9E1
C58559306D908BEFBAAC4411B52396F19D4585B4DA54EA8929B11DC4428F158C
AA3AB1B6C5736A7F52A3424F1B7995A97253C8F822C11204E340635D13BBEF95
108334977E7FE842A2159F2B9C85558031F5D1B00F3C41E627B1DB9876EE658C
50AB296BCF6987C92C60EA329075C391FE8162A7ED4E48FEEF9A7ABD6C26A1A2
C667A8B8CD2647A9CFA8C792FFE0C2F0DE0C0E93D1A7B33E8E7872F061FD9655
F39311738856E18EA0D00B495CB2457719FEA94CAB84DB6F5FC372411D7A0AB2
ADE0DE96EFD4C911DFDA9E71FDCEAFF5D560F3F5452B64A5DBFC767F42C2E275
BD357515CA488B6396DBB3F64411CA16977271074F78E59A64D710D418B800ED
C6B89803DB4C5C203539D1F5B72F010F93C7C4AD5B083D12593C3FB192661D2D
D29EF941C0FFE601698FDCE92045973835637CF0AB9DFC595937BF7D781331E6
78F335BFC3F213A9C80773876849A5DE2BA1F785DA4970B01E0322545CFE3285
AFEDD87CF46710EA0724F656056FF6E7FEB0C0477DA65B79AEACAF019F736B0B
E400B18DA926B3C76160D8DA73A825F5E284A960FF3BF2A28776293F35F6299A
16F2505F091C79DC80E303DDA479F1DFFA92519199E7BB2DB8BE5D529AE87BEA
9C10FBDB278575D4FF85EC06964AB08FBDCB3854AD6B13BD5C147792DE58A777
AAC6DEAA86B6CA9F8F7C650BA9C6F5D526CBFEA960FF1770A9E4F9D3F22065F8
3CEB641980C1EAE4088159F6EDCF2412B0A938FAE81EA3120B61BD44FCDE2B37
A527370EFB099E4FC949B359B531760002D06E1FBE1DA8FAF8F0E4F440E48FAE
58497C9B29FBA8875044D409376F5C1C311489D63C5126284E89C06A09104392
3F2F804121D9136572F931AC01A7CA36BF41FB2D06B4EDC917D5637C104B2889
B45E91B17E7911DB6A2CEF22200EC4175CAFBDDF52062405A6B39E74E3121058
9594CCD8D5ACBABB20EB16A2766633AF7261E19E0B78B3171360F099FAEC4654
B4D188B45B665E57038BD36794C2CAF82FB2A26AAE6E28CC683E82F754337078
D050F73270F749851F783BFD3EFFD47F7E3FB286FE222AAD211B1F4F969F6600
50F9D17FE0D7F1661B72CA7553FFD1B0A90FBA1FD7506BDF584C49DE392004D8
9ACC07672FE69BFEF85FEB24638B60F94F884BB190A2CA28AB6E03437A9E8C3E
CC53FB47CB8CF1B7FF38EA2C2E747051595D04BC77700B0D2DEC00237743217F
1D4D6DBFFD39E9375509519F32E7EC0537155FCA01909FFC3F3564B630645A51
9B2CD567D466DE8F5A8C44A74FC05BC3C70F8A5F031E854F5C7F0306851E7EF3
AB731425A986D8C49EC92ACB11210B19923527610C7B46B6642FA7C00F1E4F75
BF32D7EA312E3E619E3BB08377A1416A8523991CC1CFCEEBAD0ABC76826E899E
66B29AA961262841DCCE951CCDB7059EB835128559C7AD89835DD58235DF8A43
87751F82BD19E68D761CADAFD566659077D16B84B9B2E2E30C1E81DCB273F067
480106DF7BBE0B267D32C2AFCBD1390317C77B89E4D2B2C97C32E555A7DC9956
F11A35B9BAF44D86ACCD942776DDC310605F8615E90BB52DEB2C2DDD5FECFC69
10FB4F3FBD64EB85463E84A0BDEB710DEC74B3DD3FB0B34A9A8375C4245D53BE
BE17832177DBD1D630A2061956FB52D699AC4BC33E84B4761F58A6A5FDB09442
DFB85E399FF004AC896BA141C541DDE80B196F661746DD47966008041490BAB7
D35374BE730C4E94A3C4BE86B9E3B0AE10252226BBE176648540CE2BB3D05857
45D1267EB74C2165CDCA77F1F38B3E955414BB8F6375AECA4908CFB0C2123AA0
0303151335D7FF73A14EB7DC954B2D0849BBE18C0DC3E16EBC5207394A84D14C
94ECB97BEA13D48EE439B60C30657683E7ECCE3392F81EEFABB15E374AD39EA9
57EED09604ED9700EE48990F995B4FA7C9F3F570B2F733D0AF045A56E361F468
53AE02F019EA6C40E5CAB7C7B03AFD19B0BFAB0921E1CAB37BA01CE3ADE75CD2
E31F50231FCE00141CDE5C82A6186711BCB7FD9E929D84DC5DC3F4DE60F3DC67
8969B3FCF59B699CCDDCB758C39B42792830D59F534B07AB599671EF236A38BD
2BEFEF3F5AE76AE9875E8735CA684DAD49C646FF9DEF8000F918702637BDE0E2
D4EB9EF5DE792D82EAC63203D882BD2F6A1EBA7601230D522B5287614858DA39
75CA218919CCB5504EC5DDCC8EEF400F885ED8063A47F67131032484DDDEFADE
E6B42990E4CCF73442984818C08AC2135A6F00847302D3AD3F07C8EA08A79D8A
A55BC0AB5F77B2C45648990917B8C863DF43CD1FE729F17C9F3898A88708DFF1
059D5441E48D4CFFD44113D82B5A93122DC320B06D9051A4F92D4B26ECEC7A81
994035FD763BE610F123E04A556FCE2D907B0F6F1629CB0AFFBF29CC423CAE4E
612263E5BF06C4D4709F8359FF96CF3AF23E75CE33147AB149546D95C818CC8E
287699E51FA9E66A33CFB3FB2B3F23F0D8905EB215E749C2F1EBAD2E4676BDE0
1183CF8834D18DA2CDB077804FAFB67A8B5D1EE3C93011077765068991617E79
0F431181D3531F0B4F369AFC1D496D26720CCF12C38C6A790984DE98DE792AB5
D4DEE25DB66E54D0CFA2B40A0678EC091953F042145C56BC96996DFC02ACC6C0
7713B0A0B479EBF9E9A563E91E73B4B1C1AB8614EA36DDCA5B3C4FEAAE3538FB
D4032EBD4F6FBA9962B3CD42C78193B33FF08D1993CA908389A374A303A65647
325D42D1AC4C7D1EDD6FAAB14100F669300495D00C478DD594BEEBF89BC85AC3
F84A286389B1ECC580DDAB0FF28C6C3D736192A2B58E20658F2100FDCF3400D5
85807E7A7D76F6DB28EB917E6DB3385387E046A1AE9F960281A8BC6DD2F2F80B
7E144E10709D8324E8CAADD95283522B0049D588897045AE270F5C05CD0F0E44
4B0B25859D4945F1E16CC2A23778709780644FF8FE47DDC8E29FC9F661F5491E
318C5ED13344A429E456E90A4D8566FE1420CF6BCBE006DD673D9C5064ACD5CA
FAEEB9B199F8CB07CECBFBC98F5B7A9E2CEFD9C65A5FF315AA16D814ACDDA03F
3A4EB501F760EFA1F6B55BEDACF064407BB6F95E9CD858F113122ECDCF4E3DDE
18219BC9C07BA339466C4FB2AC228910AAF3947E1BFCB86894E8B80B501A592C
465E588E7D7CEC240CAF378F023669275ACFE9F65F44B656953CB2EA414EE4EC
7DEF6470853ED4D5740EBDE44313905FBE422728B8517A996B6C751CFD3ADE12
5765A2D247B6933A9C39414954C991182ACA105E644C040A5ED8AD1954566E58
DACBBBB7F256A9AC95B727AAD220491188F444BA3AEFA1F9B8F02D7761F2195C
68D25C175B407412AE56FC5172269BA29A153ADC9D015585CF8576EADFF046C3
2308B1F887420A07D73B147251DFF6A831420FED7642EE2E3B6EB6BF331B2C45
C33E2A2CC0B9B8CCCC104E592F918AFC9708595312C2B025DD000BDC6DAD184C
85B08FC4E98849AE1ABD287B2D3FB31812F2352639FA5B048D8DAB7180F238DF
2CED3DA086AF479B316E57BCBD599529B3236FD6D403AFA375C8ABBE660DC418
D8EA67703DDD3C2E6134DCF017F19FDF1A595E9EAD59ADE98F8325B9914CDEC0
B7FC3C92CB83D3E21213A57A46263061889A54B566392B3417A84E6BCF909FBC
5BBD7B9EF25480A05B11C635DA7BD33B37FF40CEE3D7662F295A9B67660C455E
46EDEB61DBD5CC3C61165D07752FCA41EACAEF62CD3D15506CC13035BA62AEF0
E4403918807E8004EB0FDE1C30E54BE160BBDEA4100244AD6529A2400FF72C47
74BB8D802B28E97E3B1E09B6105E832B2770C12276F0107D7309D7E3795BCA97
AE370F773D344CE32028C081B9E6E53B6CCDEFB09C89173AD2EA66D59489E044
2B3B1A2575C75FA714F737BB999AD8E3D4C7CA28CDFE17CC4AB9715ED60273F2
A0ABCF3DFCAD101C437B25132825CE0071824BDE5F76F6CD87A73237DD73BF34
1496632F77D759DA2FC33AE7EFC05DFBE097D972AE3562D666C90E33EADAB53D
32E32A98BB863AAF9EA7856B8116093729547D118C66EB8EACF7C58D9047650B
0018D5FC404D47FE5FE5D09A767AB286CF19A6F48541E1FC700066C84EA2CD30
E948A722B282B96073B758B5CB8E6BC6A7A74D1B686F9E3E05B2A593404FCB77
676B31E77961A38FEACA2EA173A43F8FE1FB8778B8D3B35B24DBE170B0F369DD
3960CCBAF8D8B6764EE1AD2E04AAB5D5C8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 99 /c put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7C978C078E766F14E0265FC8FFC87E2C8A89A3D69EC86120ABFF1DBD2
E2BE741D163595A8487F67B9E7395A5C8D2467DF54DFB9FAFBD8FE4194FEB6C8
0BFEB416F516154A998EF8629234C74D97124DCC543344C6414D2299086412E9
5861354D3D72FE3B8230519F7CB1A9E106AB795CBB25DDF04A492609EAE690F1
1226F3FD03E21C02EF9C2AC7DFE9DF9BB40730A7897311E04369FB27D6D7A485
A2D8CB932F88506FF3A2BB72E84021875655AE5EC6659C1166E61D301CF54C4D
BEFD7F9A354A8CEDD2F319470A5B9CE210E0315403B1536D455F401A8BF80556
CB34AE0A756D4448B86BC767CE65262C4D20BE9D7D75AC059A842AD56448E689
D1F7BBC324400BC49C0D68F2248D0C1A99EDB856244D7813F6330D0CA97707F1
E1501C1136059263EC94376113E84D1B1FDD649E94525DBCD7BE681CB6E4F2FE
C9F8A6F628D7938FA7B5A6A30D30568EEB23494BDFE6627258AA398E37BF984F
523CD7CD7477B6C9D8E80D4578010D49D5C11BC6323ED0EB11D0D7B5B72BA6B0
B5B59D88341038CAF6B7992CC242C0B31DA7C34BA2898C0932B3DB8A95587629
5D1AD9EC4B0E78096F154F0AFABFDAB60D808F72A6F429E12E04F41362046AF0
A6EC8C9E937ACF80D8FA7F4007A48685CF1BF689CC4913103AAE60DCEF96D35F
921E1D4257893598282D2726650F6676A5F999E37B93F18ABC3411B70DF93A11
BE4AA90E4F48A092E0A6E6B8C3BBD56576D7CCEE0C191AC5FCAA0ED19F562DF7
6DC04A6DD0616C16BE2EF5D83F6E4142E4E57DEFA7B2AE63B616A5C0EF864714
E7DFA6C858CB177D74F41483070A6D9355754FFFBCA131851A6891385D11C217
A17D4F7919B3EE39B0CCF70EA28C46C37D1DC89E48384B2750AF158ED559E0B4
9CEC12ED0A5A89F59BE6E947B342844939B71CA31FF129006392D66E26820588
D519AC293CCC90CAA53369ED50D9944FCD2B72602D2A8F763966097D10BDA6C0
B06B58F9A965A21F67BB5C92084CA34EEC54B60BAF59B43F206E6C5785BE6A71
BCC377130FBA62B29F3149A6B8236147D1DC71DD78CD2E5C1002BBF49C515109
E385E9BF63E5B3B3499DAD1B748C6E9F0277F689561194E8435501D2F3FDAE44
F4C77BFA753C15BA49AE6903D59F64567DB1F225A90BD196B79F241BC7449CEB
FD0AFE048BB82B2F445FE6756F85AA6E324D94B7991265C05110BB6BB9146DF9
9BEC575C4BCA196275DB562FE80D5F3A9F5D6EA7051885E7CCA5B4A5551AD057
CABA61FA9B112DBAF926A2B7C4B84754A80208D4E439B47DB69FD87BDF76501C
1145774B4788DA574A717874A5807E58654AD2C753D4B49264CE1E46021D57EF
EF3F6B2EDEC3B338E76B78DF11C0FA35FBF5C73EC382917ABF663DAC408ACD7B
C0ECDA45A370852D9DFE2068B98D9C787D6D2AB8D8A9EF8ECF964309C7B782B6
D90A2DF797B4D62FD8408CB7D97B10B29EFE4CD659A29A6E1FABD7F2E82B9203
6C37FA51F70CC6BC82E6D728AA55C0852257D21F2E18D8809D46755060AB2390
179999D9417CC312E8096DEA14603FF61B1EEA2A90DD185587F9567C3DF778FB
62F2038BFA3B9DE1B3EDF744A520FFDECF15458F08F511D2CD35266B3D6303B9
A58D0DF6CBADAA33E63FB90C9391C51F88A036183E12E1930FC07F329C3BFDB1
EA40903F4BF20CD4B1E3F6F5FEC7D6BA85353DB25179A2AC17DB3197F0D200C1
4625511B121B36420847FDECB667D6F533FF9A8181D67DFBA9BE6C86CACC7622
83974A2360F4CA273595F1925856E8177535712C48FB746B811838BD87483AE9
913AD052DE7008A4049A75940ADDCD0F20730B0D5B21BAB8DA8EE9F0AC295952
C4A2A9CB1BFABD1745DFAE214E774C6CDAE50FE71463998240BE34374A44EBA0
1613FA6A89ECC142B9D407BC51D600CFE2402C65C8133B43DC59A4832D5541A7
63AD926BBF775B9688558194F4C3FBD07D696496153D73DA5BB2AAB0A433C4C1
1DED9D34070070CF19FF64FDE5649D63F9EE1A396305CE3D3D5FC541142B161A
6A87DD79285AA0910AD22C3F9DBD87F956F585A34A232B5E0F466AB06B987A69
37BC0224434B8C3AB67C8D1B93840825416D03E0AE88DA27D14ED4C46ADA1998
4F54D083CA65CC224440B216BA7C90575E70397BD8C9462A98976503F4518E16
A15203B29089AF199ADDECDBF2AFD95E317175E7441EA4C2A101A7555EE24283
75366A9574028664C4957832F40AEF192ECFC62E67CB1125EAAE67DB86FC8DA2
AD93B7B76A047F023DCEBD4E1B44669BBB6F3799BC6C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/UniqueID 5000790 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 99 /c put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A7E25D662ABB1542A8F8286AC328D0F7BA89C91617404C0FFFC8D013B9
64E824A7C9994BD6DF937BA9E490B349037C2C50E950ABC95FBE8225CB7D118E
956FC92D01B9469797AC05C54EAC8E5C92D09E97DCE62680B66C843B3397C94D
3E7CC5565182C2FA09374F25D648AB2EA55AF8669BF446248153C4A97E276107
0986B7AF3572A4E9ED3E205E4836E9C942268FF1ED3557FFEFF0333669D96213
E63191B83C847E21625369DF00B230504C4C740CF5BE4F8F3817D6C746C19846
8D584BA7468DFECC34C0682969F87A32D4D24DB693FA99B9DAF63D748C493661
1F1189DAB529D474B38E13A7DD4E27AF6C27E1C3A2F48CE16838BC1EEF92B07A
DE295D76FE2939ACFC95F437C9C1469847891077B759A3F52F67CEA13A5DD5C0
0BC39BC65856D16EB30E32DD9F3227E624B9B80686EAB455E7A1217ECC71BBCC
B3083D373D8CB5B7425E541155D2A3E61A285167231B9F444D423BDD2660EB4E
416F1ED295BABE03C74FC8DCD0D19B0A93659EAACA48A18F583496A610F5513D
E68F5B58AAF52AAB73EFC39F11361E9936212D244292F06C1A75D1125C704D31
D20C0AA637E4C377FC67476E3763A2D91E7009A62AE44BF76AA20EF8B1DF7573
E9C32A0A77DB7824B64DA0BB41C9E10C20D0EDD8E344812B3494504D03EF63D3
768A71B8AC961BC4FA37B72CF411EA60BD71745287F02F668DA75F366A11ED30
163964CC97DAE02ACB1787774884A13C7D6AC4624FD1A83AF7FC08019C924A89
6B7422804E25FA906F1EB8577260CD21213D0DAC936414D12F8B23C44B76D3E1
2958F85D8D3AE5BC659476335879A70E789B37BE63E014DD44618C8442A6A1BB
46EC1597700D5C9DEED90EFB0A4450AD109719FCED8EA5B12E5029DD6605C7F1
82BC726F4280DBA70FD217218629E70DB81C5C16A395A97D72D57ABF4F508503
DF316F7A78CD929F266301CB6258048D5FE9D3C28E077D8505290D881266B899
33591666201422899CBE575178DB9D93D5CD4E1F5ADF185DE59BDAD7C506C961
D2DF2CA38B7818453DFC1E6CE83CFB197414BCC0A6B2F46D409428E4E661F539
1F4BE477B5126F2BFD73823C6124374BA040A316B1B73663DBDFA411BDCACF62
92A3E2354BDCE87106436B6A5D52CA91E906D885E5B7B920DAE300C54B543A39
1FBE3A988E389E19649F54A41AC57EE13EE49CB21B33801CA494E9F61CE4941F
DE1349DB72BCE6CB942C31C5E72F56F07CCFE68AA56F7F52BE2F45F6465F5186
BFF67D503981E407CF2A2995EDE59CAC1A4E17A5FF538BB73430D797DD7D13B4
264279C63EFBA47F1896433A755EAF1B97E5D7FFDBC6CDB76249F1460C0CB528
4AB1B5EB2F095CBC5BC4ED367DF8F5E5A5A879170CBF5CDD113EF7D49F449C00
208B65BBA21C178BAE6B2E83CA9CA8BBF966D0D5E2CAC28463F3554CDE0FBF3A
89790E7EC49440CE305D308F0FDF59269F1C59FCA81443F91E0574CE931634AC
9E40E941A1DEB613A25E513DF47811CB232C3AAD30D1EE6F74FFBDD6588BF4FA
9B4F31673CF5B2DBDCA3064DB6A8CE9E0B14B0EF16794CE069D06F474C6F1D32
85EE9D5C6C6CD3894AA67AE1BE222B936B1B5EE27D1A877E9E6267A2F0369287
8EF26DBFC10CC5B672E02940A5BBE510DE5B20C980B1CF306DE329F96C8868E3
16B8FB12D5EFA5493CEB343B8D999DCA367C152E733CCA0DD6BCFB7C17D135A9
B8DFA0E12A8CB0648195A0CB089F4CD1A61DB5D9C32DC13F61C7F32E664F9C95
9C77F460AD97B5239E4EACE6DFB0BD380285F9DB9D9C5E436E733648FE83E267
9E823F32EE8F4C8AC9FC12F483ECEB0BAA4746A0DCB4F91364229B8AB61F63CC
A71C9E7AD47887013066AE1049B6B544BCBFE6231763C9452066F68B0DE06620
1B80A71D64CC3FBCBDCC6D1C74745CAD8C957763658240A313664968B8E38867
3BCCFB8BDAC4584D47D0640A3A495D71522B0D822843778F49219DD1EF57BC08
5C9A7D1B81FFE9E093898AC80317DF6879EC241AFBECAFBBA86E1E460EFA2CB4
554D9C1E4D892CDDDDDA41E3D261B703B72E4DB641E0A772A321195C42368AC5
B89997A3713B956B90EDDCD5525AFF9DBF4BF58B1F169F5C1BAC476937FAD2FF
EC6976C45096A87764371D9ACFA4E11DEF52126E6018DE04A84FC181FF8BF8CC
14466099C3DBDB33DE3E78B64FD0615C4F4AF4074604DDA5ACD3F07ADA93B8FC
79AB63E6CAB3CEF248807E52E83E58CA33D9FB7D4B2521F4A75DE69DDFB36EBE
9F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F362471AA58488620156F3474FA59CA080EA96FE995D2B3DEEADF3
3141D157481C66507725ACA5953CBBE1ACEE7E3F02C72C6552D15EB3D612730E
61A06A43575568DC3CF3844BABF04CA767E2995196097015E0C4F622C4356B6B
F41DBAFD797A4B9D7AC22332C552043EF98913D0D9B50CA6B7CDAF903BC5C04F
D20A952BA5CC35B646ACD0A287C956B98C450051AF6AAF79DF37F8954473F8F6
652BF03AE2AE82B99D820CF93F5FC0BA17EBD7AF90313E70594EB5C354023BFA
07912408F1757319C7288E99872B907D5AB583B082EEED8AB079C63E38B07D11
6744856E689A479CB3A8BC081F33CB06755926204981DC0A45B3ACC18F6865BB
EE2C50DB43B62E3630FC1D9B1FFB3BFFAA6D0A20C0381ADF48E4D916BEE85BA2
BB40F538F55C11D50F882B73913840B45161262BC8B0012694C3EF26452F9B77
2CD7C7AD6BFEEAFE31C8A721C2D46AA00C10681BA9970D09F1E10DDB693AFE84
246AB18279A2B24E5B50A2FF6337B7B1039FFDD4B00ED3667B5F2F7BC2786D2F
525A0E82234B30711AA835EAEAC2E404915FC7EC0081B194765032708B5E11CE
EF6868298CD26E5B9EF345BFA3EC2911E2B96A0B40AEAB95BDCCEE38F5EC170D
3BFB792D2DDA7E57BD2FB7669484EF9322A1BEE009594901095DE2BA9A15A0EE
4DD77404CEF16EA6C31FC04A8FBDEF27B9FC1AD3264388B0B12D8E476305B912
30B51624D4605C45B514473F327DC3EE8BA69032A95301CF714F225A92C253D0
D943C80B9CD0524C5B87A8D052D2E47A9725EF869D3CA890BD15DE20FC75F2DF
6D80192C27876568845E813406778E1EC1CC156EFF2B00A8E1101310260B0BEB
09B05DB3F8DEE176DD49221B4CF6C04902CBC970F6E70DBE10E747E1984A1C41
D701E6220B001D0D4E797EF349A0EB76D9524D9345E8226E83D3291C832126F4
91688AB4FFC28B25F44AEF8261BB77AFE132113B251001F008DE01DF02DAEDAE
3EE92816034535B4CD4E7D4D9BEAA2F089BE24ABC3CAE648B69A47DF965FD79D
8348CE3C1F8B633847DE60058E64505F43A3598B2B5C7AC6112CF380D176DD6B
C6658BB55B16B24EC39E1164A06C9A13B541EB4AD89289FA3EDE8985351DA764
DB623D1E0A59B9FE47D7D4D67C241B46A80FF2185C146C3B2548A3F184A9CA16
5A805997CA80E55235652E8273EE34C3A4EF02DC567C28815820A6A2C9C88CAE
D0FAF10E70A5342A68382E8BA1AC80B3A27C2B2E981904872A634C4E7192D838
5D9396135C859A0A499FB007FC17C72A4103D5F478A55576C1EEDFBFDE9B9490
486D6A7ADBD6EA7163DD1362A8CE7A17C1064CB861B8D8ECDB8DB48CEFB85094
854B23A16EFBBAEBDB9C4A4F80A676D75A48977B38802DA5B3B46771F606C6FC
971663197B32162A40F09D36681AA6A43DC09B3B09A057D4777C8F04CF79C7CC
222E481EC10EE7256C55EEA3F2D9681EC090BF144C4DFDBE0A82656D3ECACBB7
E5709B5D9389CB6120153F3CAA26E81EF1C9C93BD11DC8E80EC1BFEB6B13EE5B
48851856CA6D1296CA1A0939DAB7860A1AD1472312ADEFA8EEAF7EDFA4CFD36E
B47CE4A1E974A7981BEFA1A50D5EAB46B681FD383F35D1033E4008E309D678C2
C287675D73154A460057914C456336C8379D1B5FA83270898C37092D4C0A77C6
64A10D5F25C8FD7A0D4961316F641AF07BA94708F9CFA0F45AACFEFA790C5036
965090789D4F09309A682485948E702D3CAF4493204C69E3BA836D7EF5018BA0
B9143D1598FDB410FCC65C406B8A7DA9502695F6E593822F14A2D61BF139A8C3
6524567D0E7353FAAAD9CDEEC4F30285DF5275E398A48E5761D90ABF2A49803F
6BBBC532473680DFBB5D0714B8002B02CC64A94D08BDDCC734C7BCC1532ED57B
7F8A317E654F802F8390F4EC362B6935F36FC83145706797C532E04748B104D2
FD8D532D70E91A5E6117720C4A8B1D2336E8B7DD7E698C3E3A5CE4DD9CCE341C
068360C7041748B6F1C59328ECF8A0BAC70B0450588943DE555534E7584CFC53
F55B75BDE37DFBFBE5DB1BFCC5AD4B2EDC7D2BC66DAD321A778F6A7F4B4D460D
34DA1FFDDB3F3E4808A5806478F7424A0630C2E9360A93AE5E7DB73311A007AC
C8131E21DCE30152DD5AF9200F015AA7EECB27D0A33F80B4A1A00AE487509ACA
5FD70E2A77B549D8A29D9E9E1F896403991DF75E4BFEC01D96FBD7D076B50514
C817AC3D7BA46869758D7E3D5665B3FFF06F904A61C147BE8E49614768320913
DE0F6F5038676A9ED339C5EA1CE5CEF54C34024F5539AA13A0163ABA54C7A51A
094A690960FD919D83DF85BA4FC0A377D57C38C4BA469869919E3179D83997D5
4F132378DD12D9E793C27040EE42A797547F96F920E288FC1B65C3EE362EA5C4
F0A5AF7EE89A00609D4CE871E5CC7EB30B9662702FF307A64B286C024018DC26
FCF73804CA5F71282973D3538C1BEE3472C003AF6BF7798E9D5EC265C1C96B0A
969C6ECB5873870D1CEF77B534BCBCAB5A06472346EC40A6C714D6B0A0FEE97A
98E786471EA30005C31F177816B8A5397B3D71DAB4FE78F505EA6F6E9B9B9016
FB2C68043EBD3CCF96CE6EDFD81CD2E9CB17614D0A18D4E839A84C19C9B20154
B8C6E1B6792BC50776C5737253FB5D2AE75F5C2A65EAD3B9310B9F706A76F968
046B2F56DF1752188DEC70EEDE6F1A1D76F20F775A0B143F1D9E1C889376D26B
E1FB7B1A129B52B2FD416E0C5D4DF183B37B83625AC8074611EF19AB2AA984E6
1976147B89B8A09A1009A55A99364F96BEE402EB7ED23E493CA301790B8F8CE4
BE35593E76CD5EDBD82A6C71C267409467F710D978EEB14A276935114F9D2367
6AEE9670430065C0DD4F602C0EF5104EFFE258C051BEE19EB7006A049FD3B350
742811B88637D17CA663900EB1B351DFA556AF66AAD0301D9478DD641CDF0C04
5914B09C0DBE56DE145488C0306C9EF875CE082420CF8073DA160A20A843C856
5E3F3C1A295EF5F50B62E4E2F1C24E74B6CE6C90F7420DB23457BC3015ED5B81
BD946D30113B81D5CDE229BB2E6146AA109B89A27ACD5A01A2D4CC7AC292058E
04C11F371DF43FF38F4475CBBAB28500F4ABCBCEBE9E532FA80D9A3C2C6912A0
AC1CC0080083AA8F370425FD7EE5D7483B27BEA4A5F496EF2D2E5A6DE68FC20B
2EDAC57341C2275C644B4F03919BF074E3EFAA2BEA99316425882A24362888BE
E48FC258EEF0557DFC8FEF287CB7775E1702FC17DF6F1407BCBA47E7C6E453DE
EB7AB386AB4E11543504B9F56B36303273748AF2AFD98EB87814CBE838F285FF
B171B408A8F4C04248414D327EB4BC88FA886C83949892103BDE93E7DF94A65A
BE98C80AC4F9E547EFB928F5FE7E972D66F57A6FB752A9723377B01590108EE1
B0AEBB2ABAC2496CA91684F066606D40EDAAB9FD571E09604977A6D52BB7D6B0
C6B0B2639912DDF0880B1CD099FCE99268C8229AA0198F4056D5C7A6A044E50E
7E44723EB42AC7D1533A2F178F311A8E08E4C56D92900822E9390E88714EB61A
0B4AACC908540C9F6C30F1859FB4EB085BAB7D12B3B57AB0DF86A3AFD02095CA
5FD3313D08E44E4CC080AED96334E543553C64BADECD2208915F9BBA41E2443C
31CA16E62225A026759E07022ACDC7705AFBD2B928851292AFECF8A055EA63C3
82A863190E08B7D2572BFFCB1E4AA47AA0D4E6482404448A5AE78923E618E8B1
5DC76164E5283578CFB9A2D950479F55910D753396941A903A90BF64F4B77C15
3EF24C817D33A96AD5D4759E5B6550F7F2414ACE57162F9F96CED4305F6E30A9
82C30AA2A3AC36EA4FB71F2025DB83B2704F062AFD4EF8B134E1FBD288B8B3FA
39C69B625AB4F86D4C28F05FACBD42F26E1E2B5654306BC193F6D0E55DC82CD9
C251BDF71BAD455717FB9F32F54E56DB698C0ECE3EA33E1D743F877F57196ACB
E9F70101449FD09B06DCBAC6EF4E5336948B07C1C9EB04ED4FCC1C711BBA12C5
A76C285CA267777D305DA1BF35BE7E38F1941B1C526E7233E932436482353D0F
37B34C6F2DC9D9CB9AD22A7A1238E687F9DEC7D5C91C962985A693537DE3F92D
B241982D8A4C2AC992F956CB1EDAAAF798780FBC603ABEC17F1B63558CF10085
471C340B36F43FC974B43AC1FA919F23A2F2CF7A16BA18DF3377A1DAB617B9C8
FD80314C4793504E5B423E958D180E4B6DA4AE01E8944152D5208A6FA47C5BCF
0FDDEE7FD765FA904597A39E769DF23C1D07378782AF80731D4A9BE21E6628AA
E20CB7B6BD99AD7A0165A3AD9B05176D0D6B491654EBC2D2DB5BD974846BD635
FE369DA10BCF9210A08E3A687235D199AC31A8BB4E577282DC46382E841BBF95
A07528C8343292E178983EAD8EEBE2D2CC4D26C28195A1F4C4029F04FB12B8DA
E4552C0AE774464DFF46A3E9CAAA3A6EBB0C27F6B3D45356DFBEB0F12864B22C
4C56553BDE92FF4193C2D86BF68ED556DC6007A926A79DEA7496CDEA58AA14F8
C5C089C4BEA2AF3EBF621FD3221E2C31A9F150F0387EE3293396BA5E76C6C6E5
A845A1058A3231A98082A64E114B2415598E1470196FE5F1BEE4A5FA5E267B00
5A504773D6756B400E29AB5ED171FC3685347E2E8E0DFF065A2F88940D77A60F
CCE0B65D0D57BEC53A5A9A2018C2F7417BE55A15D3C44E11089E8FC31F211876
7F5E95420FB8C234DB0D8619AE94095D8B2065D958823D263EDDE310B5CAD50F
B096B7A536450841E5C8490E691EDA0B94D038CA24786E23EDA3889D5E09C44B
0C853590318CFB9736812B7CA2F4D8CE851007A863C462814154DB6CFB6BBFDF
ADE0B52CBE6F6472C1780B4902B19A2550B66E3928A11538177C1FA600CC883A
6C5F8C84B7A9826B29936EFADB8CD0BE07F25F9ED8F892EA63AF0543ED3DDDDA
02FB7B97E46ED0BDDB3901382D96428BB09175420F1CBA23EA0B3D11FA25584F
14779B5B05F9DDF431B54B956B7FE93FDA95E06FFE054FA63E4969855EFA2E66
DAE44348EE8F922182A7088D643BFFE129E8E30A5649FD29627094840F726242
24447D7D202215E801F3B44A08435A485A9568898B104FDF5367CD198E7C531A
A4727AAA57B34DAE28BA623C5650880DDE4A5B1D6A2E8F0D0F233E9C634A2763
13E1C6E893B92A00A7523C01256FEC6E79C420531C86FB8C6E47B9B0E5F67423
46F30542B0873B8AC3838453D05F1EFB550A30DEF5CDCEE065F73F99AE9AEF25
DE2C63C4FFE02E9306EE815A0843F6F204C11EA76C805E7BE659B39D75DD5143
051851C64BDA173AD75A1D87662F7608758F4DFC8924EB24E8FE48CDC3808B14
A0DCBACD65F69F8DE5D2EB05B265804D52151A76C60FF91B852CC33F0949240C
48FEC619736C2B6600BAAEAA48530546221A07E58B6738DE83E33E517F901231
15D607C1C1116E6FEE48B207B0D93B89DE54EF5FB2CAB79D305D364B52737CE2
8672FB64C04C901671FE2DA421C4A6B8C10C8EBFF2FE813A1805688870355192
310972526065D715406D0C494C4B3659B39F19178F88D12095720A8B5F1BFE0E
9994A46F67E6215329B8CFB9C38EF8FBC6D70A028CB757D59F19924146EF1B53
35628C779E1860552CEFCA98428310034F8F51831312264C0E5CAB9EC5E146C8
C9674BAFDA20A4786DD75FBA48E1F6EFD04A07250E9B8AE837B7DDE8340424E7
0D6C1CF245294F5355A6164C0524BFDA1B872BFA9B013D6C5C0336BAB3B76680
2B055C5D7F8C4C72D2D2F8BAA6C338D8055A5A7B73320C33A296E1BFA2B6A625
78EE30E172219CC510AC6234F1310D18E437611CD5F923292B24129DE3D706D2
0163C8F3E3BDA7BFB8F79B00EB31F6C969F7EBB1253BAA5B730DE9B8193A9E30
259C9209418063A62507D24287508689A580636B5BE45CE7ABEAB5D6A84980F0
3E283D8665DA9177C1C010D42E92D8ECC075FD0B5D94A0CA6232B4DCFDAA241D
54109CEC294759229D9630B95D87E189BDC7C43359728F2885A60A3DEFFBFA7E
D54C83D64D7D43B3881F749D60AE6B74B0DB30009CB1E06B31747A5D1F910A59
A626B501467DC2131527E7BC605C14F8C792EFB93EB46997610B76C0E8331F49
89E624ABAE18FBBFAB243C9BB8F074A157FB6D146179EF1D456D4F9A8971C7DB
733E44725440646BC26AC7092C277D7F663D56B2644B48315A4D5525089544C4
96AE4352FEDFE5332262C12D82F23805B40BA7D0B1882E018BCC77BFD0615029
14F87B1C22C77E4AEE4AD4613B315D24B7802025F3DD96B454547A4C37CCC605
18292D9D16D82611A4C9693CB134403ED348C71726E7F4A00F19732DBB0DDC10
C55C02FBE727F358E296C6CFEBE63BE592178A3C9A3B3B0A1763C45AF29E9D07
C7702D6023D588B17EA774ADFB5F52B13D909891BDDF85DC9429A11E84C6DD40
E9048EC3DAD92B59594A7FD1D64015FB5A02443081215B0975C8D7C333A69B70
23C2D7E8D1A30922367B374A6E59F29511FC09BBFD9C60004852395BE44B8F5E
92D2F88DC872CA5406D81DDDC64CD50421C21CD5663C7ED32A999D9C758CC00B
7EF3561D15551EEDCCBE9BC55225B509820843BECFFF3A13CD934D06CCBA011A
2935EE653A88B3FCA1030ADC3AFF4E264CBE75A9CB1F64956EDEE98ECED4DBE2
8A23ACACF6E12049715E146329C435242FA5860BDCC3C851D3CD318F065A9D7F
197A0A31BC677F816A177AA16646C2B6761F0B45C714638D8DAADAAA6A984FED
DF3BD98F03E3BE0432DF1E614E1B80CA204BB6B62E8715355E40405A7AB0C542
6334B2E146B877850BA09D82F3C8CF26F301329AC69D41775685D9A30B691626
0F5924536A259F21AE3BBBAA7540A914EDE5DB7A20879CBAC6BF59020ADCA1F9
9D1C508AF7886EA3D9AEE4D0528DCF8CD8201D4F70BFE966EC1AE24AFB8E062C
2E6028414C7FCAEAC26457A4DAE161A2FA6CBDF5B88A7088D2533932EEA3ADD1
7A8C17AE632CA3BF080E7E7D004CB6DA46DCBEEC12D2D76AA6E5C7E954432EED
07CFC0425B71AB914F6666ECE9AA837A0817F892D98BD7B160C9596D3FBE094C
55E3669A63736B1B9281DDE42F6575586D2F497AFE97B657E77500322C99726A
98A82815E3BBF5B9B90CC5C45C77D22D6E4396B7DC43D8556AA0553770FC828B
17CD105ACE541532FC80F86B70EF5EFC7A04F4118B5D9304ECD4FD38A222B008
D1B01E0ACA21681D2985C273E277C1DC7710FC611197103E2ACEE46E1FCF89B8
B76CCF92C0711CFAAD750D89848A16D3082B2DBB8269F8177B8E9B4BCB4B4856
6D480FF4A22143A350E3EFE92B95316BABC17BAFDC8972BE625195E81E6DA509
D41D279A404992C0914BC6D7C7FBA0D05ED264523BFD7C3C73FAE07B4D23F607
54A82806411B2457298B90DD73ADBCD5B87906C29567037B1825343BA02F671A
55EC11555BE323365EBDBF61066C05FF19283A82E3B86F6F6D2851BEB83519F9
B06742FEF4045D43C649F5A1D172F970B20C44757E7013FB6FC788D30FDEC13B
7DE65D92C59426BFFD61975303C97F92CCC5A199D19474B15E4E66EFD5341BA7
5E8878BDE82F3F064BFD755B0294FF2D592377F4EE3A06766DB1C75860307E64
DD95DF9878F0036396C795CF7F0D6E08CD2E506D779B5C14FC1B1D9647CC63FF
CAD653E41BC290EBC9F22A1CCF847CB5DF2A4ED5EE4A4C724F9784070E81180B
CF2B230307C44223C4B4451A336A499159DACFBA7788ECFD68B8AC2F343CA845
8F58D251DE6D955A2DAD1543C5228220918E8C476DFC20AEC6F9F7C3087CBA19
380E2968969C322BF9257FCAD3807F5915936EE8E16924FB3975A624F604AC59
AF64DE7A602741B8C5525EBCDEAF5873B0401CBABF39F1B307FB95A060B2929E
BA8BA4ACAAA66582659D73832F07FB437423AC200D986F2641DA060446EDEA47
E2AAED115695F2CC648F892EDE68F99BED27E1842ADEE356A7BBE9E1E05774A9
C64AB3D0B292FEC1E702EC86DD4A0209B8F157E6825A1A28CAAAEBDE219653D3
33FFFA87A5775CDD49B049E20269B95A327BA40CEE30C89842CA24C1D769DCD2
263BA469EC953C4E886A9F5C131361523AE5AF8DDD8BBD8D549D3A32EC63B123
F7DFAF2DEF89087C61ADA75F02187F9397D1AF94D15832B913DB7C32428C7D73
756CE51002C40841E5BB83E1FE3007FA5B1E91A49A979AB62E168DCEE522DA10
AA88A57BA6985BF82DB5042E784DF1E4ADD48675D885FC179BEE53BC8B0A4ED1
D5A0F3722930F6EDD6E1C5EAD783F34BDA05B0644C2E34A98BC64AC8AF087D2D
FF37B269FAFD3DBDBDC063F3D8DBB64EE2419B3F4F567BD5EE9DDC329FB4AB6D
887D07B2539CEFBEA1F4A09004A5C100150DAA5B84C045D1180BDE75A741C807
0D86E905B979EBC99D5386A09505B7930F86DB423D630BE795F187E6710167E1
8AAE33046167F225E09525491308AE24017D84F50C8470F2EE322F53C95DFECB
81215CDF14155487DC65933885EBD66472B2DD4F246D1B25573128E842D85479
7BD8A73BE1FC451B97BE72483A1F8585AC811806E4B00D40BEE6820360B48B3D
C3854E84960EBB21848249DD9E58AF2F367E4D0506886C47EB8205261779CAAE
581381A4E29F462EFA19D57D73A0A9096D95144AFD71D2FA9AA9B8BED1383267
C2975CDD88E08B20D8246F025A8C724E2C2879081BEDB0F58DC29DF8F410C6BD
C2AC28B45019B7DE66D4EA238BE94DE53DDC61D3F22FF09478CF3DC3948B0877
E860AEDCFC17087D88A3A3BF7B34D71D1811A096A3A587BAA17A220D1DFA9F50
08535D50FE9BAA19EAFF5CB89E36367C4C5C2EB892261A1696B9B07B1384BA9F
A2C7EBC902796E36DB1D441D5940EC4D20BAF561553F14717BCAB015512E5850
9CB762685934BE786F69A9A1DD035F098A0000F783BF64A7B9CE3E9D9B3223DE
11DFA2E4605996BD0B0679C941C32D84BA901CFE9ACE9B7E0B6F548E477E7543
D16099E1EE08E27917667851DFB31B0DDDF69DC2B138458C3D1E1AE84C9827B6
14D0567D697A43FC668F75509ACBC8D52015DC06C3E9321A91D1BDDAF87B08DC
F66D7E5CDA5C62801C22EBF0EF0875E2FC7A00AAE0C8C713CC47878634ADD267
9090FD87684674FC9651B8DB574F5C049D638D004A20F02B5CB1524AE6ED6E58
92701D4D683D24E90CAAABBFA7DC5A7C9292BA5B6831A8FA7D68AA00941B4FDC
647C7516686B5A581BD76A42BFBC77F1782423C557E111C50F12A555D8EE621D
85E0437F442C356FF6F84DD1BB7EF7CD6B64AA17B1767C77EBB908B555A906FA
E9E6D397511CE7625B06C1579ED83ADC9EEC21E262184D13563E91D0D75EA7EA
8ADB0E59159538A82D0CB2EADFA1FD0F29D5367160188815499A5548410D9E94
FE59C19E10D1B31A755E6A20B9E4CAD41CBF7EBE0B79EC02F7D9F1BAF2E7C0DE
311BEAD9CFB0D46DFCD64A4AA15CEC5E913FF58CD7E6CAE73876E21308AA36FD
C17C5D6D1B54AC2E1F6D511020F04F0B657518284EDEEF0978F220DB351FC9B5
2F16447D2E132C79139148055BAF66FDE87FC317FE94522914CCED5ED6E0D4FD
9A91E228254283CCF88560351FB244597AA15800510D77CFDA90C75B2A95FED3
77C1CC9C1C79618DD6BD63EE2F6DC80261322B8B7F8EAC363D0DCE3AAA77EE58
1F3B0AB7E7C8A400F6786758D15B2170CDEAB115B64756C3FC3A719704547B32
A119E05AEB20C300DDEAF725CCB562A0C3E8829102FCB2C938306F380DDBC0D0
0193B7963E52C29C29BFE7757D64F99B79F6BE9C848E4264331D69327EA4C14E
DB2F41DDD6369506771A45DE9972C238EF227229207C4A0146F8DAF867D3A31D
0149BBBA39BE060722F5EE0E7551491DD4922B7309B3D5D95140159A89CF4421
5F3BD6698FEFC71925794989EA75235B9534900EDCAFD52FCFD0365F823C3339
3194E9451E026A3A7B7DB74BD0989489FBE19042B2D7A6898D0903106D3543F3
0FA7DD114DD1B0AB0E1FE82E76C85124273441BC47814EF2A54CF01C0245D893
ED768931121E1C1677EF0DD74015A4CFDDD85F92225530D1F45BADC92605E9C5
F9363289308A37D44AA1C772023060EDFA1A44AC2BDF394AF690F02184BFBE39
81A5C62B1EB64222D8D2154FC0BE1438DD4983F5E0C593807CF2658744349326
4A273FE23DA6CA9377B6E1A8F8D379E7C677C8800EE144D2D8B6CE897EAEDC34
284BE257756430731612386A722DF4C696552AABDA55CE5511F19F9830F5F60E
AB1896BCDA081CC39D9F4BAB354BEF1BD8B70668C71BA826C3CD11141393D1F7
D5D424B7B30D304AF94CCAD93BCCC21A0814B0E6746ABC6D9DFFCEA42A25C314
9F46003B68EB836E0E919C653F5DBD339B69AD86D6D7D2DAF3439D6EF50F2DD2
3BAE31CDA5317429D3170826B793901DD0143F9AC8C787F96AADDACAD6D64666
A57583FF463D5DC01012C9129320475FE126912D1F090C922F45A010E776A476
EACE4F7A4D9CA236DA83EC079C871D4DBBE5E6FE835F26D71E4CCA53E29AA354
2A22372E80212EBC1DF6326E3A81238580B66905D10E86690C72F6C36106E9A1
48F39874A1800E430C65B8E5F7E6B1F4C8840BE67C66E0B5AC49E8A1A10F1C1A
3527C1F8E4DD334B8FC9685B09E3182EC4C1E49ACA6815355D0744EE6E88487D
C374D1EEF0F43AD1BC06E59A8B24E3F43CFA0CF8E0FD1252111943E670EDC35F
19E2CBA0FCE103A00A5EF485A3AC891EC2025CC763E681A193F0B41BEC09B67D
A98FA6445D08D3BF2D34A8E5441629DFBF95BE29705DE2C070C95FB0473D12CF
C6DC3796A327FA54B92DAE94497C79D4BCDD2B7879350935C58F236931641094
5D5D4F417A54CC4B9C2FE44C24B7A166A0435C6B8C4B84CC10FFD37AA252FB25
4366F795A42B84412681A7493BCECC0256892B0B5610891E48114AF42238FC31
B3699BF1A68A52F529B59BF50F640933284DA8537C14A35BAE2A27A050B1FB13
48FA2B42D7066174EAB1DBC4E596DF160C302201FD5BDD795C28AE7E7BF8718D
62D25C36CF1193E7EC4AECBDF54748A9347BE07C396596BD51C8D9AA1D86FE38
772B08AD72AD1818FD79F2288AC9B6FFBFEE55C6266E7994711B15DC22DD1A87
B85850B6C8680EA31BF3DB5E3CC5931D9024F25D1F659B37AF9779BAD38C6044
9253B88EFCCD1F62EE2A0CB665BF47793EBBD0FF67650ECC027286664BB3211A
0A4FABC93861036E3616886819952D1B5CD2650F3990117CE4F145E821E9F995
7F05B85680CB46E60F8722E07C1182861D9C9EFB42A9A60CBED4CFB761EDC60C
8F48D5CF292A644D6927B982F4753113D2EE4F83E50AEF0D55BA0BFF0B1EB58B
B1BD643F314DF29C1EBA086A88A424FAD7FCC09ADBA626CA0EF10D94724D2BB3
65FAE954A2EC9C97912C59B679B7CE849DE45655F1358FF02209268128FD2457
F3F0A5C2336DCAA3A2F36DAFA3B1572CA254EFF95EB126409E4741F1DC58163F
E6C79E455300675B99E41434F501C6DD878C6503B5C95FDD48E5287F13DAD0CA
BC80CB0ED8E2CE5EBF79DADDC50BDFA5FF77474122297C1F6EE918B9507BC55A
DDB8CC31CD172209925958C484B5A86FF4D824C8F50DBC3B02CF89C3A82232A9
ACDF7A32AC89BAA5B96977E42FB82064A4F64B388600DD13C49E8A7E146BFBBF
0F3AF28460F2D078939C209CD97619C8A345A1F341B0B206B06DBDA2F3BB89A7
F2AFC2015177A5C6A65B7BBAE59AFE345C8408DDE2C76EF6B589125C2313A2E9
91831D64B5692BDDA1A9089BA497DDFF81454B4533044D3A979FDE8D3115B898
32A60E21D096EC74E9AC1CCC2376794EBEE29538D39AA0947D911342E5F80AB1
D4F208C71F2E6A9DA70201985A28F7C278F2E17CDC1868AC59E052602863BC58
E6B9FFB0E9A42D17FEBDF16DE0A8E0B6C7DF4C7897E7A26269285B316ECFC184
759667FD619B604AFA65D84B8190755ABE70392A7A70CE198FEDEBA6F2892982
2346EAB94F55918FCF1D6AB5779B4610DD2F7B4DD532A70AB5ED59FBBC20D1F6
379F80E1F5ECB8E6409B14EF11FFB5F817D468E667527AF4754FA56A2751D8FE
B15FC7638BB0889F72BF691776BC489823CF55920502D0BCD246DFDB7340AA1E
715BC21515758F63D80B79130E5959E5BF67D44AAD2CC9861944DF02723B3BB7
4592D3E5BC0F1538AFD7BE9571A349034F99B3046DF656E4FD1E06BBD6CE6CFD
763D8CDFEE899A0AB8F3F7ECBE9D7A5D57F8E15FDD7676C971AA60F41088AD6E
6208A110630095DA2B3E6EEFCFC05FD3E7E6593B5642C8C05D342006EFFB1DCD
3FCC179CDFF53AF3BF76B2E2D4AE26385ABF6CC88CE75280FA082054122C8453
DBD9ABDF81E15E776A7C9C509130C8164CB6D7F82EDB4E7F8CB5BEDCFDEEFE6F
8C28EB52B213A474DD2BEAAC50782F7C39A0C6E45E9B33695D80B90DC22FB5E6
1645744519DF5084D6C6680D99F66191D1E401D5113F4FE0D99A574FE233FCB2
C23BA3F7686797569D918E367462AAF6BCAF958FE948E4784FCB856890FE8B2D
BEA6FCCD3ECB10C338D076C748735794DF3D369A4298CEA65021287A0F49593B
495E405A5F264BAD3ABE8F5B7109279BDC019A67335A908C70EE3B1938865C9F
C79E660190490743B71A984ACC65908176685215F59E0FC3478751E5882F9ABE
FAAC8FAD933FC50750F5D9B36BF459D6EC62FED5B9EE512123D1CC16392AD22A
F77357F4F5AECD3FDBDF94119AC40F4D01F4A2103AFD0AA50946421563B55998
9DDC2D54EFC09FB94FEE23C686C05FED943DABBADA85300110363D6C92F4523E
06937C89291ABF49B732D2F86FBDA4A8736858CC6CFC115B9C2BF8303884D3EF
9B56E306568E272E1F6D8D0DFDCB21CFF79F0C139554D9A486E022C63AD61CDE
B4C05371453F408A9DB17406E4D712C4DE48AA773F4AB11B8B8F7E5D6655D80B
5EFDBB696FA34021E2B47DD0BF16886896D93EF27CA16752525EF4F991C3288E
E3C14872ADB833168347F3CD0F787D26DE342CA8CDFAF689B9C2C843411FED47
59A46A94154787A5ED6BB871B8245CC4DD0B17A03A19386284DCA75C5FCCEA06
7E549DE75F60AE2FDCE3EE4BA6EA7EFBE9F527CDBEF54AC6047F4F2FA06781BF
1D37042179A5F20EE2F085B06BFE3A4C7F813E0096668B199EA8C8C918ED2A07
96165F6E0205A37A7B4D075814A3285D91F08910C4705AC49B720745B2B01180
B0429B985A334A3BE48C28BE3F183F9F3D55108D1BC809D099BA85AF75FE9834
29D50FE5E577495A6B72D54A79BF915DD29435CCF51D54919063C81FCF1657C2
21AB180785D2C075F4258A1E536FD51E53E4CEFB352FD3F08AB08FE5D354EF4C
DAFC7196A5CEB4325058E51A8FBC706AC72F9C75D4CF1B15D3DBFF4BCE0E6550
FE3CFFAEF04D97E2D911193322396FF2CDBE488584147E8AFBC4943A3E8C76DF
108913014B4E00BB4BD11CBC99384AB99B6F858E1ACF3ACAEEB4A172A05F5DF3
B108CB19FEBD8D546F8AE746147056CCF200624AC52F6F0388E5DFD1B976BD61
9BFA205E64CCB6DFF05E01559FC22B552BCF7E18BF0E8E09019BE935D1D2B597
EBCFF04A28BE6A159FC57AA0E4873E2FAA30CBB445720CF83BEAF024AC9DE17A
5AE23BA13A591CE7CF73D6430FE9AB1200B3919B82DF793FC9F391E62F2D2257
1E7DF23449FB2DD03A580710B6921A87E59AF944338660C1C8F9D03BC10934B1
E28F689BB60F6603D69B049F6B1D6A20E6B7244F9927175A3A6F5C7C5E15C309
91D508DCC57EE26F8DEA1A73289F7AF3EB60F0F9A1D328B283C9B6637D3BE312
02FD5ED52EBD4B10AA8087DB958DE6307CD86CBC3B771FE861B061E3EE79068D
E0E843402CBFCB4A32B8312BD45D0947D30BCE7427B0B7BB303F0232CD058DB8
3ABF6919BEB663C05CCADD72210B12C923DDC878ABA326CD7E689A1DC7C2C3CF
8178FFE9BA5C613B637F19614B327FA72BD2463FE903D0687AD4A7FAAEA8A07D
B290A00BCBD2FAABF716A2036A144D60C2C28F7A69E045D46C073E4B9E94AF82
BB5CE9D9E5B595BDEEAC9A952D25E6604BC13F5E6EA1B8B825314FE352FDF250
F89E7943C612416DCA5B92D7C12B9E5704AB9C9B74E9C141DAFEEC8C5E257905
ABB7D378B5A2353ECDC52B88AB2B2949858CB0FD7606F52C2EF1B61E4317EBDB
454C5FA9BBB203D1260A7837DAB492DC2B7A9327B1015AA92E0D81FCC6D291E8
771545CEE37006E2F434EBFA31618B26863762386FE5BAA9EB46E8E42FCEDFFB
0CACA51FF60296DC203489D816659D01B24D67C5825B1055F074EF591E4CEC5D
B80E3455A019CE7F84C3159AE3BD25FCC8E5AFBCA9E7C1893E2D4847FA52E122
1C072B2B1CED0FCCAAD18F35157F900EFD524596D18E129463EB1F83D7959B66
1ADC5AC7044E8629076C9DB4149FEAB1B1753D8C1F46470635E808C8F9B61058
8DC0C0B59FD74934AB803A56B1E30BF550988C835CEBB385AA80B48DAC0477F5
FB1F2CDA2007561647BFA519F57AA785B339BF2C4B1382B2541C5028581AE777
1F751B3F3B88A3B8C5F3069B38FF8551BBC86733D91015946D1AB33C7F514997
3106FC735CEBB450D43EA7F2A041065295CEB06E6C64E56A38BFFE14AFBC3BAF
7DCD9E2694637C1D589B396E4A3D7F53DCF5E45D255C56521C266632AA405896
0D65B1653236EDAC07181C50C459FCF425AD2DFB1FDB1A107A6D0661C8B06EEA
EEEF74FF2649A103209F3E7EC0DD5943BCF1449A27F9233F232D9E62EDE59D82
022F3B86B9C0CB208661B67995D2B2B05FD16D250FAF527A4703C43AA1D844BD
24F62C1EB9AF0B264668312FE3F117A1805544712C8D9B92EC2C5FEC5DD1D439
1CC158094A876985A5226B0A62D2F5D4E3D6525CC8C57CD0D117866397B7DFC0
4CA5A231950FE741BC381A3532EB0E43D254FE64BE0E057D564F2D20E439FEA8
84E4FC301144B90E644F34604AF09FAB80D844D54B06F8DB1D9C9EBC0B60BDC5
B0A341AEB8C25CED899B32F36A65E9B8AC3BA07EF34595B64889C6EA2E9812A9
2E14C79DA70523BE3DFF397ED966F006B7084E7617CAA0784987DBBAE7C956F8
B279DB3BE3ADBD9F954A7A56F74224BA63E84A75885F1E49A6EF2DC1FCCF9B21
232868FC9430024ED6A1DCEF64580477E49BFD135B05A6241CF33CC67645956E
4AA8EB76F1B14737562732B5D6B69135B13096E16498AB5D5BDEF9F7D4F37A3B
26398A1DF66DE774D5371DE9AD9C0800D3984F36661E37B0F85928906A21F640
7301C8452ED3C402548CE6D2F27ABFD91F8B467E667A51EDE812C1B62703C23C
1CEEA5F916AD9A6E0AC097FBCA74FEA4F081C8DBC776061FA54301E5EF84A305
7D83FB03C37164676474C82BDD4E194AABD73AD2763102F3190995638ED13FB2
7DA9A9B55CFB489454D5DE07883FDBBFAF28166FAF3A1F50CB1938AD6AD5F4FC
43E38C045E074E743B8E84D8BBDFC138737B482C56C7303209C6518C1FBE8EB7
43983086028178A19BB3B0ADCBCF9372F53EA9C308A81131B4B8F79C2B23F4D8
2EB38DADB5B87D49E6C1C1058B18CB141E4F7EF91C3D6C61177929E8378BF2E6
E46D4C0860711208DBC84A98C0B8B4768FF6B52F3DD62C35ABE06A5BF6827889
C349FB65B1CF34EF1698995EC256ADBF8AC7B4D226FFE77B21B87F63D180AE2A
7514B8F6C56289AFFF1B8B944020B99B6A05E9263A1D518E8709C11504D8278B
0AEBB6FFEB0C3FF1FBF9365B89D2303F70B83CC9BB2D11EEB1D81A562EEC28FF
0C62A4403AEA2A64E82914C12DBFC251228720CB9F652773F3C221BEF61E6491
227D1B4BCDD3A79F64752D3C4329716CEEB76622D8E08FABB85E897BB1390F1F
967B288481595D8EB5B7F07CE9E342F3EDCC2F3ACD59263613546D6BEAB26D09
2E75E8B92EFCCDE5CC6F61EDE3925484E3FAE983880F7C82C91560A7DBD3ED9E
EF0E19495359BD8EE258D5BCF115C97C0A58B327C53572FDF9928C07F9B593BC
C9312B11258BB74BD59DE2723AE220BA6F80A872E306BFD8637A2F4EE27D4039
FCDD02BFED61808F9E5937EE67E0EC9DFD34B52CACD22BCF79623DF561AFA50B
F6AAD80016D9A5A5AEAEC1AE141ECA25A02A2772F2ED647D49786A129FFBF4A9
546D4BDE864C9CF1794B01E538A60CD050DCC3FC273E3FFA23A6A1C2CADBCE74
C91D2E93B6D4ACDFA19044CC6267663B72616201D20A498F0553C2D57037B71D
52C72C415738539ADE0C32C73250EB043D576AC7C39E9CD7273CD69EF0D348B9
1EE76EB24CF7C877B61B4F866E011B55C2960816463E6126962B710EB0A26C72
07C4AFCE8844E6915832B017EF1B83F764C4E31312A4719ED7CF3100A197B5E5
EDC3FFE912F05518301908E0E7403C71593FCA5CD48B6C3D5114B6FED91799DC
05DEE115F9BB1905EA631E9E858EC97B3EB2FF024BFDF54905BDE31BB67C448F
DC8E538E729E10CAE861D5BA567C92BD2961582A9703D705F9F47577E36ECE85
9BBC517D1AF2DCA39DF9DE06799BE550771540ACC8F177E52979BEDFD7ADA33A
5E0D0E28352A8355F0B4310F7DA9220ACCFD21ACAEEDB414C741759F68C2693A
CE33F9E95073CC8533040C27B2ECCF63B001482F416105B601606C3BC2572082
A4831EFAB4100E6CA301BB334EECDB73418888E4F57AC1D5DBC2DE163AAE40B6
1CA70BEBF8336958CBA5697E8295E348E53CC40E59A16940BA9DBE98E3358852
F7F1599A0296DF018DBC8E07AA171ADCBEA68202529F4EE71BAE658AA9D36222
B20E639A63512A0B0CDE05F9F164FEA2038A2BE323EB499758AD4E6AD43A6180
0842D50DEA77681A50831B9ECBEA46E33DAC88CBB3AD001C0ED886053F0AC377
CBC80675ACB1344273943950C68E2A36E0D03196B24BC181AC98B15C46C51163
15C38CDA42CDC4A1FCDB82E94B757D6C8CE043315B669A6546E2535819098643
3811E327110B5CCE3B3D1374A2D449CA11A0153766797F7FFA5042051D71D68C
35858D62AEAE6CD009D5961E4AD3EF0235E14156EBB268E8441A19BDDFFB60A1
09174E34EC46018ED93683AABE888735FE8A685532074B9B814367B6A9332F2C
8FB3561C562F4C211504C5CD22C142CFCBEAF5E7198C8B58583AA128C8A058D5
CCBCCB4F8C13C36E5760141507241317B042E4CC9745BCF79C252EF38D39342F
C026B847434F0027F788306BBD7870152154C1057E9271ADF7EF630F5E6B3379
B660F00CAEC2FF1DF5420240E6B57E4B1FFF1C628D4FDBB98CF2A5C62BDA6830
DB59BA68224AAA55BE1C3CCD3CF405527456F0A5791832D0DDF7A97BFF645061
5D2C6A9F8CFB4ED8BAC1A57C31C67E4463573E0DD113B5E19516BF03644278C3
8106923A778DCF9FEF3B856F17751064391F9AF9A81A86A7BE2D1536D38481F5
9C9B3C8956CDFBB9BF28DDD33FC7A4E5818A1E3A77F549153EA92C49C75C5966
E4DD3B35BF998937156B31CE10D046A80D940C63D2D11708FB2B369C22127AFD
F46C6F1D5A3E5E894DA126CC284276359B03BC7D0F253DA58195487428D9A61B
97E33852D6C8A2390717FC25E533767B225AA24AB7DD2B01532790BDC038641F
919A408C8B91E3AFB510A6B235274DF08C094A64D66963AD149F0A92348F7160
371C9CC3D8F4992F79C03A3EB34AB568D1D29099F4E23726BDFE7E430F2BAB8C
2C88444C0431BB8E7D97C58153FBB12A4C61B1D728E4EE1EBAC9BBCBC1836CF7
76A4FA886F86ED53CD107078D2FCED50740CA9400EC93AD3C2990653F1F801F6
EEBA745FA4B5BC24693B7993190DD91E1DE9FE760A0D763005782901E23E9C38
47BDCD387C2B36D37521B60AEF3D19A90307A18B02FAD4E5E2DA3322F3DF5C12
531FA7E222E3819F7F23BFD2908EB8AF27695A3E936A7EA652BD93D247C51DF2
CA48C85634FFFD404418CFD583EE5302AF74D5082658D35A251EA0E02CA6083F
796EBC71B026C64FB1012DB9ADA5B040B9F2F4F55E6DD71CB6DEF897632EC706
0EF9289745F3861A6F5F3208C6411EF301958F327C4423C81FAF7F25F4138C1C
E2F8FDD465BB2D734AD5794A706B4C3D61379D1A32875A8550B4C56AA73BAFBB
924D3FF3DB17FCA24413F7BE643754A31FD4C2EBA1DA34FD55F89ADC6C039453
0A04C24B9B7ED1939D6C0F51B373ABFF777AA61AAACD75564793F510A05C1906
B20D5AFC0D3F8341B5AA84F6E8D57AE25EDA1D542337C17E5FBAFAE290225870
DC39C693DF70C0E752B1D25F9C2CC13FF6BC3DF9E453248277E1C264592AB0B4
547F214CF53AFE45E57BD5CE0C7AFB5E6FC91A4D43D27B37D1E66F0ED45EA5DF
519560FC9E088DD4D8067DDADED17C6B31E6DA79E204FD1978E75741BCE51A82
1ED5E8B577F447F3DE88330BEB122EB391FC5842939E09786294EC812077FE12
F1992746AA9489575D226AF2F3D6A9C5B3CAA21F4436095E3F77C5DF9E4ADEA8
5D9F8CF7FE01B5D9E5EAA5EE1E1A681E7543268A963460B2E07A9DED40A4F2A1
62E83F08B8E0569560F0B25F0770B49C29A3762EF5E037F530DC06904F095BFA
AE99E7FB8F2D2FC8DC21F2CE2AE1DE89699E50C424C37BE677612AB8403EF244
1DAC48B21A7871D17242BFD8CA65266D8AB35FD039BF998A5C32
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 68 /D put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08EAFF9731E745F2BA8ED0C0E
1ADF7821CFCD4E38F3F4C243CAD31D9F8FC68B9043740852B4CCBDD37BF728E5
648215961FA82A0C847ADCC5187331D0863A4573BE520C02CAE14AED4F06B3F1
FB4A318AB54CD86DEC824707B29F858FD726A167F2333855C0575EAF4EBEA0B6
754B1775F967140641FC06F82B191244186FF347A351FBD8FA62E8C978B21F6A
E124929876488AFA97FAD1A68A0C3496BCA768F4AF8016D7A65BBA3AAFD7F5FE
E75FE714FFF3D54D09C9747ACA01CEFD260985C6E87477C9C7843343C7E9E3F4
0537D461EF019E046DB8B5BA258462B2FAEA1826B3410BA3333480CFE0DECE61
CE2731FDDF7FCF2AEF7CC2B1EE7095F480B3B27932ADC486BD9CC130D94BBD05
43872FEBA04FB8866ABCB4D379696E73B84BBE98FBC4A16CFF22F8A7AF754624
2912C228030FF7EF23D51DD61BEB5171AD31E2B630475E16B6E0F3C78D44AC30
712D165DB15114E6D39C211A023BEA9A70AFE572970C2005CF99E4AB97E2DC94
F716E605799F380046A2ABC82AE992ED1F7BFAF18C07F1F3FBC49ECB068B9675
27DDBD63E68FBD51479CD947A89C2205D200080E1C4162A63F4B2A35B7AE6297
96A115FD9FEF3D177FAAE2546C9047B4B917BEBA2523A595FD7684299936B035
2DCB2CE6B33E44D451647F6961F0346E2A13F685AA543F5D6DBA7D718622EE54
C769C15237FEAF78D5D2D9903905D8EBFCD362904DD549286773B19F3357B53A
F1E35EA47A3DBC26E278C1A031E2C164A7E9F67185CBF9216D37DF8ECA6D9D5E
2B5EF83F27CFCB8FB9597022D343D37CC4F369ADA91720411C4B61F3B38ACFA4
47F0C9C2757DC1B49520EACE0B339EB78EEDE2D0E8F71FD8AAA763253B88AE7F
AE35ED9BBA6A2F4D563388C0F4881919FAAC751A209BDAA6D37717A7644928DB
2B044CC57AC1407BBC80E8A6EC6DBCB69AC20423E34CC5B880359E6CEEB26113
7EB7F0AE584A14C0CAF41DCA3649FBCC454EA805661A327C9BDF6CAC24623CA3
5AC499D3FD595C4FA826B411B0066B0961EBAAFA22DEA8A323177B3169DE68FF
F58E30948FAB631F80D0EC1394A95E1701213556BE440C83C69BD8D9D5E63C48
8DBA9800C84AC770548E0C770388BB167DF1307A9B916ADC7D5F57FFFDF67517
C4A7672551C9F7AAAE88F3081AC8031C10C903F7483407DC1F34D4346422BB5B
6CE485B8273C85D040C89E5E08467180403026EB05293B79B9913BC18753B89A
7D6BE99C90B013DE52510E4D23A0F8C9E33443BEBD3893972B7574C7FF26FB84
9B60AAF82BB1CD368F65668AA7AE9D5C97F342E6A3FDD839105881BC6E96AB0A
B49470209F557431B8C1CFEA5FE4C0CF761E92A2760BFB7E7903504C8C1525B6
9E4B1B3BBEE18B4D0D52928F89F657E6F2189D5F63E7C9A0A5412EB271658DD0
EBCFA02129ED1E8F8E34BF353A295391AA6DCFD372ECD94CF26456B1EFBBB89D
2A926FEBC40A4CCA27B99A75FAFB525A1BC23ED6C3CA1A8D1A26538F6F217D39
6D61D2F26293BAD58D84315DB76A7C8F41A6F3B69313EE5650391CCB302A273F
728B6707E4CCF8E0F57063FF8A2173F5362D638E6FB58E92D669904553B2525F
2B1C921D95294FB70A6466E509E420AFC6FD6760CD4492F5A4CBCE81449CF9C4
F253C264CA95BFB793C997EAE1A8295944B3BFBF76D1BA60D1AB0FC8B2B46A87
2E0C6898A861797E86542E15D91E50CA70893EC30BB6B98E6331BF3FF0D42FD3
79128AB775DF1A046251F9CFE4CDC9719E5039BBFBB732571B943210E9D8C52A
89EB80E7DC089839240AE24F87B5D86504CD6ED32121A510ED23C00E881D6CF2
E23529698CD7A2B6C2CC9A00929137F8EEB6410EC4CA707EF9A1A8AB2A19F250
60B0B78523A9CCC745186E1611F18EED37D391180303B0987552B9A2358B4215
7E495F2948812D885E74DCDFD5321ADD3846BD1524FB1EDADECB1C7B70BBD4F7
C12EEC92B1EA7A92D959B654BD5F610B31C50080C5F056CBA13F0555AE7228D1
B08F4D75221DF6173E06E13BDB2C8D589480D487ABCB3F14166B475AEC46A4E7
754D3BB97089728B68A7716F87E9B18AD7BCF22C5ED8AC95CA38900B8EC9A122
CDDEEF6D23482CE60CF438703615EE81768D45C92C10241621199C9558EA6B8E
53B1BAFF3C3BEEBC353006C3CB801B1DB08AA67D42A793281B3091904566A521
7E6EB25048EA63B17C5D4494ED33CAAEEAD8D9BB561E9CA08F1701A01A2AC335
EFA21FB7CF53186E33F7F4D7A269F9B3891E13609F540E101B7A12535236B321
AD49246CFFE108CE3C4CD80FC8A7FC2C0C4380B72E72F8B964C396C41810382B
88782966A19DD7F25B9BE992EA31350986D69EDDB48448A6C28323ABE13D540B
B3BBE41BCE0336F9C783D2A6B5F44A575E843EF3E24147FE5E11D3E524685CB1
AC3968ACC910DCB7CEC43F91F0B3458129BFB9775CB9B06323791967B71F01C4
B6E7CA7515A0F23D18B3663E3201165584A09B124B21244F1B4FB2E1B31E4448
7C6B0BFCC33C02462BB9C4AC4D7F5DB5EBBDE9AC2F0DE879FC14C638088C0F3D
BC7A30425549C98368181810F6DF446205E031B0860FB0571FBE20A6EFD9ACE8
C8361D62FA922FB1EAE509E6AA8996662B68821057C7D2DBACE9411F7B120C63
338365199BC4E5BF19ABAF42C5460F7E1C0F9C33ED6BB8C8F3126901B99895A7
345F8E9C37016D316B93B518A7F05E048787C0B1675AB38102A0A58A0020D279
F242E74A891B0964FD7DE1B8EBC63E2112CFE9E4185C439D27653006874B7FCD
227C3DB0BE0A5A2BF885EA302AF525871BAE0380FCA0C8AECF113BA06DA817E7
B7F1B540F6F224D78D7F22FB7369F0C9E8F683F6C7705758D698593915DA2346
410F34182FC643B5938F85AC9690A23335796DFFEC6443C5063980104F71522F
6AA70235A653558B0B4D6C36C277F8431EF726414A3B2E2F5B32AB099180AA62
74F07980E3035DB8AC5F3300F388F405D9FDE227031D5560C77E8DFE3EEFA96E
8A1ED4FBFB47E082D8E1E9725BB9EDF40D011FAA2E50DAEC5A1AE3FFE1A1CD66
A80429A562E5759455B4C23995F1D50574CA79FF7331C870B29A85E4A1329805
CDCC3832E259106283310B7785F541C985895192EFFD24E20F9C16766B591FF4
56A485C5789D722E5AAB425024F387CBAC5D8D8FC6C22685C548B13A7D137353
3E1B47BFDF588DF93B6925AA06C24F32CD2602970504AAC271C463E09CB25C8A
D5AFCC4630C3BD63D9FF22C55CB3325CDE8A05BDEBFD25B31F3DD4F1C610521A
97C05E10C5B551970C2DE8CDB51AE62DC9637C73B051BB9898B3E81A4DBCB5D2
E068D317603F9DCDD6A0FF9325C0B9B215E485A06AEC9032DB8C4DF6DC008FB0
5CAD4A0DADD40FF33FBBDB12DFECC33451DDC4CA8F24FC99861BDCA747CAF6D0
57D8354239ADDD4699A389204F084DB59EA7469C9681A71BF5B6E3731F46AE67
DD2455E05C3734CA3011D2A713A45638C576306D7DA2709801124F419B7AA781
BD22B7A14D92E793734BC00B0E1869A301FE7FBDD1197697E9D3AA87DC00AD27
90CBC408B178DED8D869D4BCB9EBEFFE27E9E76BD65E3575CB637E1FF938AC1A
3733925D4CA078E5BBD9FE1FE2372421F6E9E4EB330C282C21BE4A8B0D81FE03
6D9575282EE10EB3571EB2FF15143805F7D763E839C832FBF8ED6EEC284575ED
1A7C426D6500862A1C24F229DD5F2C9A072D4CD28923940BE2A72FD3DE77F013
A554703283D8A6CC3402ADB4AAC8EA201C7CFD86255E49DD65FE6C78F2B94F12
9BF87B9B76BF3970EAF03D023556C774F617E170F7A46B03EDE007A67FCB9F0E
F7BCABEF9A8EDA90B0E0C32DB0BEEEF22DC4F08AA00B7E8DB1335FA06F38B418
D92D05CC8DEEF66481F5C8A1A10DC13688DF19B83CCA083AE4DB22733F03D65C
E2F76BB83B66646D19CE60D38E5C447937A8D1308BFE5AC9A5337FD63326B5B9
F0B08CEF36D992984746B635BBED8ABA596C5A16FD76C6C4116482CA5D22E7AF
F98E97E78E3822A1B53C2AFD10D329186D7BD6EC652B0587477F2173F245A02C
3DDB723FE310CB52EF1A207A37D6023C175C6045AA9667680914C828BA559C90
0753F2FD1557469C6EC3C78B401BC4E14009BC90D7CABC6F5365381EC8B45956
E62E5D6198667E2A0AE044F1E4B098D8616B2AF47D57323390ECE8E01E7EC941
369EA19CD48D5B92D4AB7C2467EBCF15CA68D755C3B0E5943B7E4091B3EE42AD
822A6E837B05D44771B1F7599CC7AF31AA2869EE01AEFF99FF6104E10BD96E4A
4AD63B7C88B4ED05C6EFDDC906E659C2D53B963F84769658E9800B7880429159
F84FC715D8D32706A6F781E6562C443281A68AEAF111D66D35D1359341971E61
B0FB3352124BA1C064BD6AC03F6BC86D88F7887416EC7B4AB2095A56F6D7BC84
8E8BC604AB8C4C7335A767601A1D5B1AE8A7C037901E1E80AD76648CC2CB0A83
9A2ECD081863258923785BAAB74199A13C7E1CBA032C3EFB399326463E3B9703
2BE3DF1F3F43120EDA1222C8C846F7B91DBCCB125F71360D85623A2E4CDF4683
76283006A3D83D2616B60F313B9151AEB55D4CBB2AA8C46E437566FFF969A7F9
DEF10D2DF27253F56075CFB68CAC730473A3368FF0CCF1AF79746A64B7C74A85
40BF515BB23ECFAE668D8AA48D47019DFE0986B3CEAA40E8F45305410519BB10
1F5CFB7CEFCE0C681ABE21301E148AED46D952E742DF1D80982CEB56C89C45D1
A38F276A28D30BBE11C85A5F03091ED7F31B0B73BAA5C102AC0F4319CCAB3890
75A11B90DFBADEF1B27D79A0F0D35139198B062B1E57FC897F0D8E0E12482AD8
4AFFA4C0845BE66FFB478EDCE37DD417967CDAB132AAF9D69B9D554296E462AD
761FE2B8F18CC386797D2A205C13ED793E9BECB0E960AF9330A33A7DC7421F5F
6730413DF13ABE28E5223BF5487DD7EA7E1B38E3F693AB9FE8FE3EF5A1D0C2C5
CE1545C208E8CE5230DB9902BAB63841B1D207779557F98CBF64190115B1110B
5C74657E83B701CE95B0A5D558A54B4654AC0FE906BC69039685078881E6E68A
5E0C8697022A5BB47B155D96F85444FAE7411DE57980D399036B47578EB9D1D8
FA0872E79FF9D56CCC78E11E1B79D8F1805497804436E1E277F8880533C9819C
DB1235DCE3412CEDE9A314C17D7BB7A7D7710505A56347B23F958264277009A6
5D65383E62707BA1B65D028B9F3B3EA9925E50B3C3C2C0D01624042FB6600320
C37C974DFEC6A24286FDDE43F7DD6D235231B9F26F3435362DD0F0C4CC9A0F06
5BE54BD02DB3BDFD51DF452716E523FEF6B7950098A311AB1CC9AE46A993E89B
F232217024F8EBB899F94019B6BC1A0A330CA8EC543800A6BA770E6C0D49AB64
7A0CCE54CEB236507096849D57D5D9A720EBCAF02027419110CC045A3C26F6CA
E0092D12994041A6D96BF4AE0594DADFC3A05773E823921031DEEE304ED56D94
EE5537FD244D526F50AFFC072B107BA5BC95A7885B8A3CCFCF36EB3003A4CC72
005849E85FD755D6B72A46204C7FA0242CF47FEE98287C9694D26A610DE19C49
D2C8B7B51DE5DDFDE2E2C545FF7F16D2DFA59B535DF3BFD37824F724A370B209
893701124DC9D8959A1345639CC651D7C4F761F4EFA925135D585F57E9D35C7B
27D7893CFF1E01B8C49CD62DD364AF300E99542B08A325DFC33E20605233E53B
726806F4ED1F3E2C9D6F3098E85E9958A54F076F1F22CE289C5CD28824E2AB3F
22F41569231BBCDC0F47884EE2FAD1AEFBD4AF68CCD5225F9794D2FC020F2D70
321E28C86F85D766CF387E718453C245EC0E8AE0C758912A7E8B583ABBAAACA7
FF061015EADB5B1A00AF2F54DB5F4A9C227950CE02FE532EE99858FF277347B8
1D59C6D32B99B653305977C50026E210E664
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/UniqueID 5000792 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 69 /E put
dup 72 /H put
dup 73 /I put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5D239CDECAAD9AE5D95377E0D3F61C2AB7EC99ED28D2B4A7B6004A566B43CECF
7E35419EBC2A47CC76393F4778DA801EA75B4C1FC38062AA77CC4EF0E6CB0C81
9A797C01F89BB58A957D3DAE33E4256B1F5A7D66C8989C512DA066D6DC771548
F2DA3B490834E7B4CECD9293A5DD581A3171DB1C41F348377A602A2DDB80C0CD
7B960942967BF3983FCE91203F8C465362CA8E91B3C759943797C24CC83176CE
2D044CC07FCD6CF9DD7FCE413A0B2CF777529685866C7855509CD57489F07108
D995887AEA9D20B3CDA77BCA95B6F655020E2964AD82AD77382DFF4903C680FB
2C666FA0A35C4C85E87189C909F4B6A0C788077270ED2C2B0D838488F9DAC159
7864727A4F21FDF43764C2E9B8BA9A8416FCC45247C82FE6FAEBCE13C1E3A49E
269A4690D0AE927362CA09840E5D802CFE2BD403D853D4FF9DB92D17AF722C95
271E384878E4B6991DB3A90422F7D0D4A260E131BAD83120E618BBA0C7F201C3
E6822BF981212D1462A8E8C28005291E4D768BAC7378E124713CA18F365A18DF
7FC981026EA47CEE8FFB0EFA469E23050DFF752ED042F0A9F8DD7CBEBE018E1F
056476FC098BE6A639F16CF415B773153D9615BED1251E4EE61363C0F51AD30F
D0099419E94B1EAAB833E4E31084024D0E7C946E83F574F370790FF713D5F12B
0141EE5B103939B88B538AE06C27913E3DF27AA7E80B7526477D1599418F0045
93AE8B2E602E3554C8A3F6A47981484908FF78EC89C3C66DFB0A5A8FBA5FE616
E33EA274FA0A58C665A151F5F7DE8C3DF437CB7FD3B929509200388A82DB4B4A
E40B4ED1D5CC3DAD6839B597386E0542004714C2E8492E53B25E24A4A251F031
525DB47524BBB52D5F3EAD1B7FF3098FEAE629DED7BCFD9401227C73152358F7
BC6DCD974481DB9C53E3F9786E47398891C39E1C266417C8A24A4EEE010E977C
6C61D3B4B6B0FD6A77AABA48CD601358BFC654F3C7516FBE690A67846FF57544
975C6E920D8B6D8BDBF6AC28247095C8D28EA29CB5C4CDF80751B44AF0E7F15E
7FCC61BEBFDA248B4A89617A048FBB9B8B867BEF92E7BC51B7F501AB538574CD
F0486511EB599F63C59DF46C947B47892B9606E8E074B674A1021D2195542789
5820D7249DDAD8EE7BA99B94B170F45831C45A760A2979BBD6460F39B3EC2970
36B075957C7642080A212CFC68C6C61B7606A35E8A8F61CB6CEB0953DC37D845
5A74FB66EDCF854174D74BE951040307207AC573291E6E54231ACAFDD4A26A62
D71FAF1F5B51D0F9BE48667C5BA6CB0EA5031B10CE97CA2774F2773620339931
6C3079B29055B18C05B9CC8B9AC0E9B05E454B88DE0DF32DFEC7FDB24FFD726E
AAE38F3591D78FD99C5784B2B74734A9F2B4D245A577B3E1057000C4390FBABE
1EB7F65A47E8774D135B3B1530C30E1288EB5D9D11D7D9BB39FDA703CB498C4B
87E6795001F0A64B37B8EDAD4DDF40C38788EB5E29E5CCC0ECD9151B81946530
24BA7039235A821309C830953871E2976FE83802D4CCD929CD59C5C69698C0C0
C9683827217FA5EAF36AB840C32956C54F93908B1191A78401D7453549879D95
76DC14BE598AA09E444D0FF79782B5B441ACC65DA683CEF29336E2CD3069E821
015301C98AD70D941C2768D80733E4D643368FB67C8B564FA1436A550457205C
95B68BE31E790252D322C8F7FD2D7D2ED6170C59F28F079C2364AEC8F08CCD04
63B65ED0F36B9D30ECB1BC5AAFC6A853C403EC4BCD0B752F036C3DDF6E41B298
470C0F9A237D4099D49B3C1846FF96CC64B3948F7D072CEE580FA9A7C1C37892
553974300A5352F2981A31A1038EEB23C7AFC9EB6A69095579D22020F251DB7C
1530F0DD5C2C96E4DC37D2F3CDFDFD012AF00EF8A7E879A7C6C2EA35A3CFAEDC
DDC84FAF5AB8C0163AE4779A0A0D317C1ECA69F1D9A4D1598596C6DA260D9DE4
2FB250690B927A0333D5807FA321FE91201FC6A87924944D294D0EA1CA35C66B
4946BAE79FF45F2D070A7FF5C5DA3105D9CC89DBC9B5FD68EC4C3D9D55E083EC
5413E6B0269C3D760AEA2A79D024B2E20CF39DDC68D89F32A2ECD425701EC88E
6252EE0010BC0D07FBAE852C0E40A458EBDB326C4323F499565020467A2F2E30
5D6C518ACCC03391BC7F78928EF8D8528C2DCB270E7181A9A4EB01284BDA7A3A
0E0ADE86E9456424AFC8ED8094BE2CD0F01F5E6AFFAC00BD24FEFC0C19947A45
ECC6B9F49F2D74A60AB7B789DAAEE741EB538E3AC7E38B333C7B2DB4331E9925
F23F0DBDCBF65F4E93718EAEFF6D01D6A0F917F3760EDAFD45C01D28509E9D70
AA5F53D991C32020A8283378A52C529ACF873BE9A2BCBEB55AA23A641C49948F
BA78BD49C1A4CE1C797A817B3F07D76950CE49DCB02578016802A450EA6CA1F7
A862E9E0C4DF33D5591E822FC9CB746EC84D210056B16D2B7C24D8FBE378CA1A
79B65CEAEE087EFF0A53B3D078440E1551FE382D1B3CB63B0749EF975C4EAFEC
90D0AE1BB28BB274BA8D2FBC8316AFCD3EA25F5DC372BE1E62B2F23759F4F6C8
73CE2D38FBCA83A67483D9F2B85A9589962F218196D7C46DF6CBADDF9045BCBB
70A7F9FB486F83B2A4A3000D921BE668CC36075F49FF5B30CBF865C4D7A0F596
143AE0045A3C5174A04CD30FF2D90191060303C7DA2824C168DE7D90E93C8B86
B13EBAB663C6FFBEF6599A1484DC791898BDE6C233A23A058EF8C15317738826
E365EA2E9610C1ED6A9848CBBD8AB6E4D7478478DD8B2580B2ECC71D9DE135B5
65AA75BFDF8B703F5261448E1A05EAACF245F5C55DBDBB07EF2D61F0E55E5FC3
329B2241FC636C9CC2CDD29766998B9ACA1598E28A5A25A908C7B5DE057E61F1
67AC7259B737F0529F6A5EA5EF2F7CDCDB22E4790CF4513FB161FDCEDE6E6529
659155B286592347D790AC036EE7BBFD0194C6486A7C0AF22A6B373EDD3F848F
A1A3EAE6CAC5143FDB3D9E606C0FF05F494B2BC217ECCE42E87AD54E33260E47
D1F16CDE321A5A3E294E20F67873DB0D3A6929C870F01C9DE360606A0E922112
5808D8A80B22022CCD14CC87020960AFF60259DF0F5F64889DF510CDE4EE30D4
3F4C4C8170C388117B76974F091A17EC8F861A4192A2B0FF807E63D9D374A1C5
5BDA19064432BA4427B53002B24FE0E7A75509FD9336695CBE440A2D01589A68
8FD7529D3CF88937873DC9E120D39D5C1ACF5652952ABEA7224D04723F2EE1C7
14AB6A7EBFF9048892DB0989F85881E3AAAFCD5BEF2544CAC61BFBC2D6B90FC7
41543D40D14C159C6450C7DA5ACDFDA5CC532C84C560C44CA0075B1B6DC68C4E
91EC7F2C5EC8BF7B285ECA6A42399D3D7A902D88257E3ABB5846A6AA96F3AD74
2BD1250B8CD5BB65171F3AF1A454CD03EDB5EA20D39E159DD7A2FE925F56CF58
9919D30713CFA3CB80E86B63C57E3878B08B39CD0D9019F5A4111988A6E72F10
9EFD57DCAFCCB4F88D8CE81F9D4719D65B35B94FE2C0430CB999D794C461EF26
C311ED4B9EB580519AEA0A0A6291F8D175B335B7CA35818ED47A861F49ADDBAE
E353EA41C4848A08CABF0E15ECB358C98121F653CEA1323A13CDC5DF4981DC0A
45B3AC7C87FE8CF9C490CA0DA66F3E3FF58AB0933BF8DB01409BAC2B175BE728
1615137A8FAB6A480204910A02623A422AF06FACDA1F651CA9C47BA50B8F80E7
5C29BFBFF645406A056FD38F3FCAC4F02ACBCC98B1BD494A33BADDF74E22D189
2EF071A8FCEE62ACAF0AE85E21C10544C7266C933569894BA5EAA4A9909E572A
C768FCC640690C257DC63D571EA414C157784F85F8DB39047A5D849EBFF930A5
7C8AAC8E9A93FDED95470FC8ABFD342B69A572682CA37C471E9F9F431D3A6A11
280101AD35E421375DC5A223E828FB3AC56F8FEAEB00C29458E606FFF8CA9226
025F5B85AF0AACA5DEB8059636529E1D28795265DCB1AF66110052A9DE942AA1
2367048FDB3E1C11BB6287FC1EBEE1DBA681B2B5B71D569A81EBBFD3C983A3F9
9BDAC25F522284B72490D1FEAC0814ED6CA5459D31211670F404610FB8B6CDE5
D7CBEDD8B5CD37448968C0D631654395CD282C007A0C316DBA90A5C43F711A21
3C2723A2BB7C22AC6D29C91EBC0232E102F58CC28514CFAE956B07F72648A87D
AB2DB28FD1AB8AD9520B2ABF7D7CAE4AC9EBB689B896C7F5C3DE443246CF0554
EACA7CC26EB0FE8E9F635914D38D0A795687EA4BD6C729E940B05B950FACE314
25F3A1BB489D47A8B83B65FC10320AD680F1C83F051864F8049B40F1B9C62505
D4EEBA28797A6217AEC3EA035D2F7AC47250ED74263BBF697D8C5E312498D725
3897010A4280735BB22DB0CB15B228B69FBCB0E5DD41D16EA9374181EB4C7AAC
D609FDD5119708B0F7B62647EF88AB1D4B7CD6FF1E0DA3182BAC8888B67041F8
EB39EF71A0EAB65A76FBFCE004C56E1225D704C7784CE38C2B83F0687CD6E5B4
95BEC5F6A27B487744D614831F51E4A17D653379FB7A3D039517912811E2016D
7DC480E390DE60FDABEA0B78894B906D610E590CDDBA4BFB753864ACECEB0CEA
E452624052EA3AEC3FE93D8D9EEFD7C5E3D34B452BE9107C5E678C1EC444AA9A
61DED2E1DE621E5F040A0FC80D596504D11308E292FB97A8E75BAA637035D41E
DE1561C6C4D3B24AB86E84E1E99EB24D3945AF398119BD68F791C5DFEA249FC9
EE3194187E3A61EFD7769224635C56A8753938A33272F5AAB00A0002EA0CE10E
AE4C772E2B113B960FF621F0281270DD81243DCB27DB62371082B6505231DF56
B80C0EBC48267E73AC7EBF759F34C285E4EBEC75C020514E0BF701EBCA94560C
7A2CA8F5806C44A0FED2513C33D6DDD769EF9169F3AEE32564CA58C64DAAE5BE
A75F02BD421E10E14C0069ABADDE79F56C76AE7053D6205CF6F8997D8BB9AEFF
37B92CE6C953A9A72B16702A627C836C679F1523F64486F3769832ABDE5BFEB6
B93B5ADA6757B5A80BA4FA13D43DA03AB2DBD9AC27D25CC295D1A4EE90BCEA08
F6BC3431B974B47A6066CE0280AFB6CBD33524EAC0085BA28A5DF0F9D28CB7AD
923B08D0DCF43B18C72EE1104A38627106DD517A62292DBF4F39EEC15219C232
8DBE38E2FC534C4CF67A5569CB967DF4EFF9DA9D465274E80AEFEA6F02A22AC9
1AA64DFE09F51A887360AD16288E15419A3E6D19A0AF87922A0B9F482C732737
82BDE1C41AAA0AEFC6A82E81C121A641E70FD54ED359D56D56325AB8ADBC27A2
4A4E84437FD418EDCF97A96B5BFFF317FC6D8BC349240D177FCAED550F1337EE
0A9DBD2EE7181C9427A507000ED76801808F2E9303AA772F4AA79F91E2AEA452
AAB51A8187F53F1BB34C754AB87FA23461BCF21B7CECE2F6489C6A46D4810CC3
00E76B2DD830FEF6897882A1E78F573DA557C02B079946F226E4D09B101C85ED
5149593B66178D87BD5438A91F1858D9E59735812EA1703D744FC8768CA25AA4
859FAA06F49722B4C0EFFB1B5B1E3231056FFC12B9E9693BE0C54F901213F1E1
6A0E270F5F505AE7A2FA734ACE05BD8E351A021958B93E71E98AD6AC656942DA
5ED66A45A405A408578CE8D67DB8B132DE515EA3DA88A031F999D39BCC7A14CE
4C0FF8E0426E97524692FB4C36EC6641C7393ADEE2994178189E942A9B49C332
77BC0FE8C8724DE55C8BAD7046CE2EF1EB676F4250C910A8FFF0F15467F09F43
77395A264A619EBEA1178D669AF63FDF0A5282CFDEBC70B682FE323635849D1A
83B4549C75B1DE900E0D4D173B8EEAA8B2E0DA7DDDC9712257C6BD60AA55CF44
75D46245EA26522CC46A19E69DA29F326FCE0D6937AC596957636F6C8D907781
868A2115BAC21107E8084B3EAABB5E644678D51A4BCF45984C381E68C83F4F33
0F676842D0DA6739487FAF4B81EE8DA0F100E7489277325E9055328055D8CC6E
BB57AC3BDF16B1C90CC27A42B344F4AAC2BEBECCD734FE51270AB327AB3A7A1C
55F1D6B55EEAA373CA9B6916C768D87F7ED5F30B0679BB525C7C897600D4B3F6
C9451E14281069DEFC9D63AB786A9D967311F557C3113C0900E06DF75DAAA830
95F3930BF3614DECFAD734DBA4799FB8E9AA54E3A71849E5E3A2777214D73965
B87D4F369ECED49DF9AB044162191F70D397D8181B6368E3A918723A9640FB2B
BD755ECF0C61238F3D4C668BA2E9A7AF13A66A3E5346345AC4122EE43053B224
836123452FB2B8A67159C0B2A7915FC9BB8988515B6DA795C3955D54723686A3
25BAB6C06F3B721F56E08E2B0B72BD3242785EB07AF3D2F9C70151BE02373CE4
ED4547B46A331CA63FA4CA98C87308425375AB1CF35EEA5E2C48359859FB6E73
C19D41F097874AEAEAD93AD6CA16E269B6EFE8D7A4602B897C1AD9E6A375D7B8
750B0BD9979F381A0791C6186420340BA80481BECF439DAAD0A0B613DF87CF06
FB910312C582F20A2BD164633C5BDBF0F51BAA2ED87CCF81EC74C7F929835E63
087AD0D92F32EA087CA18F7E0DD1CD9D7E6ABA9DEAE192620B276AAD12AFC351
B767F71D0EF5F4685A410966895B43227F80ADDBA0D83DD0EEBEF5E6B5998009
4EF135542495A77A63BBE1374422618F4576A2F000B9269467DA0FE0A25C3ADC
23C35AE78E792433DB9312DD60C542CFA3E6470577FA374242E0CEFDDB56F672
00345A9D69BF861FDBDEA140FA4A400A7141F2B428DF92B3942A9DD575725B04
407758882D48C7BFDCB699714CCB921A0A283135D5FAB6D421ECAB26493F7AD9
3F4D62A5662EBFE5096C370123066606DA4AE64C39B86C2F0FE36EB243C23A65
E263CAA3DA6AF9087B871DB0515429EE3368731412877456DD4F2C1AC1827871
033230DAA881595316CB02624FB8C5761A5F13DBBD51BC89EEFCB0703896EF6B
0B755BBE98B2FB2CC870EDB3527A7BA24C4D60FB42772647A45648886869F882
BDCD3130383C7CEB8061134D4D8E00D5734DF48175283A9D9AE897465ACE2625
1630F85D1CD1290E56D540A5E6D4CC3812205000F6E047254B401FDEA2D8CC7B
C2FF1068A6A5B4E789BB1F1DBF3C31D3D4CBB83BAE7650F4CBE22F249432514E
979219DEBCE96F71DB07F9A03E62EEE17A498DEC03ED982A1AE451243B9AB4AC
029FCECFCF0486BC28AA3260F644FEFDC8DB67C9707B3FE55FE1A47DB9DDDB4B
923DA86D546ABE091DAA85F8197FEF33F94F79348A00CC7E17C81F9337625B1F
D2F193E37201DB7CB38F2ED4561E5E817DB5D7B92F5DD6486B71F195ED114B9B
07087C8FF9FD519A587F6CBD51C4CD93C7F5B04A723B4B8BE76991F87B4E778B
EBEDCD5041ACA5A7479419BCB5C294116DC6690023A079FA756319DE892C184A
5793E278B21AF0262C2C0E607F453DFF76DEA0511D5FB44E78858C3C143A0327
B22937266C1324DC61D4B6889DA472486C6AA3C092BABC493580A3DA3AF286A1
D9A69FFB8B1D75CB6C38C55B8D97CEE0A95B17DFB8C1F9F13BFAAA09F03E4FB2
6B8F3282F70549E51FC3B45E4A81C232A81A7BAEF177F95DE4AD2BD035AC8B11
996866A9606CCDB7B206F218FCE93A18F9398057B7B3863CB53DA094125910FA
22DC1D49843D5C4DB7CEEDFBD03878F94D7E0A2AD69681DA8137E4C535907006
72BF4893CC8A439AFF79370A64CFC597A6D4A2FE661EEF237A713586C7C1DB23
449A0112105F65818FB42A05FB78BE32B37BB52DEB557DE85785CC538A9E9B07
82302EF896F99D7B22AEBF608C4B4D0319D4694471E2E1FCAF2D2CB156BA3FE1
DEA794DC0FC029287EC691DF6C7B682B5E0EC933D67814696263970C4FCD16B6
19C83DB8414C1BE7598A47E5DDA61CA5357F8C867FBC28E72FA633C456C90ADE
8A2900E00E3859795A36D0001AA472F1FBF61EC367656A0D2938A3B6F48E91EE
46C973B29E9D56645CA71944BDDAE1FB609FC002ACF88593F16F35D2E460BC28
96ADBB70B287E91CFDA111101C33CA56E9C815D32193099215A9C5E25EC99DC1
2569C9424E9A036793E61C1A65577C83473227489B66729C090FB72CE04F0051
DF68FF7CE246AB0331A30B8BB62519457769D36C415D5DB475C20AB73AF1EDAB
37B5C668C1D93B7D8EE931FF026A466E31DD081FDE6D252C972DCCDBA5432CFA
52A357E77D0903B6F385996AF4054787C9A715C8C5E3071D9D2BDCC2A1764EBB
885EE6780C55B718FCCC3871967C7B9CFEEC5EDE0DCADB2FE13D28731822D888
6AF62DDB8108A0DD5C22EA4854957E3B5F2B41B69F5429ABF7454AC1C903EEE7
4B215F6E1E4E7D6FD974053EAF4E2527D7BB943551C63519FF53F55B75BDE37D
FB5D9CF6C745E1E475CD494873DD2912763610F628460715178892B44D04338E
8E9916438A06D6CD352E64E7E74F5C93FCD6932F36B534F731FF3335AE9F8692
565A199857BF890AA25DD82A07C2E8210AB66789F30011A3D14E9A08EF237923
F849963147F5318E8F96145C3DBB293CD9ED264B1FC83DEBE20646F68B305CE9
EF196C1500D05B94DD2E27F38B34A2E227219DE137AA06E844B288015B6B045E
B62C9031211EEB17A9F78FB7E39096F7523F2E9FA5DF23A4701EBF8C6462A5C3
82D4E583AEE91A5F68C48E6A4FD8CFADB52DCE4D5DDB3191E07BE80034C4465C
1D2E8D1CABDACF2C98A4BC0620A1653E3E1884D7511541D6B191D20000C52E22
A7C2A54AC624B2086B2EFEFDA7FCDBAD9EE86A783BD5E0935B9A467A4E2A4DAD
48877B5ABD91B02BEB64F3B6231661AA1937EBB5187F60AEC30CC2B9E5E3A228
BA375CB3E7C757D73053AA55377703CC5EA8D01F7C8D37EFA065FE912AF09CB8
94ECAFB9C251C734201D112BD3D3139A12269C2AC359C03A758C43C588BAFE7B
3A5D13A1B68A9845B56186A5FA119D81FA070AD64969F24FD34F21C01CF2903E
AAA8FA5313F8ABDC9EE04C707B0CC3D63710EAE5D51CB5E6926DD3435C20A34F
783A42D0C80EAF813D89B573327544DEF2F1CE9DBDB1A0141BFABED6D280D838
AB1567098A8A29BEFA0DF49C85C65D71A54752D3990613A5851ADE06E74117B6
6205E396FD63993923B7059D9B048307954C985975962140472FB4217E80FF72
3D87E4C72CAF663D6758C670A6CD9CBC2FBF08D6EFAA231BF39A6CC0110EA2E7
1B09405147E197C8D1F6E8026D21F355D3F8C56720429A2062CF0CB473434927
EE8DEC2A22660856F263A2AD3B1E75F790EC213867A82D55047FC37B85F20D66
C325C365D68FA9F22C07AEC013690AB1E875783CB81DFC4EA0DE47D23D53A2C3
ADF6D49823C9173BA9221A26562C7961E6D39F7F4CEA258C29C616D861B0E313
E938D37014B49ECD31BC655965D537B376BA04249AA214D8FF30F0B8B0938655
E28E2F9541EDC53CF6FC729804326D70066520B56BA6157180F9B52C823A69AB
9F565A6223F9A75BE385139A1443FE02811D8F0F5CAAC570F7955EFC8CE5042D
6F508FB2258E1186DD024BAA8231CBBEF480C8F8C2D4C9B11F5A87F9726E922B
581DE3352189E8AF720E60CC0D592012F959AA2CC4D700E33654C9677421BAEE
B1797009A33F26BC07033F06D9C38CC2CA41B277E202D78D8D535EE47347C9D3
47892766778A4FC809AC73F32E3D83DF452ADF70899BE50CD00A3DD8E93C9C83
B4245BAA6AC9DCAB030E02F9EE35D997D4BD30ACDC9622A156B392D6503CC3CB
153170345B2C32FDE7B55FA4CA314F41537BC874549B7FB48CD0036A9C0F423E
45636F2F74C84DAB31B9EBDF6403F050D17E8BFFCDD1D494447846EA08502B4E
C57567444231073019B210D3346301EF00CC749F5FAA28E57DBA2CDC7F055DDF
6A6EAB3C3BAB64D19574EC08EBE0219FEDEC35F2ACD71E443C49E5CB90045A57
E87AF31B9E312587F6D70D4D0DA025EBBE5BC3AC02FF5A49817A36D7D175483F
93CEC27E6762439D4F3F73930F0CA0C4109AF44FC55272AFED91A523D03766BA
06B6528CC527BD6657987E9CFDE3EFBA464CC4A45328C010ABDA81149E252BC1
149F99460950877D7A65D7F5D7A0AA44B1334A451E67FD7EA6326E2831086F3C
930D5ABD21AD32D3207A5EFE8176D9F56023387CF50E4950A2B711553E10395D
2EE6AA1711E3640E9912BA7C46D176672439488901676B3F96017A8EF7A41C1D
2D80B5A75DF6F81628B28322FF58F52E266C7FEE239F49ADE0A7B3E06805BC5A
58394EFA662105B707B99B0F3343A4E18F424760AA1D38C9478E1245D2664BA2
7033F93D028FB6D4CC481CD99A9A130AA036D804CAD04CE9311A8158D7C64AD2
3FE5F3D8BCF0684E05C1433F7CB300B4F6C717106B9E30C78451DB495C7E4C58
640A74B27F62DC57CC16C6A61BA8AC0F36DCAA856DBAE3DA56F5B6CE1F185875
5802DF9D1F1B29260DB54E2168A58EF41C4A5CE3206684B54059A3F98839EAA1
F7A740C70536BC200E1946028D3C62FFB2BA5BA6B54BAB41752637580FE7A201
DE8F4FEDA0BFE296C818012403E1AE0743FB020F950CD664BBDCFF71FE399860
848493F4BC8E268C853034DDE7CCB03492724E90C3711EAC55AC51798C9EA937
92E381B399277162E43D59716A49CB0A1FB6FCD6DD6DE0D5695DFF073011D14C
C6E1A1A964CE2EC48C82276C16A321C9FBE927D3EC7982DA9556B24B18046FFF
7CC06B8518A6A6030CCD5C86DD7B6264105EFC1E99642D2B5717C495CA50B0FF
74E4CD600037647807D0945C4446F33244FB5007C38D2D94BA65C227D438F7C6
87DE661ACCC125B4EE8D494BDB37B56A48E0248AC0C15C4A13660ECDF3A64824
F4739C650A8EF8778E5FD3DB1FFAC7EF4616173816A5FC8532A1AAF536E5F6BF
1C5FC61F83E1556A67DD4317260F879D98795A608258DAFC8FC75E087EA8460F
C3A5B634ACAA5FE9E0537CBD1391DAAC2D33A2E588F044AFB39C72F0A686C806
FA4EB81A1B49FACE8ABA188D917B3F59CDBD7F9DD1D67D656E859FAB91651668
382E958266A5DBED50AFFDBA6F06B9271588790910B2B6C25074B4C4F55D8B5F
59122B87EDBC92C7B181247406040AA359082EA0EB073235663FBC750FF54349
72A5489CA2A1EE28273702231E91910ABDF10E46CF71C0F95B7D5D5F7C826C0D
81B45631ABD36C1C83AB1B8B12CF48A59CE200F92F5EE7C9F42357D86654C401
2966F31FB50F975C93A067006988AC9F71B61BC474951ED93AD7DDA7A85E327B
B48A841493B6F7C4F57382CDFBBCC352D290E8595B80B5F0C7C8EDEBC698F23B
7CCBED151B01CB9F0D984F0A9C6B27FC219F85F4C66A70BD8DB9593DB353171A
D893184FE2132AFF146B2E1754CA154B5AD9BF8BB1190D8B5F52ECE4F1045544
54133AA57E1F0555EE418A8772C3A21FA698BE68B6DF6C3E9F0B59F4FEC46A9C
F8974069A82ACEF132EE288B994C601551295D3212F42C9C4C026C32210A292F
80B5BF5E1CD1897AF0DAAB700B0B95052B47FE35EBB67CFFFBCD3C1AA3E32478
686F0F7D3B6AC07C2CB3AC341B1058A855D5FC75E5330C1D8880118B1EB1FAE6
B6345ACBC86A5ECF1706A713BD4CF609A266800E5F03E9CB2E45FB8C25EAE2CD
13CAD06E71F76AC4FE84DB6046B7CC46C2114741DFD584EEF2879F708A425190
0143AE240FA613FDDD8A2ACDB77039E707AA11F15F0BC2BC318F4E2D6E1AE3CF
0B9FE53F2AC11FE3A77C92014E68EF704D9E142FCA287F226D07201D9157E38C
9A7DECD7A094E963122693C1177005EE22C7258A2CB9C9E4FE71D56027629824
2DDC5DD2FF3CA2D0EB85403AA5E9C31D4F58418079DA6809997B2B5BD048993E
5BF6820351BDC04CDA467AAE8FB3AA6C634F1860DF2415E3C1E5D8D744A193C9
3D09C456BF961B39BD112C9D66B24A4147C5EAC6B18CA6DC884A0B0DC31F754B
0B1A430DAC94578AF42E9D331D25FF19CEF35EE6134AC1114003BF19FE03EC70
CF41A3CBB78FA9BAAD61D72D9B74EF7A88A05795CB9667FFAE1AF8B7E8EAB536
BF80DADC31A54F9D9623B665EF2D44614F2DF7C87D2FBF58CF9AC150A18BA38F
6BBEC2C049B72436AB482E452E3B9297EDA36545FD8FDB073D7A69009957FE9F
90A7D54993DBB260EF5A4FAE15348F6D556979ED9DFC48FD1C4CF834C7CF4BCD
54CDD819E2655EB9BE365DE93ED080635CE7ED7B07743FCE62B93B19EFD2DD67
54B17DDFA9779CBFFB8234860152054F76ADC3DBFFC019D865D13E423B0EDBE4
FC8476027DFA3996EC723243FCE0867AACB5E6A6DE1170E343D0992BEDCAF566
193B5258D253366AE478722662248D9C1BE466EDB1CD0642CF6261A2C7000A1D
2DEE2B7BEFF3461F6D6F52B7B69D70B9028459EB7461C269B9045062D2C13499
5A4B13980AA625E5CAA8F623D74D58BFDA9CF55110F866D339AEA74223403FD2
11F0CF15C99D531E6D095151C6990E563926296A9597FF3A25CAC79072D1BB5D
A4A4E9F80763C2100D537C5CCA8D9D00E4E36AC64660E77EB0EB034016636ABC
E08A79860BE820A2138B80129BCEC40FC4E5763FCF28B7D4564F1D43CC57F993
8588C3A5477A410F801CDCE8773B02278C16AD173988BB39A4D1C2822B68234A
7E3ECE14CDED80DFC81B4FA159432D6776D0E8B685692939122BD29A52D13BB9
3614119DD7841F262E1E4783A390315569751A756623D931080B9D7A73F477F5
CBAF666D6CC214F8D71ADF3774D046E7446B84F1AF7B49232123DE575A33A491
DC8999703E3C50F48120ACD8B2BC1431E00D54F9A56DAECE49469B3F4E123921
5B3A48B755F98733F48C5B2E9498BD586C5E2BD617D3E789FFE2D458A0DC3F1E
0CA2DCC4B6A6DB082DF930A0E1C546B3984EBB7C5009D01CC4350C1999785E2B
559DBCBCCC07A59859EAFD4C21E94B2461968DC14B9CE029A3D046D681531AF2
5C711597A4B5302557802CCE5D293DD3D7230801E13276B504DDC2445FC58B62
D43FA2E4AA1F6875BD07DAEAE0CA4325E6262B231F7F04CA48E2455193B5DD29
22CA3E0FF2EEAB7311FCE30060D59F5AF4DA2AEBC3E99D48FEDEC6CC7673F443
12367971FF167D0895BD0E945D05C06D4B4CDF2C8410FC5083ED82F3F4D018C5
CE157047BF9CCB78F9F8A3676A78843C4CA99CE112613062AACC9AC965CCE892
36A3F5476F884BC3D28095DE12C4AE18D7174D9D2EB6D1FB9A0B53459B7C4D92
85223C851AC95AC98A8D872A6339CB17D8DC02CBFC568883DD0DE42BBD460FA2
B0DD8B8F13CE747A66DA31260C9AB088606F8BB0E30EBC598835EC176CC8C70D
D3B1F8FCE0ED6BC4D59DEA2ADFCD360CA6AE1B64C788496707A8913D8EEB7168
55128FBEBF5B2FA040C7FCB3B384B20089D7D5DC1D481B64421361E0516FDFC0
6C003F91285A39517B1FA6F3BFAAFA384E43AF6704F8A3F11A321ED7FD9681C2
78201644405923C6587048DB68125A67E0A6CA8B3DFFAFE74458C768A9B305B0
372D10BC6E7C91B2BE856139BBF32BEB1F4B35EF8203E4A06DEF7B0425F1F8E1
C9E5471CF857439A34C24D4FC5891780DF0777B442A236FD23C9A10621F69A1C
C39F032C8AED946000372EC957AA4A84589C6E5BFD75A498442E6AD5399E6293
76F4333F7D3620C3FEBF42BD06F66954AF67274E941466A3AD129C42205959FB
18ACB157D52BB905818248741CBE855431D8547C2775B986BEF20915768501FB
3EB172F22AE9AA7355FDAAD756B4ACB6A4C70B5130C1903C82EEE8004883DF50
ED5A36B842DEF437B3794069EB01D6B46B791D1953B6A1DF13098DA334F8AF05
A1B59EAF0FDF24EDFB951987A7E25182CBB9BB4A2180286A8D127BC7495E941D
69EB81D76489FB8C63BCFE132E31AA021DEEE40C6F766C37AD2E7861D7899DC8
6CE1F1F2BA6BD7C58F32CB8CEFD413DD12413C2B4722C23C9D2FBFC7C144A8FE
A5222FDF60FB0A97BBC2AEED017AE4D25A2042BBE116A78023F526462E40482D
6932E03B8838A12C48C30F6EC61E65D49991701450EA53519091AD830AE1051D
A6FA8DC50BA52AD14AB258BE80B4B05FB91875B10303F8DFE214520CE1B045D3
2BA07DECD3E579084DF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 74 /J put
dup 97 /a put
dup 110 /n put
dup 114 /r put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD756DCCE701A754D5E590B3DD25D7FDBE3B785CDB4C3F4F346810A477659
EF5F44F78CFF4C05153B5B8F03FD40F0217B7C3BDC3A76996DE1C9A23BD060EE
67FB4F92D3FC0796D43F9579D885E0F1BBB20590A9C0F8E2845C5C29C3FC8E5E
BC9ED0D19376C7B65AF6BE2A440CF46B0A0010C50277FD7E0F7F5438AF70AD14
5EAE20FAA84C4076121F14A46E6A87C24741F33AA8A610BF4E3669C4519302B6
4B0A5453856BBC9E6E1E2F599AE24EE97053714A20E5B05A342B410B32A9F089
5274F21E9A7E81D31752FAB83F71DF5C5A7AC6EADDB961D30B54E2DED28DAF2B
5A7187A04AAF44E05BFD36FDAE620485E97452F40B181AF524C1CF886D666D3B
A9B2D5B66E4A10F3A7CA8539A2660D0909CAB81F4855217B3FB474E9EEF91CFA
2FF8DD31E34A262FB328A09B715315A857D1EEF6871B267DCC5F5E6B00B1D29B
02102A7C1585B31FFD660CB8BB906FBD62E037630A65DB813C2E0080DA0895F7
3FF89D82035110ED87DC58EA8FEE6C6C68A76CA4474CB936B030A6ED1198DC7D
B9EA33F839A020953F22A6C74A81F519201F71DD359BEE772F5DDEAEEB5DF231
8E57F4E9D91A269BF8FD05286145618195ED052E3E47A9D8DDEA10D06D20306A
B5C16287066DAC7D755D485B5AC541C46D2409E8DB79E87ACD8574986FA3344C
C7BE7B6A9467C493E4241C67C9C4270CB3B55831185D912D96569C2E457A56C8
1F456A7BD441399D9254A24244E8F9A42B6702E8C0924CE900502EC517EA29DF
1F8121D3D4C62243FF55BBF8C38B8A151A8610B32900668E832D11638AA7727A
6923FE2DE3B1A4EF01F344EE25315BC5803495DEB0451331D4AFBB759BFDF7A5
79FAC2E88E71BF783E944A9D9C438F6F651A1BC176472B81FAE963BE54BDEB4D
6AD40D88B1668F9AE99361C09B4071FAC531D17790AD2D83A9800BFB1BC02977
6EAB7BA85D34FBAC11DEBFE9C18A8FD7F1B120A71C13BC118F577F5C0CF78F6C
CEB5B47B7546D21A8F8AC0CB662F452C4DE61A7F53A49B2969EABCE367D1BEC7
F18619C1DEDA01413D3E940BCC258C115A36DF52731130497F3E60E16D941E00
161A93B03E851B6D4985C0063FC867E07263A0E47396CE4839D0B34A2A137AD9
4B8C78A56ED5C74F20CE08E0B6042ABB713C6F7B3CB066F5717DD9B71530C5F0
1B427413EAC511832A547B3C82C6B1DE2BB5DC12BCD8738037A15842F0C6DF90
1B6A44495CFEA4F1AF95EA89C49426909DC48F34D93F87654D8FF366BB09C511
57BD462C109B6CA2FFAB259C5AD371CEE14EC907A0615C7EBED69A9A746F1469
DD3E81F70F43878A7F5D0791A24A7BE58478319E878B6BF45ED91B9587BF66A3
55B0D11134CD4B5E443060A89FB0C6D6F702A1CB166E5CF4901FC6D056A955AC
836136E35CB95A332191DB6484CE003D458885CDE76832767E297CA163FD468C
DC1B7938D6310F40A4395B8AFA5466C03A62372FE843423B04AFBEE9C047D3C6
63A5FE05D2D7CEAB12DCF54A0CB5B3DEC6A831D0E0BF668BA08563488A6C85D1
5C755D285F9EC0AC042EDC0DEC68701C43B6BA3FB76E6F273FB79F450B4675A4
D38A237F0F3DAAD9B2880F05D9463957716BBCE2706278973A935F5872BAD6E5
2183BAB4A9C78D2D4F3C5F7A1E8AAB07199813BBA9D0B540876DDD2455A98D32
8350FCA300CE60A2C33D77100838C90431A670A4A1BE80ED8FF0A9C5A9FC3A15
F26A1455DCB553CE25ECE41B5287105375B0D2EE6D90A794FBA2AA2B3113F6CC
60FB2811E3C90354949ED643E0046F3ACF9A48C7DAD23FB107AF2468535AB59B
59025BD151B0D4FFCA7D3EE1EDF727CD02C162167132EA32124CC672D96562FA
D82974A2CD402776A19BCA6C0758E201DE4C2236D33C447E46FB1F6754D39F53
C7398594ABB22B49FC27E6B5105A88028E3ADC7E7DF54CEAC5AB31A5DFA35719
B8632597F35F33BF93032EE2C93435D42A58E11189E91374B3DA7B25E86CA114
C009E5AA718C307B36973D9320703CE78C8596546A68975180DDD50F2C83F692
BB78AE870A95E81D4330B9CFC63E240617BB7DD47B51BD5B32BBFC70A37BCEB7
1435F49B3A3798C8CE79751AEF28EF04D1620AADEC10E8C6828998A688AC8EFF
56C0DB8AC73D51675902835C30C18E23A94BBCFA69A05F933E87E72A55D38C5B
E9D1270C0AA9B6D4C120F239971F0DD594090500846D2B589DCEFA9261FA7DE8
35C86125AB4759F1F329AAFC1834EBBD1EEDB5D83A4BD944CCACF71CB3ADCFAE
D7E9606B6D3A871C1A03E1F81E21055E28F6DA0750586133BFCC243D76DC1EB8
5D6E113A8504D9963B21C4CAB662733FEE3F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/UniqueID 5000795 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 52 /four put
dup 53 /five put
dup 65 /A put
dup 69 /E put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B57252D7D87CFB7BE009E0E1AF68C57E2041CB837A1F9DA290FC07240D616876
CBA29ED23952F977F27ED97503F6C6CB48DA6611E0ED9D90FA865D099740C6CE
8A5DDBB1D6550B208321C365A5104F9ABD66A9238B8A2106AA74CAC58D1163F1
DC4A62013C0F6DD8A3E8E1A6CC6E553746D570A744863FD8EA705890890AC5BC
2F0A068C740572F045B32289A2AE66CC44A1C13FB8BBD4E1834995731D19B47E
7C2FE360AE79DACB95856B01EE39EB3C7C9EAEB3D47348C47D928BC883B8E760
6724D80DABC4D736411942BBA8CF08157F21D63C18924282193C5C8E44E09048
FDCB8DB2E01C8A496FEE2CFC19A3A0EACA508237C8BD988ED6D33D01EB548B14
61A546886AACDAFB7C8CA69056B1F428D72541D045F7BCA10CF59B35F469FB17
8175BC6B23FB66BAD45F44857AF1CDC0F19C8D0285CB4E39133D643260A363DB
588DEED4509BF731781162B11E7949C5C4196A7BC3DD925D4C18F7B388D5E32E
B82B3DAE82D30D8BC63007AEE878DF7B8EE2A90739373EE690C310D5608B707D
6ACEC454C34B7506C0AF18298AF334080E4B1D734CEA4A4B3B794FE093EF0350
E5B43CBF2F3D395B392BAAE3758D698A92B4265188BF099EC89A0D543DCE8A56
0812280348C0E3D812EC8BD96B5F7082E23AE134B9B12831B4CB4DBA061CBB9E
CE7EBA6C24604A5B99FCBB7C8F1415387B024B7076821600CE877B5E7D1462A4
FA43626EA91D8ECBF6B920DF052DDA0C4BB773208ACC4C04B1F2D9D229ED18A2
19B3ED0002B7B9E168F6A0D23643E4C9F9E9574622ACE988C465A4EA3ACD49F7
8CA3D70A95F2EFF9A496943DD1F2AA56668A56B78389ADF7FB818884C4F50341
FB0B51552B36BE710EFE3AE957514CF31F42FBFF2E1C5D6CE06BAC1F90A6757B
0CFBF1A087118675FF0479A8297D0763C336265967304B3763AE6A7B08BF558A
B5E4B05711A7B9E67CFA4BA81B3AD3D34A9B76C0F699C16B4518ED59C79BD43F
A25B0E6ABF2255EA5FD49A26B7DDB9891758AFDA8BAEA668EA6FC3833DFC14F3
D99EE0E73E80038078958596CE7AFDA94FCC80F16FFAD7A864BC94C6B871975F
70CF5A82DF9F4EAA979F916179DAF6D9254AF53578E8D65AA92BAE44C428D49E
04813BD9396343587A3DCE0214CEC6212058CE3E52976E2027CCA95D913A47C8
18EEBF81CC575C093525EB5729D8AFF919BA0881C8AA96A10AD8139509C52A90
51A8B6F7D3C369EA8C7C184028291442B13CADAB6B2A3FCDB29E87FECF774AAD
A8309E0B6E0AB95A77E4756754572FAC6411674C092983D19AC50F0BFA1F4CFE
7575909C6D990310B40CBF24405E520BF93563C438D09BF7567F3708F9DC6C5A
BC028DDDCF74FC419A17A65D6E80FE70B4B27A05CD058C0B5AD4E937009D92F0
5961F273B9C7AE673723FCB92A900DCA92DC04593EDF49F0A6D5E68D2369EC60
76630F8A3C94C844DF8FC1C4E3BA5A5851897D071C058D760525BB3518784254
B6855B442011F240BB7325B1C41E2659A8717B772698048353466A9404340386
E5FD44A5C7F30A63A9547D568633F88DFC9911DA50F56EB67C09AB2BEA595AD5
893658F5EED9065ECC5DB9C92D208DA31729061F41EA048170864493C3E83293
13D8A5163F1430CDD1F4AA565A76F05286C17FEB0A7D1605B51CE513718DA6DB
081588E971CE0513A36DE55DF2C298D34F3811D5DD1330D98BE23F989F2AB6AF
CBAF4AB0545628186C69BD725F36A353E7D668D221352B51180991AC43C180D0
5D7E62E1ED63B2D02C15D553312F454BCD9EDF8AA335AB22BDD9415C41FB18DD
E9072DE9CB305665EBDF726B83863946C7A4CE21E00BE68536A8BC21BB99D190
A64685DBE3893D115FF0CB5350D959B7B75D2527926F2BAB9D7A8FF5F32ECF9D
65FEAC8E592731B3BB670041BE991984D6671555500C5406A3F38624D12AA54E
4C2FB30523084D765D265C86229EED69C85BFAE591D6181C8D112E4C59E6BA9B
FFD103C3262A8409E2E3C3BE455C57612A0BADC02F5D48EC7FBFA5F896DE2E89
D5DF2A429D9E533EBCD7322C2E0BE6925D6825959BA8C459533A670D510CFEFC
4197B9AAC232FEEAED6DF4AA21AA744643EF00C6C45EFF590B35B49CFD1B55A8
33C3E0EBF2AAA1A7252909F05B9252E8C144D393DD4DB2259543E1A575B0D749
2849AD8C82FDC1F84132BD48E71EF73323CEBDFC04366686CDFC7DCCF142B804
F2D60F52A23A8B2079EB73727A617628676447A958EF1AD9A5C922A0BF18038A
EBC233ECDB4CC10F46922C74FC85837948EDC115DC713007F2A455D4C1EC2E76
6C756038C387CC34FBC9B423FCFA1FE605087C52D49835A8725BC36076B8AC16
A4EEE8FA7286BFF342E32F9F7951F4C0A00FC1905E9718FE12FE0DAA8E7420A7
A53CFAEE370317F482FA28850FD5654DDE9F31784CC07D6EF9E2D7AC35B974EF
843217DD3A08E40F7D9124D1AD16CB934296E697A7B5E86B00217742CF64C0D5
FBC8F33F98824E37563FF05ACF7B2B59BCF8BD6FEB0767AEDD013596D655C5B7
7FFF5C791149E32336D812261251D8888DCAB482B9BE9B1EC80C622B59703CB7
D23854B1F7E5BB7B811745D4F9450FFF7E2F96E82279CF5415640DE717CD2E96
CF60A3A379207CC167B5C958C9F68BCD1FA9493DF96B7EC8BD7C4B9D512E6906
821F19C4CB0EF88B2F134AF24E1960E79665AC4C22117351CC9BBFAAA8E9A882
7E265F9ECF246B5D55DB738C69B19DB8DB20D98F103DC9A4DE43F8CC071F2E80
569AC3BD9CB4A41E739C66B50944D1F2A32A278EE18EB68463C26B21BC804A3B
ECE52D3C2224EB3998B6D7B3D9324627343ACE7E39C8AAAC1288969673F6AAE1
EAB4433633D7F6601D61E1B6C7220C6FB390AF29639EAC0FB9701082615A3E11
049C39CF60D66A6925B4F47B878B55E6AD69F28D9FD24ABD408EE950028CB97E
53B6707EB9F7DE358DA08E4EF4D078EC2C7B844CB480AB5DDEB3D95EF21F8C96
66DEBE368FEC48E609E54F1F2935555C35B2E634839C5362E4090BEE89CDE4FD
4AD55333D6F59366236C11A104DE2458B6E41092F1256CAFC93396EE0B86414B
A19D5BC24EBAA3CBF158C8F77C87B49551A8A822E8266D57828F3D25DCDDEAF5
5AA6CB4D256E6618A9ACE67C2426067F0650F0CD58C2CF78265EA89CF11BBA50
63AAE70BADE47C55EB23024391A3C8364F5102796E06EC56FE091337B26ACC90
ECBC47CB386397AE375E2F88448600B78D670FF6F1C364A19F3645EDA9895900
B3BF7DEF41CA3B9D1D8395ABE8A41AEC30922905F615C18F7A288640CE21DC01
BB6FE06EA5074C374A2B7F002D3194DFB8F89055DF6B1D8B398B0D16FF59A9F0
0833EE988FD0F00F7E7563E49212E3A3E04D7E49CCAAC872E130B56410608DE9
6A9F4BC7127DBE6BD7A2131F69A36C4640B1E37885E0B776C85A73332FCAFCBE
EADF3F976C6D8743F78DC776DAE8BBD54FE69F45DE2549553B01DA19DC9D134F
F3C5C72C432CFA4C4BD93D18354595573F101EC7618FF04812C64E11DC8CE5FB
E1511C0E64B0E892E2DC1B7B2CA0C5CD9D2C37FC9EC0E43C5F01A6BF55ABF9C7
B9633698ABBB3093894787B5A2905FE14B9A13C881206DEE4FA8944E0B3949BA
B173E2E88AC123DB79780480CB1B1A15B15BD46B87599B441603D39226C9BE27
706F3973B7742E9DB6048D75FB2AD906513C07ED8FCAE2E660295EDAC89B673B
82E25A5B619F942259E5ED0507175581D31FDC46647F194494D462713F6136BB
9899AD5A8B5C2C23547BBBF35F04915D3AA3A891A54DFAD3ECF5007A73E761EE
A7EC69B1B85F55D814B3931201BE6DD3B006951A3E4EEB33FE8E3C25039B2670
B82C6370402A336719EDE76EA69AF3B193276C1D7413D2F8BF1BAD1EC2F995A7
3A363F349566C156E0821856517C5EF1040611C9B6AB6F70708C102A6C131ECC
27F6F92A2E01919897719E1B6B7AE54B64830312C839AAC985E399EA1147AE8D
90CE971874301F673A200EAF5362605BBF772338C197B4861E8B2017BE5C162E
6EDC77BF190ED2970BC608D3B91D39164E81D26807D768CFFAB4CB96C4410C5C
211E46B891E38E2082158938ACE103788022CFCEFCE588DCFEAD5ED04B951DFB
F32397BDB0C53633452FBCDF072F6023CDD99FC4E556EB0EF55C2B56863E398D
A163C2861990B24D7B4452B4EA1AB920DCB447A85B1AFCFCE9A4658D31C7175A
4C63B77C93E9D9FE72AC5E68D0EC4321E19B66E80E11030493F6DDDD5979D52E
BB7D3D5FA30B98EDFB75F124EA2A191D7AEE476637AB1F4FFB859C316E51CF7A
D35E5434F99A99A82C2F75D81A9ADF72F21801548A13C929D18ED80234B6EECC
77D1FE167418C49A7446605775E9D47744426C8D5D2E187088C2AF0106150D80
F1B052625DED7433F3FFD0E57757855E331DFD566510B136B67538D07C4F02CF
0C847E54B9EA663EFDE98DCE019D6249D7F4FDC31B696A0C63F1F21999A47E79
E4B002E8B036374DC2030A308B13436B9699607186F788CB6BDF30AE47876F7E
4CAE64D4E593FF6CDD777FE3C57077579AA95F241DAB62F8FEFB347856711940
663C947E21278F78A5E878DF2A5B1424E2962AE5CA8362F0994A2AA6D24C6887
700EEDFB72C6DBF4E343F9AB76A7FF1A1740A109E8EB2726349B743F021848EE
597C4A360070EED769D18414F684F182EFACA77FE2E4855988C779E6588512AE
9DBEDC9573FCD3B3CB01FBE596C77943634D1702523580EF040EC52E41D08215
A363ECD69D4824E612888C7E35CC08BE1F342CBFF0D5E2E24FF595571A97C105
735D4627FA328B4DA0E519E0608B9F4C69E604AFDABC54C85E61463BA2935887
A589E6AD3E8B103512AB9C3E4967674E2AC1ED09EC0E914C95579453F1FDB38F
37422297D25D56BA8F4A23B3EF164F7CED6D14F5CAA82AD82C7F6E20B5473809
A8646CC2B8AF1FEEFF372B2BAD7C889AD4081D7F0395C6A5DFEBB52982BC2990
F28669E88018DD42BFCC1FE245416C623843D5D716DB7BD086B4AAE8D19CCA0B
D96B5606991E2CFD65C1AF38935A18771FDF91963880EBDF3F8F9960DE595E77
FE13A633D529136CA124FD2C1DE9206F9EC2317CAC8D6E87DACBD9F9B93E0749
4B3FA53F67A160560B467AB37B853681114F75B8CB391B836C2EE7ADFF0D9327
32936EDC71E3A204D43F63D36B189A4B1D61B57213D2A0C64951EE84241CB293
989FB0801C6231E1A5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (PET504E_Lecture_Notes.dvi)
@start /Fa 230[65 25[{}1 83.022 /CMSY10 rf /Fb 148[35
1[23 39 81[40 22[{}4 58.1154 /CMMI7 rf /Fc 254[64 1[{}1
74.7198 /CMMI9 rf /Fd 133[33 2[54 1[37 21 29 25 37 37
37 37 58 21 2[21 37 37 1[33 37 33 37 33 34[42 42 12[37
48[{ TeXBase1Encoding ReEncodeFont }23 74.7198 /Times-Roman
rf /Fe 140[39 7[43 2[48 20[51 2[53 63 5[36 7[62 3[42
30[49 23[65 6[{}11 83.022 /CMMI10 rf /Ff 150[25 1[44
32[56 19[44 44 2[25 46[{}6 74.7198 /CMBX9 rf /Fg 210[83
45[{}1 83.022 /LINE10 rf /Fh 135[35 2[41 25 1[32 3[43
8[35 39 2[39 12[55 6[69 9[55 20[24 21[35 7[24 16[{}14
74.7198 /CMTI9 rf /Fi 156[27 42[30 30 30 30 30 30 30
30 49[{}9 49.8132 /CMR6 rf /Fj 156[30 42[33 33 33 33
33 33 33 33 49[{}9 58.1154 /CMR7 rf /Fk 132[42 37 44
44 60 44 46 32 33 33 44 46 42 46 69 23 44 25 23 46 42
25 37 46 37 46 42 9[85 1[62 60 46 61 1[57 2[76 3[30 62
1[54 57 63 1[59 62 1[39 1[65 1[23 23 8[42 1[42 23 28
23 2[32 32 23 4[42 19[69 46 46 48 11[{}58 83.022 /CMR10
rf /Fl 138[62 44 44 46 2[56 62 4[31 2[34 51 62 50 16[84
8[42 23[56 49[{}14 99.6264 /CMBX12 rf /Fm 134[41 41 55
41 43 30 30 30 1[43 38 43 64 21 41 1[21 43 38 23 34 43
34 43 38 9[79 1[58 55 43 2[52 60 5[28 58 2[52 2[54 58
1[36 4[21 4[38 38 38 38 1[38 1[21 26 21 2[30 30 40[{}46
74.7198 /CMR9 rf /Fn 134[62 3[65 2[46 3[65 12[59 22[60
23[59 59 59 48[{}9 119.552 /CMR12 rf /Fo 134[100 2[100
1[73 74 4[106 1[52 2[52 3[84 106 84 1[95 9[197 2[138
3[130 10[130 3[143 11[95 95 3[95 48[{}19 206.559 /CMR17
rf /Fp 134[85 3[90 63 64 66 2[81 90 7[49 74 1[72 90 78
16[110 121 126 153 97 7[124 21[45 46[{}19 143.462 /CMBX12
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 523 365 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end

523 365 a 523 365 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 523 365 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 99 x Fp(Lecture)52 b(Notes)p 523 800 2882
9 v 0 TeXcolorgray 0 TeXcolorgray 1736 1165 a Fo(PET504E)1736
1414 y(Adv)-11 b(anced)61 b(W)-16 b(ell)61 b(T)-16 b(est)1736
1663 y(Analysis)1736 1962 y Fn(Jan)m(uary)37 b(2012)p
523 2120 V 0 TeXcolorgray 0 TeXcolorgray 523 2385 a Fp(b)l(y)523
2568 y(Prof.)54 b(Dr.)f(Mustafa)h(On)l(ur)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 523
232 a Fm(2)154 b(PET504E)28 b(Adv)l(anced)c(W)-6 b(ell)26
b(T)-6 b(est)26 b(Analysis)p 0 TeXcolorgray 523 448 a
Fl(1)112 b(In)m(tro)s(duction)523 651 y Fk(The)26 b(term)g("W)-7
b(ell)25 b(T)-7 b(esting")25 b(is)h(used)g(in)g(P)n(etroleum)e
(Industry)i(means)f(the)i(measuring)d(of)523 751 y(a)e(formation's)g
(\(or)g(reserv)n(oir's\))e(pressure)h(\(and/or)g(rate\))i(resp)r(onse)e
(to)i(\015o)n(w)f(from)g(a)g(w)n(ell.)523 850 y(The)34
b(term)g("W)-7 b(ell)35 b(T)-7 b(esting")33 b(is)h(generally)f(used)h
(with)h(the)f(term)g("Pressure)e(T)-7 b(ransien)n(t)523
950 y(Analysis",)27 b(in)n(terc)n(hangeably)-7 b(.)26
b(It)i(is)g(an)f(indirect)h(measuremen)n(t)f(tec)n(hnique)h(as)g(opp)r
(osed)523 1050 y(to)20 b(direct)g(metho)r(ds)g(suc)n(h)g(as)g(\015uid)g
(sampling)g(or)f(coring.)g(W)-7 b(ell)20 b(testing)h(pro)n(vides)d
(dynamic)523 1149 y(information)k(on)g(the)g(reserv)n(oir)e(whereas)h
(direct)h(measuremen)n(ts)f(only)h(pro)n(vide)f(static)h(in-)523
1249 y(formation,)27 b(whic)n(h)g(is)h(not)f(su\016cien)n(t)h(for)f
(predicting)h(the)f(b)r(eha)n(vior)g(of)g(the)h(reserv)n(oir.)648
1449 y(Simply)-7 b(,)36 b(the)g(ob)5 b(jectiv)n(e)35
b(of)h(w)n(ell)f(testing)h(is)f(to)h(deduce)g(quan)n(titativ)n(e)f
(information)523 1549 y(ab)r(out)23 b(the)h(w)n(ell/reserv)n(oir)c
(system)k(under)f(consideration)f(from)h(its)h(resp)r(onse)e(to)i(a)f
(giv)n(en)523 1648 y(input.)37 b(Input)g(\(or)f(input)h(signal\))e(is)h
(used)g(for)g(p)r(erturbing)g(one)g(or)f(w)n(ells)h(so)f(that)i(the)523
1748 y(output)32 b(\(signal\))g(exhibiting)g(the)g(resp)r(onse)f(of)h
(the)g(reserv)n(oir)d(is)j(obtained)f(at)h(the)g(p)r(er-)523
1847 y(turbated)c(w)n(ell)f(and/or)f(adjacen)n(t)i(w)n(ells.)f(In)h
(practice,)f(the)h(input)h(is)f(equiv)-5 b(alen)n(t)27
b(to)h(con-)523 1947 y(trolling)k(the)h(w)n(ell)f(b)r(eha)n(vior)p
0.1 0.1 0.8 TeXcolorrgb 1484 1917 a Fj(c1)p 0 TeXcolorgray
1583 1947 a Fk(created)g(b)n(y)g(c)n(hanging)f(the)i(\015o)n(w)f(rate)g
(or)f(the)i(pressure)p 0.1 0.1 0.8 TeXcolorrgb 3496 1915
a Fi(c1)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 3558
1947 a Fh(Mu)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(r)l(at)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 29 w(C)-45 b(\030)9
b(\020nar)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb Fm(:)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
4029 1933 124 4 v 0.1 0.1 0.8 TeXcolorrgb 27 w(and)p
0 TeXcolorgray 523 2047 a Fk(at)31 b(the)h(w)n(ell)g(\(Mathematically)f
(sp)r(ecifying)h(the)g(w)n(ell)f(b)r(eha)n(vior)f(is)i(equiv)-5
b(alen)n(t)31 b(to)g(sp)r(ec-)523 2146 y(ifying)h(a)g(b)r(oundary)g
(condition\).)g(A)h(common)e(example)h(for)g(creating)f(an)h(input)h
(signal)523 2246 y(is)p 0.1 0.1 0.8 TeXcolorrgb 608 2216
a Fj(c2)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 675 2273 42 4 v 0.1 0.1 0.8 TeXcolorrgb 675
2246 a Fk(a)p 0 TeXcolorgray 29 w(build)e(up)e(test)p
0.1 0.1 0.8 TeXcolorrgb 1246 2216 a Fj(c3)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1313
2273 213 4 v 0.1 0.1 0.8 TeXcolorrgb 1313 2246 a Fk(where)p
0 TeXcolorgray 29 w(w)n(e)g(c)n(hange)g(the)h(rate)f(to)g(zero)f(b)n(y)
i(sh)n(utting-in)f(the)h(w)n(ell.)p 0.1 0.1 0.8 TeXcolorrgb
-454 2214 a Fi(c2)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
-392 2246 a Fh(Mu)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(r)l(at)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 28 w(C)-45 b(\030)10
b(\020nar)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb Fm(:)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 26 w Fh(T)-6 b(ext)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -454 2319 a(adde)l(d.)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -454 2393 a Fi(c3)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -392 2424 a Fh(Mu)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(r)l(at)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 28 w(C)-45 b(\030)10 b(\020nar)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb Fm(:)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb 78 2410 64
4 v 0.1 0.1 0.8 TeXcolorrgb 26 w(in)p 0 TeXcolorgray
1 0 0 TeXcolorrgb 142 2410 26 4 v 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb 168 2410 195 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(whic)n(h)p 0 TeXcolorgray 523 2346 a
Fk(Reserv)n(oir)31 b(resp)r(onse,)p 0.1 0.1 0.8 TeXcolorrgb
1259 2315 a Fj(c4)p 0 TeXcolorgray 1360 2346 a Fk(also)h(called)h
(output)h(signal,)e(to)h(a)g(giv)n(en)f(input)j(is)e(monitored)p
0.1 0.1 0.8 TeXcolorrgb -454 2511 a Fi(c4)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb -392 2542 a Fh(Mu)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb(r)l(at)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 28 w(C)-45 b(\030)10 b(\020nar)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb Fm(:)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb 78 2528 V 0.1 0.1 0.8 TeXcolorrgb
26 w(whic)n(h)p 0 TeXcolorgray 1 0 0 TeXcolorrgb 272
2528 26 4 v 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb 298 2528 52 4 v 0.1 0.1 0.8 TeXcolorrgb 26
w(is)p 0 TeXcolorgray 523 2445 a Fk(b)n(y)30 b(measuring)f(the)i
(pressure)d(c)n(hange)i(\(or)f(rate)h(c)n(hange\))f(at)h(the)p
0.1 0.1 0.8 TeXcolorrgb 2660 2415 a Fj(c5)p 0 TeXcolorgray
2757 2445 a Fk(w)n(ell.)g(This)g(pro)r(cess)p 0.1 0.1 0.8
TeXcolorrgb -454 2629 a Fi(c5)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb -392 2660 a Fh(Mu)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb(r)l(at)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
28 w(C)-45 b(\030)10 b(\020nar)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb Fm(:)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 78 2646 167 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(same)p 0 TeXcolorgray 523 2545 a Fk(is)28 b(illustrated)f(as,)p
0 TeXcolorgray 869 3423 511 4 v 869 3675 4 252 v 1031
3568 a Fm(Input)p 1376 3675 V 869 3678 511 4 v 1709 3423
V 1709 3675 4 252 v 625 w(System)p 2216 3675 V 1709 3678
511 4 v 2549 3423 V 2549 3675 4 252 v 595 w(Output)p
3056 3675 V 2549 3678 511 4 v 1796 3759 a(\(Unkno)n(wn\))1124
3927 y(I)812 b(S)797 b(O)p 1376 3551 336 4 v 1629 3549
a Fg(-)p 2216 3551 V 757 w(-)p 1376 3929 V 1629 3927
a(-)p 2216 3929 V 757 w(-)p 0 TeXcolorgray 1488 4167
a Ff(Fig.)13 b(1.)26 b Fm(Blo)r(c)n(k)g(diagram)h(?????)p
0 TeXcolorgray 0 TeXcolorgray 648 4456 a Fk(T)n(ypical)c(examples)h
(for)f(input)i(and)g(output)f(signals)f(as)h(used)g(in)h(p)r(etroleum)f
(industry)523 4555 y(are)j(sho)n(wn)f(in)i(the)g(follo)n(wing)f
(\014gures;)648 4656 y(F)-7 b(rom)27 b(reserv)n(oir)f(resp)r(onse)h(as)
g(monitored)h(b)n(y)f(the)i("output)f(signal",)f(w)n(e)h(w)n(ould)f
(lik)n(e)523 4755 y(to)h(determine)f(information)g(related)g(to)h(the)g
(follo)n(wings)p 0 TeXcolorgray 581 4924 a({)p 0 TeXcolorgray
41 w(Fluid)g(in)g(place;)g(p)r(ore)f(v)n(olume,)g Fe(\036hA)p
Fk(.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 1879
232 a Fm(PET504E)28 b(Adv)l(anced)d(W)-6 b(ell)26 b(T)-6
b(est)26 b(Analysis)154 b(3)p 0 TeXcolorgray 0 TeXcolorgray
523 5340 a
 currentpoint currentpoint translate 1 1 scale neg exch neg exch translate
 523 5340 a 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 0.6 0.6 0.6  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 167.32875 -176.12254 166.75957 -136.28844    /Lineto /lineto
load def false 0  setlinejoin Line  gsave 1.13791 SLW 0.6 0.6 0.6 
setrgbcolor  1. .setopacityalpha   0  setlinecap [  4.55254  4.55254
] 0 0 add  DashLine  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0 0 1  setrgbcolor  newpath
140.5831 -268.87833 moveto 146.83145 -263.18787 lineto 149.95605 -260.34242
159.32858 -254.65196 165.57693 -251.80695 curveto 171.82529 -248.9615
182.76033 -246.11604 187.4466 -246.11604 curveto 192.13286 -246.11604
200.72433 -246.82764 204.62999 -247.53877 curveto 208.53522 -248.25035
216.34564 -249.67264 220.25087 -250.38422 curveto gsave 1.13791 SLW
0 0 1  setrgbcolor  1. .setopacityalpha  0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 1 0 0  setrgbcolor  newpath
137.73808 -140.84099 moveto 143.42854 -149.37689 lineto 146.27356 -153.64464
152.6756 -160.04668 156.2322 -162.18054 curveto 159.78879 -164.3144
166.90198 -166.44872 170.45857 -166.44872 curveto 174.01515 -166.44872
181.12834 -166.44872 184.68494 -166.44872 curveto 188.24153 -166.44872
195.35472 -166.44872 198.91132 -166.44872 curveto 202.4679 -166.44872
208.86995 -166.44872 217.40543 -166.44872 curveto gsave 1.13791 SLW
1 0 0  setrgbcolor  1. .setopacityalpha  0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 140.5831 -141.97934 53.51778 -143.11726    /Lineto /lineto load
def false 0  setlinejoin Line  gsave 1.13791 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
549 2853 a
tx@Dict begin { 54.08694 242.70186 } PutCoor PutBegin  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 170.71646
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq false and exch 2 lt true and or {
/viceversa 0.0  170.71646  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 56.90549  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT
0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline  moveto
x maxTickline  lineto } { x tickstart STsize mul  moveto x tickend
STsize mul  lineto } ifelse } if } for /dsubT 0 def subTwidth SLW subTColor
subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart  moveto cntTick tickend  lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 0 56.90549
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq true and exch 2 lt false and or {
/viceversa 0.0  56.90549  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 170.71646  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 549 2853 a
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853
a
tx@Dict begin { 242.53297 242.98624 } PutCoor PutBegin  end
 549 2853 a 483 2878 a Fd(time)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a
549 2853 a
tx@Dict begin { 35.98401 294.20126 } PutCoor PutBegin  end
 549 2853 a 493 2873 a Fd(rate)549 2853 y
tx@Dict begin  PutEnd  end
 549
2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 0.6 0.6 0.6  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 139.44518 247.82358 139.44518 296.7619    /Lineto /lineto
load def false 0  setlinejoin Line  gsave 1.13791 SLW 0.6 0.6 0.6 
setrgbcolor  1. .setopacityalpha   0  setlinecap [  4.55254  4.55254
] 0 0 add  DashLine  grestore end
 
@endspecial 549 2853
a
tx@Dict begin { 140.83664 230.46739 } PutCoor PutBegin  end
 549 2853 a 507 2878 a Fc(\001)p Fd(t)549 2853 y
tx@Dict begin  PutEnd  end
 549
2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 216.2675 242.70186 140.01436 242.70186    /Lineto /lineto load
def false 0  setlinejoin Line  gsave 1.13791 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 549 2853
a
tx@Dict begin { 170.96088 263.47224 } PutCoor PutBegin  end
 549 2853 a 472 2870 a Fd(q)19 b(=)f(0)549 2853 y
tx@Dict begin  PutEnd  end
 549
2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 1 0 0  setrgbcolor  newpath
53.51778 295.05481 moveto 68.3537 291.92499 lineto 75.7721 290.36029
90.60802 288.79517 98.02599 288.79517 curveto 105.44394 288.79517 120.2803
288.79517 127.69826 288.79517 curveto 135.11623 288.79517 141.05069
288.79517 136.59973 288.79517 curveto gsave 1.13791 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 549 2853
a
tx@Dict begin { 307.32054 292.63657 } PutCoor PutBegin  end
 549 2853 a 373 2870 a Fd(input)i(signal)549 2853 y
tx@Dict begin  PutEnd  end

549 2853 a 549 2853 a
tx@Dict begin { 54.08694 151.65317 } PutCoor PutBegin  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 170.71646
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq false and exch 2 lt true and or {
/viceversa 0.0  170.71646  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 56.90549  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT
0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline  moveto
x maxTickline  lineto } { x tickstart STsize mul  moveto x tickend
STsize mul  lineto } ifelse } if } for /dsubT 0 def subTwidth SLW subTColor
subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart  moveto cntTick tickend  lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 0 56.90549
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq true and exch 2 lt false and or {
/viceversa 0.0  56.90549  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 170.71646  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 549 2853 a
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853
a
tx@Dict begin { 242.53297 151.93755 } PutCoor PutBegin  end
 549 2853 a 483 2878 a Fd(time)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a
549 2853 a
tx@Dict begin { 22.65982 197.4621 } PutCoor PutBegin  end
 549 2853 a 424 2862 a Fd(pressure)549 2853
y
tx@Dict begin  PutEnd  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 0.6 0.6 0.6  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 139.44518 156.77446 139.44518 205.71321    /Lineto /lineto
load def false 0  setlinejoin Line  gsave 1.13791 SLW 0.6 0.6 0.6 
setrgbcolor  1. .setopacityalpha   0  setlinecap [  4.55254  4.55254
] 0 0 add  DashLine  grestore end
 
@endspecial 549
2853 a
tx@Dict begin { 140.83664 139.41826 } PutCoor PutBegin  end
 549 2853 a 507 2878 a Fc(\001)p Fd(t)549 2853
y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 310.70824 201.58788 } PutCoor PutBegin  end
 549 2853 a 355 2870 a Fd(output)f(signal)549
2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 22.45967 183.8049 } PutCoor PutBegin  end
 549 2853 a 467 2878 a Fd(at)f(the)549
2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 24.36256 172.42355 } PutCoor PutBegin  end
 549 2853 a 369 2878 a Fd(bottom)i(hole)549
2853 y
tx@Dict begin  PutEnd  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 138.876 169.29373 55.22487 199.45357    /Lineto /lineto load
def false 0  setlinejoin Line  gsave 1.13791 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 139.44518 168.72455
  false NArray  /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.85355 SLW 0.6 0.6 0.6  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 216.83667 200.02275 53.51778 200.02275    /Lineto /lineto
load def false 0  setlinejoin Line  gsave 0.85355 SLW 0.6 0.6 0.6 
setrgbcolor  1. .setopacityalpha   0  setlinecap [  4.55254  4.55254
] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0 0 1  setrgbcolor  newpath
140.01436 168.72455 moveto 147.12755 177.60214 lineto 150.68413 182.0405
161.35391 189.43849 168.4671 192.39726 curveto 175.58029 195.35646
191.58496 198.31564 200.47644 198.31564 curveto 209.36792 198.31564
216.48111 198.31564 211.14621 198.31564 curveto gsave 1.13791 SLW 0
0 1  setrgbcolor  1. .setopacityalpha  0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
549 2853 a
tx@Dict begin { 54.65613 23.61581 } PutCoor PutBegin  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 170.71646
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq false and exch 2 lt true and or {
/viceversa 0.0  170.71646  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 56.90549  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT
0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline  moveto
x maxTickline  lineto } { x tickstart STsize mul  moveto x tickend
STsize mul  lineto } ifelse } if } for /dsubT 0 def subTwidth SLW subTColor
subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart  moveto cntTick tickend  lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 0 56.90549
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq true and exch 2 lt false and or {
/viceversa 0.0  56.90549  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 170.71646  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 549 2853 a
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853
a
tx@Dict begin { 243.10216 23.90019 } PutCoor PutBegin  end
 549 2853 a 483 2878 a Fd(time)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a
549 2853 a
tx@Dict begin { 36.55275 75.11522 } PutCoor PutBegin  end
 549 2853 a 493 2873 a Fd(rate)549 2853 y
tx@Dict begin  PutEnd  end
 549
2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 0.6 0.6 0.6  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 140.01436 28.7371 140.01436 77.67586    /Lineto /lineto
load def false 0  setlinejoin Line  gsave 1.13791 SLW 0.6 0.6 0.6 
setrgbcolor  1. .setopacityalpha   0  setlinecap [  4.55254  4.55254
] 0 0 add  DashLine  grestore end
 
@endspecial 549 2853
a
tx@Dict begin { 139.90755 11.38092 } PutCoor PutBegin  end
 549 2853 a 521 2870 a Fd(t)542 2878 y Fi(1)549 2853
y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 354.73888 73.55052 } PutCoor PutBegin  end
 549 2853 a 92 2870 a Fd(increasing)g(rate)f(at)
g(some)g(time)f(t)970 2878 y Fi(1)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853
a 549 2853 a
tx@Dict begin { 54.65613 -67.43286 } PutCoor PutBegin  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 170.71646
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq false and exch 2 lt true and or {
/viceversa 0.0  170.71646  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 56.90549  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT
0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline  moveto
x maxTickline  lineto } { x tickstart STsize mul  moveto x tickend
STsize mul  lineto } ifelse } if } for /dsubT 0 def subTwidth SLW subTColor
subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart  moveto cntTick tickend  lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 0 56.90549
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq true and exch 2 lt false and or {
/viceversa 0.0  56.90549  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 170.71646  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 549 2853 a
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853
a
tx@Dict begin { 243.10216 -67.14848 } PutCoor PutBegin  end
 549 2853 a 482 2878 a Fd(time)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a
549 2853 a
tx@Dict begin { 23.22899 -21.62392 } PutCoor PutBegin  end
 549 2853 a 424 2862 a Fd(pressure)549 2853
y
tx@Dict begin  PutEnd  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 0.6 0.6 0.6  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 140.01436 -62.31157 140.01436 -13.37282    /Lineto /lineto
load def false 0  setlinejoin Line  gsave 1.13791 SLW 0.6 0.6 0.6 
setrgbcolor  1. .setopacityalpha   0  setlinecap [  4.55254  4.55254
] 0 0 add  DashLine  grestore end
 
@endspecial 549
2853 a
tx@Dict begin { 139.90755 -79.66776 } PutCoor PutBegin  end
 549 2853 a 521 2870 a Fd(t)542 2878 y Fi(1)549
2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 310.1395 -17.49858 } PutCoor PutBegin  end
 549 2853 a 366 2873 a Fd(tw)o(o)h(rate)g
(test)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 23.02884 -35.28156 } PutCoor PutBegin  end
 549 2853 a 467
2878 a Fd(at)f(the)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 24.93175 -46.66248 } PutCoor PutBegin  end
 549
2853 a 369 2878 a Fd(bottom)i(hole)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853
a 549 2853 a
tx@Dict begin { 168.74713 106.4134 } PutCoor PutBegin  end
 549 2853 a 366 2870 a Fd(perturbation)549
2853 y
tx@Dict begin  PutEnd  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.50565 2.0   1. .setopacityalpha  Arrow
 EndArrow  } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.50565 2.0   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 140.01436 87.35013 140.01436 98.73105  
 /Lineto /lineto load def false 0  setlinejoin Line  gsave 1.13791
SLW 0  setgray  1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 1 0 0  setrgbcolor  newpath
55.79404 52.06856 moveto 78.77515 49.33687 lineto 90.26547 47.97145
108.32239 46.26436 114.8881 45.92267 curveto 121.45425 45.58144 131.30305
45.23975 141.15227 45.23975 curveto gsave 1.13791 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 1 0 0  setrgbcolor  newpath
141.15227 69.13995 moveto 161.37563 66.40869 lineto 171.48708 65.04283
187.37714 63.33574 193.15529 62.99449 curveto 198.93301 62.65282 207.60048
62.31157 216.2675 62.31157 curveto gsave 1.13791 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 140.5831 45.23975
  false NArray  /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 140.5831 69.70912
  false NArray  /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0 0 1  setrgbcolor  newpath
55.79404 -26.46083 moveto 70.85747 -29.02191 lineto 78.38875 -30.30223
92.19702 -32.22293 98.47316 -32.86287 curveto 104.7493 -33.50325 116.04686
-34.78357 121.06786 -35.42352 curveto 126.08885 -36.0639 133.62056
-36.70384 141.15227 -36.70384 curveto gsave 1.13791 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0 0 1  setrgbcolor  newpath
140.5831 -36.70384 moveto 146.19237 -40.11847 lineto 148.99701 -41.82556
157.41092 -45.23975 163.0202 -46.94684 curveto 168.62947 -48.65437
178.91328 -51.21501 183.5874 -52.06856 curveto 188.26193 -52.92212
197.61058 -54.62921 202.28513 -55.48276 curveto 206.95923 -56.3363
215.37314 -58.0434 219.11295 -58.89738 curveto gsave 1.13791 SLW 0
0 1  setrgbcolor  1. .setopacityalpha  0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 140.01436 -36.70384
  false NArray  /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial 549 2853 a
tx@Dict begin { 54.08694 -188.64182 } PutCoor PutBegin  end
 549
2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 170.71646
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq false and exch 2 lt true and or {
/viceversa 0.0  170.71646  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 56.90549  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT
0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline  moveto
x maxTickline  lineto } { x tickstart STsize mul  moveto x tickend
STsize mul  lineto } ifelse } if } for /dsubT 0 def subTwidth SLW subTColor
subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart  moveto cntTick tickend  lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 0 56.90549
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq true and exch 2 lt false and or {
/viceversa 0.0  56.90549  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 170.71646  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
549 2853 a
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 242.53297 -188.35701 } PutCoor PutBegin  end
 549 2853 a 483 2878
a Fd(time)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 35.98401 -137.14243 } PutCoor PutBegin  end
 549 2853 a
493 2873 a Fd(rate)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 0.6 0.6 0.6  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 139.44518 -183.5201 139.44518 -134.58134    /Lineto /lineto
load def false 0  setlinejoin Line  gsave 1.13791 SLW 0.6 0.6 0.6 
setrgbcolor  1. .setopacityalpha   0  setlinecap [  4.55254  4.55254
] 0 0 add  DashLine  grestore end
 
@endspecial 549 2853 a
tx@Dict begin { 139.33838 -200.8763 } PutCoor PutBegin  end
 549 2853 a 521 2870
a Fd(t)542 2878 y Fi(1)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853
a
tx@Dict begin { 297.74483 -138.70712 } PutCoor PutBegin  end
 549 2853 a 437 2864 a Fd(q)474 2872 y Fi(1)528 2864
y Fd(>)e(q)625 2872 y Fi(2)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549
2853 a
tx@Dict begin { 54.08694 -279.6905 } PutCoor PutBegin  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 170.71646
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq false and exch 2 lt true and or {
/viceversa 0.0  170.71646  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 56.90549  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT
0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 10 subTNo div 9.99 { /dx exch def /x cntTick dT
dx log mul add def x abs MinValue abs le { false { x minTickline  moveto
x maxTickline  lineto } { x tickstart STsize mul  moveto x tickend
STsize mul  lineto } ifelse } if } for /dsubT 0 def subTwidth SLW subTColor
subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick
tickstart STsize mul  moveto cntsubTick tickend STsize mul  lineto
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart  moveto cntTick tickend  lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1.
.setopacityalpha  Arrow  EndArrow  } def   /showOrigin true def 0 56.90549
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def L 0  setlinejoin 0  setlinecap stroke  stroke /yStart exch def
/xStart exch def 1 dup 2 mod 0 eq true and exch 2 lt false and or {
/viceversa 0.0  56.90549  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline 0.0  def /maxTickline 170.71646  def /dT 5594037
abs 65536 div viceversa { neg } if def /subTNo 1 def subTNo 0 gt {
/dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0 2.27626 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke { 0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke { 0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 10 subTNo
div 9.99 { /dx exch def /x cntTick dT dx log mul add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 10 subTNo div 9.99
{ /dx exch def /x cntTick dT dx log mul add def x abs MinValue abs
le { false { x minTickline exch moveto x maxTickline exch lineto }
{ x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 56.90549 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 0.0 0.0    /Lineto /lineto load def false 0
 setlinejoin Line  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 549 2853 a
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853
a
tx@Dict begin { 242.53297 -279.40614 } PutCoor PutBegin  end
 549 2853 a 482 2878 a Fd(time)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a
549 2853 a
tx@Dict begin { 22.65982 -233.88158 } PutCoor PutBegin  end
 549 2853 a 424 2862 a Fd(pressure)549 2853
y
tx@Dict begin  PutEnd  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 0.6 0.6 0.6  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 139.44518 -274.56879 139.44518 -225.63004    /Lineto /lineto
load def false 0  setlinejoin Line  gsave 1.13791 SLW 0.6 0.6 0.6 
setrgbcolor  1. .setopacityalpha   0  setlinecap [  4.55254  4.55254
] 0 0 add  DashLine  grestore end
 
@endspecial 549
2853 a
tx@Dict begin { 139.33838 -291.92499 } PutCoor PutBegin  end
 549 2853 a 521 2870 a Fd(t)542 2878 y Fi(1)549
2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 310.70824 -229.75581 } PutCoor PutBegin  end
 549 2853 a 355 2870 a Fd(output)h(signal)
549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 22.45967 -247.53877 } PutCoor PutBegin  end
 549 2853 a 467 2878
a Fd(at)f(the)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549 2853 a
tx@Dict begin { 24.36256 -258.92014 } PutCoor PutBegin  end
 549 2853
a 369 2878 a Fd(bottom)i(hole)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 549
2853 a
tx@Dict begin { 215.24072 -117.79433 } PutCoor PutBegin  end
 549 2853 a 209 2870 a Fd(lag)f(due)h(to)f(stabilization)549
2853 y
tx@Dict begin  PutEnd  end
 549 2853 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.50565 2.0   1. .setopacityalpha  Arrow
 EndArrow  } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.50565 2.0   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 153.10237 -131.73633 163.34538 -120.35498
   /Lineto /lineto load def false 0  setlinejoin Line  gsave 1.13791
SLW 0  setgray  1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 140.01436 -142.54808
  false NArray  /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial 549 2853 a
tx@Dict begin { 202.33028 -13.65718 } PutCoor PutBegin  end
 549
2853 a 355 2870 a Fd(output)g(signal)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.50565 2.0   1. .setopacityalpha  Arrow
 EndArrow  } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.50565 2.0   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 172.45047 -18.4941 157.08574 -29.30629 
  /Lineto /lineto load def false 0  setlinejoin Line  gsave 1.13791
SLW 0  setgray  1. .setopacityalpha  0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.13791 SLW 0 0 1  setrgbcolor  newpath
55.22487 -234.73512 moveto 65.1835 -243.27104 lineto 70.16281 -247.53877
82.96646 -255.22113 90.7908 -258.63533 curveto 98.61555 -262.04996
112.13036 -266.31769 117.82082 -267.17123 curveto 123.51172 -268.02478
132.0472 -268.87833 140.5831 -268.87833 curveto gsave 1.13791 SLW 0
0 1  setrgbcolor  1. .setopacityalpha  0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.13791 SLW 0.6 0.6 0.6  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 167.32875 -270.58543 166.75957 -227.33757    /Lineto /lineto
load def false 0  setlinejoin Line  gsave 1.13791 SLW 0.6 0.6 0.6 
setrgbcolor  1. .setopacityalpha   0  setlinecap [  4.55254  4.55254
] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 139.44518 -269.44751
  false NArray  /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial 549 2853 a
tx@Dict begin { 93.69398 -129.17526 } PutCoor PutBegin  end
 549
2853 a 513 2862 a Fd(q)550 2870 y Fi(1)549 2853 y
tx@Dict begin  PutEnd  end
 549
2853 a 549 2853 a
tx@Dict begin { 196.53735 -151.93755 } PutCoor PutBegin  end
 549 2853 a 513 2862 a Fd(q)550 2870
y Fi(2)549 2853 y
tx@Dict begin  PutEnd  end
 549 2853 a 523 5340 a
 currentpoint currentpoint translate 1 1 div 1 1 div scale neg exch
neg exch translate
 523 5340 a 0
TeXcolorgray 872 5496 a Ff(Fig.)14 b(2.)25 b Fm(T)n(ypical)h(input)f
(and)h(output)e(signals)k(-)d(T)-6 b(ransien)n(t)26 b(phenomena.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 523
232 a Fm(4)154 b(PET504E)28 b(Adv)l(anced)c(W)-6 b(ell)26
b(T)-6 b(est)26 b(Analysis)p 0 TeXcolorgray 0 TeXcolorgray
581 448 a Fk({)p 0 TeXcolorgray 41 w(Abilit)n(y)i(of)g(reserv)n(oir)d
(to)i(transfer)g(\015uid,)h Fe(k)s(h)f Fk(\(or)g(transmissibilit)n(y)-7
b(,)2861 416 y Fb(k)q(h)p 2861 430 76 4 v 2879 477 a(\026)2947
448 y Fk(\).)p 0 TeXcolorgray 581 570 a({)p 0 TeXcolorgray
41 w(Determination)28 b(of)h(a)n(v)n(erage)c(reserv)n(oir)p
0.1 0.1 0.8 TeXcolorrgb 1950 540 a Fj(c1)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 2017
597 149 4 v 0.1 0.1 0.8 TeXcolorrgb 2017 570 a Fk(pres)p
0.1 0.1 0.8 TeXcolorrgb 2166 597 V 0.1 0.1 0.8 TeXcolorrgb(sure)p
0 TeXcolorgray(,)p 2365 503 65 4 v 27 w Fe(P)11 b Fk(,)29
b(whic)n(h)f(is)g(the)h(driving)f(force)p 0.1 0.1 0.8
TeXcolorrgb -454 538 a Fi(c1)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb -392 570 a Fh(Mu)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb(r)l(at)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
28 w(C)-45 b(\030)10 b(\020nar)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb Fm(:)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 78 556 75 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(a)n(v)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb 153 556 65 4 v 0.1 0.1 0.8 TeXcolorrgb -2
w(er)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
217 556 111 4 v 0.1 0.1 0.8 TeXcolorrgb(age)p 0 TeXcolorgray
664 670 a Fk(in)28 b(the)g(reserv)n(oir)p 0.1 0.1 0.8
TeXcolorrgb 1242 639 a Fj(c2)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb -454 658 a Fi(c2)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb -392 690 a Fh(Mu)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb(r)l(at)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
28 w(C)-45 b(\030)10 b(\020nar)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb Fm(:)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
26 w(Based)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -454
763 a(up)r(on)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
25 w(the)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 25
w(ex)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(pla)p 0
TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(na)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb(tion)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 26 w(y)n(ou)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb -454 836 a(ga)n(v)n(e)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 26 w(ab)r(out)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 26 w(the)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
25 w(pres)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(sure)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -454 909 a(de)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(cline)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 26 w(re)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb(cen)n(tly)-6 b(,)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 25 w(I)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
26 w(am)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 26 w(not)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -454 982 a(sure)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 26 w(if)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 26 w(this)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 26 w(state)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(men)n
(t)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 26 w(is)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -454 1055 a(cor)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(rect.)p 0 TeXcolorgray
0 TeXcolorgray 581 769 a Fk({)p 0 TeXcolorgray 41 w(Prediction)27
b(of)g(rate)g(v)n(ersus)f(time)j(data.)p 0 TeXcolorgray
581 869 a({)p 0 TeXcolorgray 41 w(Initial)f(reco)n(v)n(ery)-7
b(,)25 b(is)j(the)f(reserv)n(oir)e(w)n(orth)i(pro)r(ducing.)p
0 TeXcolorgray 581 968 a({)p 0 TeXcolorgray 41 w(Is)h(there)f(an)n(y)g
(damage)f(around)h(the)h(w)n(ellb)r(ore)e(imp)r(eding)j(the)f(\015o)n
(w?)f(skin)g(factor,)g Fe(s)p Fk(.)p 0 TeXcolorgray 581
1068 a({)p 0 TeXcolorgray 41 w(Reserv)n(oir)f(description)h(\(t)n(yp)r
(e)h(of)f(reserv)n(oir,)e(\015o)n(w)i(b)r(oundaries)g(\(faults\)\).)p
0 TeXcolorgray 581 1168 a({)p 0 TeXcolorgray 41 w(Distance)34
b(to)h(\015uid)f(in)n(terface)p 0.1 0.1 0.8 TeXcolorrgb
1659 1138 a Fj(c1)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 1726 1194 153 4 v 0.1 0.1 0.8
TeXcolorrgb 1726 1168 a Fk(that)p 0 TeXcolorgray 34 w(is)h(imp)r(ortan)
n(t)f(determining)g(sw)n(ept)g(zone)g(for)p 0.1 0.1 0.8
TeXcolorrgb -454 1136 a Fi(c1)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb -392 1168 a Fh(Mu)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb(r)l(at)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
28 w(C)-45 b(\030)10 b(\020nar)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb Fm(:)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 78 1154 195 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(whic)n(h)p 0 TeXcolorgray 664 1267 a Fk(secondary)26
b(and)h(tertiary)g(metho)r(ds.)p 0.1 0.1 0.8 TeXcolorrgb
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 0 TeXcolorgray
523 1433 a(In)n(terpretation)g(of)g(w)n(ell)g(test)h(data)f(consist)g
(of)h(basically)f(three)g(steps:)p 0 TeXcolorgray 590
1616 a(\(i\))p 0 TeXcolorgray 42 w(Determination)36 b(of)f(the)h(one)f
(most)h(appropriate)d(reserv)n(oir)g(/)i(w)n(ellb)r(ore)g(\(mathe-)719
1716 y(matical\))f(mo)r(del)p 0.1 0.1 0.8 TeXcolorrgb
1305 1685 a Fj(c2)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 1372 1742 67 4 v 0.1 0.1 0.8
TeXcolorrgb 1372 1716 a Fk(of)p 0 TeXcolorgray 34 w(the)g(actual)f
(system.)g(W)-7 b(e)34 b(also)e(call)i(suc)n(h)f(a)g(mo)r(del)h(as)f
(the)p 0.1 0.1 0.8 TeXcolorrgb -454 1684 a Fi(c2)p 0
TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -392 1716 a Fh(Mu)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(r)l(at)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 28 w(C)-45 b(\030)10 b(\020nar)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb Fm(:)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb 78 1702 69
4 v 0.1 0.1 0.8 TeXcolorrgb 26 w(to)p 0 TeXcolorgray
719 1815 a Fk(in)n(terpretation)18 b(mo)r(del.)p 0.1 0.1 0.8
TeXcolorrgb 1501 1785 a Fj(c3)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1568 1842 169 4 v
0.1 0.1 0.8 TeXcolorrgb 1568 1815 a Fk(Here)p 0.1 0.1 0.8
TeXcolorrgb 1737 1842 20 4 v 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 1757 1842 121 4 v 0.1 0.1 0.8
TeXcolorrgb 20 w(our)p 0.1 0.1 0.8 TeXcolorrgb 1878 1842
20 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1898 1842 67 4 v 0.1 0.1 0.8 TeXcolorrgb 20 w(in)p 0.1 0.1 0.8
TeXcolorrgb 1965 1842 114 4 v 0.1 0.1 0.8 TeXcolorrgb
-2 w(ten)p 0.1 0.1 0.8 TeXcolorrgb 2078 1842 143 4 v
0.1 0.1 0.8 TeXcolorrgb -2 w(tion)p 0.1 0.1 0.8 TeXcolorrgb
2221 1842 20 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 2241 1842 56 4 v 0.1 0.1 0.8 TeXcolorrgb
20 w(is)p 0.1 0.1 0.8 TeXcolorrgb 2297 1842 20 4 v 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 2317 1842 74 4 v
0.1 0.1 0.8 TeXcolorrgb 20 w(to)p 0.1 0.1 0.8 TeXcolorrgb
2391 1842 20 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 2411 1842 139 4 v 0.1 0.1 0.8 TeXcolorrgb
20 w(\014nd)p 0.1 0.1 0.8 TeXcolorrgb 2549 1842 20 4
v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 2569
1842 42 4 v 0.1 0.1 0.8 TeXcolorrgb 20 w(a)p 0.1 0.1 0.8
TeXcolorrgb 2611 1842 20 4 v 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 2631 1842 116 4 v 0.1 0.1 0.8
TeXcolorrgb 20 w(rep)p 0.1 0.1 0.8 TeXcolorrgb 2747 1842
70 4 v 0.1 0.1 0.8 TeXcolorrgb(re)p 0.1 0.1 0.8 TeXcolorrgb
2817 1842 114 4 v 0.1 0.1 0.8 TeXcolorrgb(s)o(en)p 0.1 0.1 0.8
TeXcolorrgb 2930 1842 74 4 v 0.1 0.1 0.8 TeXcolorrgb
-2 w(ta)p 0.1 0.1 0.8 TeXcolorrgb 3004 1842 134 4 v 0.1 0.1 0.8
TeXcolorrgb(tiv)n(e)p 0.1 0.1 0.8 TeXcolorrgb 3138 1842
20 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
3157 1842 190 4 v 0.1 0.1 0.8 TeXcolorrgb 19 w(math)p
0.1 0.1 0.8 TeXcolorrgb 3346 1842 37 4 v 0.1 0.1 0.8
TeXcolorrgb(e)p 0.1 0.1 0.8 TeXcolorrgb 3383 1842 28
4 v 0.1 0.1 0.8 TeXcolorrgb(-)p 0.1 0.1 0.8 TeXcolorrgb
-454 1802 a Fi(c3)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb -392 1834 a Fh(Mu)p 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb(r)l(at)p 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 28 w(C)-45 b(\030)10 b(\020nar)p
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb Fm(:)p
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb 78 1820 156 4 v 0.1 0.1 0.8 TeXcolorrgb 26
w(Here)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb 234
1820 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 260 1820 112 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(our)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -454 1893 161 4 v 0.1 0.1 0.8 TeXcolorrgb
-454 1907 a(hop)r(e)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
-294 1893 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -268 1893 52 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(is)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
-217 1893 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -191 1893 141 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(that)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -50 1893 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -24 1893 107 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(the)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb 83 1893 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb 109 1893 203 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(mo)r(del)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb -454 1966 114 4 v 0.1 0.1 0.8 TeXcolorrgb
-454 1980 a(c)n(ho)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -341 1966 108 4 v 0.1 0.1 0.8
TeXcolorrgb(sen)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
-234 1966 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -208 1966 120 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(will)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -90 1966 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -64 1966 114 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(pro)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb 49 1966 154 4 v 0.1 0.1 0.8
TeXcolorrgb 2 w(duce)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb 203 1966 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb 229 1966 82 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(an)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -454 2039 111 4 v 0.1 0.1 0.8 TeXcolorrgb
-454 2053 a(out)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -343 2039 116 4 v 0.1 0.1 0.8
TeXcolorrgb(put)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
-227 2039 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -201 2039 91 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(sig)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -112 2039 103 4 v 0.1 0.1 0.8
TeXcolorrgb(nal)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
-10 2039 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 16 2039 69 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(to)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb 84
2039 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 110 2039 39 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(a)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb 148
2039 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 174 2039 175 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(giv)n(en)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -454 2112 64 4 v 0.1 0.1 0.8 TeXcolorrgb
-454 2126 a(in)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -390 2112 116 4 v 0.1 0.1 0.8
TeXcolorrgb(put)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
-274 2112 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -248 2112 195 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(whic)n(h)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -54 2112 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -28 2112 52 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(is)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
23 2112 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 49 2112 69 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(as)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb 117
2112 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 143 2112 159 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(close)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
300 2112 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 326 2112 69 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(as)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
-454 2185 114 4 v 0.1 0.1 0.8 TeXcolorrgb -454 2199 a(p)r(os)p
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -341 2185 52 4 v 0.1 0.1 0.8 TeXcolorrgb(si)p
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -290 2185 99 4 v 0.1 0.1 0.8 TeXcolorrgb(ble)p
0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb -192 2185 26
4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -166 2185 69 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(to)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb -98
2185 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb -72 2185 141 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(that)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
69 2185 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 95 2185 62 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(of)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb 156
2185 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1 0 0 TeXcolorrgb 182 2185 107 4 v 0.1 0.1 0.8 TeXcolorrgb
26 w(the)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1 0 0
TeXcolorrgb -454 2258 73 4 v 0.1 0.1 0.8 TeXcolorrgb
-454 2272 a(ac)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -382 2258 133 4 v 0.1 0.1 0.8
TeXcolorrgb(tual)p 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
-250 2258 26 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -224 2258 102 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(sys)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb -123 2258 150 4 v 0.1 0.1 0.8
TeXcolorrgb(tem.)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 719 1942 143 4 v 0.1 0.1 0.8 TeXcolorrgb
719 1915 a Fk(mat)p 0.1 0.1 0.8 TeXcolorrgb 862 1942
24 4 v 0.1 0.1 0.8 TeXcolorrgb(i)p 0.1 0.1 0.8 TeXcolorrgb
885 1942 102 4 v 0.1 0.1 0.8 TeXcolorrgb(cal)p 0.1 0.1 0.8
TeXcolorrgb 987 1942 21 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1008 1942 220 4 v 0.1 0.1 0.8 TeXcolorrgb
21 w(mo)r(del)p 0.1 0.1 0.8 TeXcolorrgb 1227 1942 21
4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1248
1942 153 4 v 0.1 0.1 0.8 TeXcolorrgb 21 w(that)p 0.1 0.1 0.8
TeXcolorrgb 1400 1942 21 4 v 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 1421 1942 70 4 v 0.1 0.1 0.8
TeXcolorrgb 21 w(re)p 0.1 0.1 0.8 TeXcolorrgb 1491 1942
123 4 v 0.1 0.1 0.8 TeXcolorrgb(pro)p 0.1 0.1 0.8 TeXcolorrgb
1614 1942 222 4 v 0.1 0.1 0.8 TeXcolorrgb 2 w(duces,)p
0.1 0.1 0.8 TeXcolorrgb 1836 1942 21 4 v 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1857 1942 75 4 v
0.1 0.1 0.8 TeXcolorrgb 21 w(as)p 0.1 0.1 0.8 TeXcolorrgb
1932 1942 21 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1953 1942 172 4 v 0.1 0.1 0.8 TeXcolorrgb
21 w(clo)o(se)p 0.1 0.1 0.8 TeXcolorrgb 2124 1942 21
4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 2144
1942 75 4 v 0.1 0.1 0.8 TeXcolorrgb 20 w(as)p 0.1 0.1 0.8
TeXcolorrgb 2219 1942 21 4 v 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 2239 1942 123 4 v 0.1 0.1 0.8
TeXcolorrgb 20 w(p)r(os)p 0.1 0.1 0.8 TeXcolorrgb 2362
1942 56 4 v 0.1 0.1 0.8 TeXcolorrgb(s)o(i)p 0.1 0.1 0.8
TeXcolorrgb 2417 1942 130 4 v 0.1 0.1 0.8 TeXcolorrgb(ble,)p
0.1 0.1 0.8 TeXcolorrgb 2546 1942 21 4 v 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 2567 1942 116 4 v
0.1 0.1 0.8 TeXcolorrgb 21 w(the)p 0.1 0.1 0.8 TeXcolorrgb
2682 1942 21 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 2702 1942 120 4 v 0.1 0.1 0.8 TeXcolorrgb
20 w(out)p 0.1 0.1 0.8 TeXcolorrgb 2822 1942 125 4 v
0.1 0.1 0.8 TeXcolorrgb(put)p 0.1 0.1 0.8 TeXcolorrgb
2946 1942 21 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 2967 1942 67 4 v 0.1 0.1 0.8 TeXcolorrgb
21 w(o)o(f)p 0.1 0.1 0.8 TeXcolorrgb 3033 1942 21 4 v
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 3054
1942 116 4 v 0.1 0.1 0.8 TeXcolorrgb 21 w(the)p 0.1 0.1 0.8
TeXcolorrgb 3169 1942 21 4 v 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 3190 1942 79 4 v 0.1 0.1 0.8
TeXcolorrgb 21 w(a)o(c)p 0.1 0.1 0.8 TeXcolorrgb 3268
1942 143 4 v 0.1 0.1 0.8 TeXcolorrgb(tual)p 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
719 2041 110 4 v 0.1 0.1 0.8 TeXcolorrgb 719 2014 a(sys)p
0.1 0.1 0.8 TeXcolorrgb 829 2041 139 4 v 0.1 0.1 0.8
TeXcolorrgb(tem)p 0.1 0.1 0.8 TeXcolorrgb 967 2041 30
4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 997
2041 100 4 v 0.1 0.1 0.8 TeXcolorrgb 30 w(for)p 0.1 0.1 0.8
TeXcolorrgb 1097 2041 30 4 v 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 1127 2041 42 4 v 0.1 0.1 0.8
TeXcolorrgb 30 w(a)p 0.1 0.1 0.8 TeXcolorrgb 1169 2041
30 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
1199 2041 190 4 v 0.1 0.1 0.8 TeXcolorrgb 30 w(giv)n(en)p
0.1 0.1 0.8 TeXcolorrgb 1389 2041 30 4 v 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1419 2041 70 4 v
0.1 0.1 0.8 TeXcolorrgb 30 w(in)p 0.1 0.1 0.8 TeXcolorrgb
1488 2041 148 4 v 0.1 0.1 0.8 TeXcolorrgb(put.)p 0 TeXcolorgray
29 w(This)29 b(is)h(kno)n(wn)f(as)h(the)g(in)n(v)n(erse)e(problem.)p
0.1 0.1 0.8 TeXcolorrgb 3082 1984 a Fj(c4)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 3149
2041 116 4 v 0.1 0.1 0.8 TeXcolorrgb 3149 2014 a Fk(W)-7
b(e)p 0.1 0.1 0.8 TeXcolorrgb 3264 2041 30 4 v 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 3294 2041 111 4 v
0.1 0.1 0.8 TeXcolorrgb 30 w(are)p 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb -454 2360 a Fi(c4)p 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb -392 2392 a Fh(Mu)p
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb(r)l(at)p
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 28 w(C)-45
b(\030)10 b(\020nar)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb Fm(:)p 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 26 w Fh(T)-6 b(ext)p 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb -454 2465 a(adde)l(d.)p 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
719 2141 109 4 v 0.1 0.1 0.8 TeXcolorrgb 719 2114 a Fk(try)p
0.1 0.1 0.8 TeXcolorrgb 828 2141 111 4 v 0.1 0.1 0.8
TeXcolorrgb(ing)p 0.1 0.1 0.8 TeXcolorrgb 939 2141 29
4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 968
2141 74 4 v 0.1 0.1 0.8 TeXcolorrgb 29 w(to)p 0.1 0.1 0.8
TeXcolorrgb 1042 2141 29 4 v 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 1071 2141 88 4 v 0.1 0.1 0.8
TeXcolorrgb 29 w(ob)p 0.1 0.1 0.8 TeXcolorrgb 1159 2141
143 4 v 0.1 0.1 0.8 TeXcolorrgb(tain)p 0.1 0.1 0.8 TeXcolorrgb
1302 2141 29 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1331 2141 70 4 v 0.1 0.1 0.8 TeXcolorrgb
29 w(in)p 0.1 0.1 0.8 TeXcolorrgb 1400 2141 100 4 v 0.1 0.1 0.8
TeXcolorrgb(for)p 0.1 0.1 0.8 TeXcolorrgb 1500 2141 111
4 v 0.1 0.1 0.8 TeXcolorrgb(ma)p 0.1 0.1 0.8 TeXcolorrgb
1611 2141 143 4 v 0.1 0.1 0.8 TeXcolorrgb(tion)p 0.1 0.1 0.8
TeXcolorrgb 1754 2141 29 4 v 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 1783 2141 210 4 v 0.1 0.1 0.8
TeXcolorrgb 29 w(ab)r(out)p 0.1 0.1 0.8 TeXcolorrgb 1993
2141 29 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
2022 2141 116 4 v 0.1 0.1 0.8 TeXcolorrgb 29 w(the)p
0.1 0.1 0.8 TeXcolorrgb 2137 2141 29 4 v 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 2166 2141 167 4 v
0.1 0.1 0.8 TeXcolorrgb 29 w(ph)n(ys)p 0.1 0.1 0.8 TeXcolorrgb
2333 2141 24 4 v 0.1 0.1 0.8 TeXcolorrgb(i)p 0.1 0.1 0.8
TeXcolorrgb 2356 2141 102 4 v 0.1 0.1 0.8 TeXcolorrgb(cal)p
0.1 0.1 0.8 TeXcolorrgb 2458 2141 29 4 v 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 2486 2141 110 4 v
0.1 0.1 0.8 TeXcolorrgb 28 w(sys)p 0.1 0.1 0.8 TeXcolorrgb
2596 2141 139 4 v 0.1 0.1 0.8 TeXcolorrgb(tem)p 0.1 0.1 0.8
TeXcolorrgb 2734 2141 29 4 v 0.1 0.1 0.8 TeXcolorrgb
0.1 0.1 0.8 TeXcolorrgb 2763 2141 88 4 v 0.1 0.1 0.8
TeXcolorrgb 29 w(b)m(y)p 0.1 0.1 0.8 TeXcolorrgb 2850
2141 29 4 v 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
2879 2141 79 4 v 0.1 0.1 0.8 TeXcolorrgb 29 w(us)p 0.1 0.1 0.8
TeXcolorrgb 2957 2141 111 4 v 0.1 0.1 0.8 TeXcolorrgb
-1 w(ing)p 0.1 0.1 0.8 TeXcolorrgb 3068 2141 29 4 v 0.1 0.1 0.8
TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 3097 2141 88 4 v
0.1 0.1 0.8 TeXcolorrgb 29 w(o)o(b)p 0.1 0.1 0.8 TeXcolorrgb
3184 2141 227 4 v 0.1 0.1 0.8 TeXcolorrgb(ser)o(v)n(ed)p
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 719 2241 148 4 v 0.1 0.1 0.8 TeXcolorrgb
719 2214 a(mea)p 0.1 0.1 0.8 TeXcolorrgb 867 2241 149
4 v 0.1 0.1 0.8 TeXcolorrgb(sure)p 0.1 0.1 0.8 TeXcolorrgb
1016 2241 238 4 v 0.1 0.1 0.8 TeXcolorrgb(men)n(ts.)p
0 TeXcolorgray 27 w(Unfortunately)f(,)29 b(the)f(solution)g(of)g(in)n
(v)n(erse)f(problem)h(often)g(yields)719 2313 y(non-unique)k(results.)p
0.1 0.1 0.8 TeXcolorrgb 1447 2283 a Fj(c5)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1513
2340 103 4 v 0.1 0.1 0.8 TeXcolorrgb 1513 2313 a Fk(By)p
0 TeXcolorgray 32 w(non-unique)g(results,)g(w)n(e)f(mean)h(that)h(sev)n
(eral)d(di\013er-)p 0.1 0.1 0.8 TeXcolorrgb -454 2539
a Fi(c5)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -392
2570 a Fh(Mu)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(r)l(at)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 28 w(C)-45 b(\030)10
b(\020nar)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb Fm(:)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
78 2556 173 4 v 0.1 0.1 0.8 TeXcolorrgb 26 w(With)p 0
TeXcolorgray 719 2413 a Fk(en)n(t)35 b(in)n(terpretation)e(mo)r(dels)p
0.1 0.1 0.8 TeXcolorrgb 1688 2383 a Fj(c6)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb 1755
2440 153 4 v 0.1 0.1 0.8 TeXcolorrgb 1755 2413 a Fk(ma)n(y)p
0 TeXcolorgray 34 w(generate)g(an)h(output)h(signal)e(\(resp)r(onse\))h
(to)p 0.1 0.1 0.8 TeXcolorrgb -454 2657 a Fi(c6)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb -392 2688 a Fh(Mu)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb(r)l(at)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 28 w(C)-45 b(\030)10 b(\020nar)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb Fm(:)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb 78 2674 116 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(can)p 0 TeXcolorgray 719 2513 a Fk(a)30
b(giv)n(en)g(input)p 0.1 0.1 0.8 TeXcolorrgb 1235 2482
a Fj(c7)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8
TeXcolorrgb 1302 2539 153 4 v 0.1 0.1 0.8 TeXcolorrgb
1302 2513 a Fk(that)p 0 TeXcolorgray 30 w(is)g(similar)g(\(or)g(iden)n
(tical\))g(to)h(that)f(of)h(the)f(actual)g(system.)p
0.1 0.1 0.8 TeXcolorrgb -454 2775 a Fi(c7)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb -392 2806 a Fh(Mu)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb(r)l(at)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 28 w(C)-45 b(\030)10 b(\020nar)p 0 TeXcolorgray
0.1 0.1 0.8 TeXcolorrgb Fm(:)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb 78 2792 195 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(whic)n(h)p 0 TeXcolorgray 719 2612 a
Fk(The)28 b(in)n(v)n(erse)e(problem)h(can)g(b)r(e)h(represen)n(ted)f(b)
n(y)g(the)h(follo)n(wing)e(equation.)1802 2811 y Fe(\006)i
Fk(=)22 b Fe(O)r(=I)54 b Fa(\031)22 b Fe(S)982 b Fk(\(1\))719
2961 y(where)33 b Fe(\006)38 b Fk(denotes)c(the)g(in)n(terpretation)e
(mo)r(del,)i Fe(S)39 b Fk(denotes)33 b(the)h(actual)f(system.)719
3061 y(In)c(in)n(v)n(erse)f(problem,)h(as)g(can)f(b)r(e)i(seen)f(from)g
(Eq.,)g(it)g(ma)n(y)g(b)r(e)g(p)r(ossible)g(to)g(obtain)719
3160 y(the)h(same)f(outputs)h(to)g(a)f(giv)n(en)g Fe(I)37
b Fk(for)29 b(di\013eren)n(t)h Fe(\006)2372 3172 y Fb(i)2399
3160 y Fk('s)p 0.1 0.1 0.8 TeXcolorrgb -30 x Fj(c8)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 0.1 0.1 0.8 TeXcolorrgb
2522 3187 167 4 v 0.1 0.1 0.8 TeXcolorrgb 2522 3160 a
Fk(,ho)n(w)p 0.1 0.1 0.8 TeXcolorrgb 2689 3187 148 4
v 0.1 0.1 0.8 TeXcolorrgb -2 w(ev)n(er)p 0 TeXcolorgray(,)e(the)i(n)n
(um)n(b)r(er)f(of)p 0.1 0.1 0.8 TeXcolorrgb -454 3128
a Fi(c8)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb -392
3160 a Fh(Mu)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb(r)l(at)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 28 w(C)-45 b(\030)10
b(\020nar)p 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb Fm(:)p
0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 1 0 0 TeXcolorrgb
78 3146 22 4 v 0.1 0.1 0.8 TeXcolorrgb 26 w(.)p 0 TeXcolorgray
1 0 0 TeXcolorrgb 99 3146 26 4 v 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb 125 3146 148 4 v 0.1 0.1 0.8
TeXcolorrgb 26 w(Ho)n(w)p 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 1 0 0 TeXcolorrgb 272 3146 137 4 v 0.1 0.1 0.8
TeXcolorrgb -2 w(ev)n(er)p 0 TeXcolorgray 719 3260 a
Fk(alternativ)n(e)22 b(mo)r(dels)i(\(solutions\))f(can)g(b)r(e)h
(reduced)f(as)g(the)h(n)n(um)n(b)r(er)f(and)g(the)h(range)719
3359 y(of)k(output)g(signal)e(measuremen)n(ts.)p 0 TeXcolorgray
567 3459 a(\(ii\))p 0 TeXcolorgray 42 w(determinatio)h(ndldf)i(k)n
(omgf.)p 0.1 0.1 0.8 TeXcolorrgb 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 0
TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 0 TeXcolorgray 0.1 0.1 0.8
TeXcolorrgb 0 TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 0
TeXcolorgray 0.1 0.1 0.8 TeXcolorrgb 0 TeXcolorgray 523
3784 a Fl(References)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
